#######################################################################
#
# This file is a template for default config
#
#### WARNING: Any modifications to this domain will affect all payment types ####
#
# ## Mandatory config ##
# Any context that is relying on these defaults MUST declare the following properties:
#
# useDefaults=true
# Context.type=<unique numeric payment type code>
# payment.name=<alias that is used in conventions for entitlement names, audit and other areas (no spaces)>
#
# ## Optional config ##
# A context that is relying on these defaults can optionally declare the following properties.
# Where no value is provided, a sensible default will be used based on the payment.name value
#
# template.name=<alias that is used in conventions for entitlement names, audit and other areas (no spaces)>
# payment.displayname=<Display name for payment to appear on various SAM and Admin screens, including COS, product and entitlements>
# template.displayname=<Display name for template to appear on various SAM and Admin screens, including COS, product and entitlements>
#
# Examples:
# Context.type=500
# payment.name=SNPT
# template.name=SNPT
# payment.displayname=SNPT Payment
# template.displayname=SNPT Template
#
#TODO: Possible future properties to help configure behaviour:
# entitlementsEnabled=true|false (disable entitlements - useful when first adding a new type) default=true
# templatesEnabled=true|false (disable templates if not relevant to type) default=true
# recurringEnabled=true|false (enable support for recurring payments) default=false
# batchEnabled=true|false (enable batch and load default process into context) default=false
# batchResponseEnabled=true|false (enable a default batch response process in context) default=false
# maiEnabled=true|false (enable realtime MAI with default settings) default=false
#
# Any values following the pattern ##CONVENTION:<key>## are tokenised
# values that are populated automagically from the Conventions
# configuration domain 
#######################################################################

#User cannot create a Payment - it is initiated by the bank
createDisabled=false


# processor
Processor.name=com.s1.app.disbursements.process.PaymentsDisbursementProcessor

# processing schedule type (the VFMSvcTypecdky in VFMProcSchd)
# could be define either by constant name or directly by the value
ProcessingSchedule.type=##CONVENTION:ProcessingSchedule.type##

# Add the feature name for class of service
ClassOfServiceFeature.name=##CONVENTION:ClassOfServiceFeature.name##

ClassOfServiceReportFeature.name=##CONVENTION:ClassOfServiceFeature.reporting.name##
ClassOfServiceReportFeature.code=##CONVENTION:ClassOfServiceFeature.reporting.code##
ClassOfServiceReportFeature.msgCode=##CONVENTION:ClassOfServiceReportFeature.msgCode##

# common (or default) setting values
convertor.common=com.s1.payments.convertor.LightInstructionConvertor
templateConvertor.common=com.s1.payments.convertor.LightInstructionConvertor

# Implementation class that retrieves the related objects (accounts, targets, etc)
additionalData.common=com.s1.payments.dao.InstructionAdditionalData

executeManager.common=com.s1.emea.disbursement.common.adapter.ThirdPartyExecuteManager
history=true
templateHistory=false

#Default max number of days
MaximumNumberOfDays=366

#Default max number of recipients to be included in a bulk payment or collection.
MaximumBulkThirdPartyCount=25

#Default max number of details of payment fields could be added
MaximumDetailsOfPayment=4

pageDisclaimerId=CBKAcptPmt

accountEntitlement=##CONVENTION:account.entitlement##

approvalSystemFactory.common=com.s1.app.disbursements.common.CBIApprovalSystemFactory

# All of the common validators
validator.common.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.common.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.common.20=com.s1.app.disbursements.validator.TypeCodeValidator
// NumberOfDaysValidator (fatal) must be before DateValidator (warning) to avoid both messages in same time
#validator.common.40=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.common.50=com.s1.intl.disbursements.validator.DateValidator
validator.common.70=com.s1.payments.validator.AccountEntitlementValidator
validator.common.80=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.common.90=com.s1.app.disbursements.validator.DefaultCurrencyExchangeRateValidator

validator.common.240=com.s1.app.disbursements.limits.validator.NonApprovalUDCLimitValidator
validator.common.250=com.s1.app.disbursements.limits.validator.NonApprovalADCLimitValidator
validator.common.260=com.s1.app.disbursements.limits.validator.NonApprovalCDCLimitValidator
validator.common.270=com.s1.app.disbursements.limits.validator.NonApprovalTxTDCCLimitValidator
validator.common.280=com.s1.app.disbursements.limits.validator.NonApprovalCGDCLimitValidator

# All of the common template validators
validator.template.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.template.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.template.20=com.s1.app.disbursements.validator.TypeCodeValidator
validator.template.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.template.40=com.s1.payments.validator.AccountEntitlementValidator
validator.template.50=com.s1.payments.validator.TemplateNameValidator
validator.template.60=com.s1.emea.disbursement.common.validator.MaxAmountValidator
validator.template.70=com.s1.payments.validator.NullAmountValidator


# All the 'by transaction' limit validators
#validator.limit.byTransaction.10=com.s1.app.disbursements.limits.validator.UALimitValidator
validator.limit.byTransaction.10=com.s1.app.disbursements.limits.validator.CLimitValidator
validator.limit.byTransaction.20=com.s1.app.disbursements.limits.validator.TxTCLimitValidator
#User Transaction NonRepetitive Limit:
validator.limit.byTransaction.25=com.s1.app.disbursements.limits.validator.UTRLimitValidator
validator.limit.byTransaction.30=com.s1.app.disbursements.limits.validator.UTNRLimitValidator 
#User Transaction NonRepetitive Limit:
validator.limit.byTransaction.40=com.s1.emea.disbursement.common.validator.MaxAmountValidator

# Transaction limit validation for User Group.
validator.limit.byTransaction.50=com.s1.app.disbursements.limits.validator.CGTRLimitValidator
validator.limit.byTransaction.60=com.s1.app.disbursements.limits.validator.CGTNRLimitValidator 

# All the cumulative limit validators
#validator.limit.cumulative.10=com.s1.app.disbursements.limits.validator.UDCALimitValidator
validator.limit.cumulative.10=com.s1.app.disbursements.limits.validator.CDCLimitValidator
validator.limit.cumulative.20=com.s1.app.disbursements.limits.validator.TxTDCCLimitValidator
#User Daily Cumulative Approver Limit:
validator.limit.cumulative.30=com.s1.app.disbursements.limits.validator.UDCLimitValidator
# User Group Daily Cumulative Limit Validators.
validator.limit.cumulative.40=com.s1.app.disbursements.limits.validator.CGDCLimitValidator
#Account Daily Cumulative Approver Limit:
validator.limit.cumulative.50=com.s1.app.disbursements.limits.validator.ADCLimitValidator


#GBS-79035 : Start - Approval limit validations are done on Approve process
# All the validators executed on a 'ready to send' txn
validator.readyToSend.10=com.s1.app.disbursements.validator.NullValidator

# All the validators executed on a 'ready to send' txn that were previously scheduled
validator.stillScheduled.10=com.s1.app.disbursements.validator.NullValidator
#GBS-79035 : End

# All the validators executed on an old scheduled txn
validator.wasScheduled.10=com.s1.app.disbursements.limits.validator.CallerRemoveCumulativeLimitValidator

##Prenote Related validators
validator.prenote.prePreview.10=com.s1.frameworks.payments.validator.PrenoteExpiryDateValidator
validator.prenote.prePreview.20=com.s1.frameworks.payments.validator.LiveEntryValidator
validator.prenote.prePreview.30=com.s1.frameworks.payments.validator.EnforceHoldValidator
#validator.prenote.prePreview.40=com.s1.frameworks.payments.validator.PastPrenoteValidator
validator.prenote.prePreview.50=com.s1.frameworks.payments.validator.PrenoteInstructionCountValidator
validator.prenote.prePreview.60=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.prenote.prePreview.70=com.s1.payments.validator.NullAmountActiveStatusValidator

stateMachine.common=com.s1.emea.disbursement.common.state.CBIStateMachine

proxy.rejected.common=com.s1.app.disbursements.adapter.NullAdapterProxy
proxy.verifyNeeded.common=com.s1.app.disbursements.adapter.VerifyNeededProxy
proxy.multiAuthorization.common=com.s1.app.disbursements.adapter.MultipleAuthorizationAdapterProxy

#========================Policy and adapter proxy selection
#===== Default is direct (batch only) with null adapter. Override as needed.
adapterPolicy.common=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.common=com.s1.app.disbursements.adapter.NullAdapterProxy
proxy.batch.common=com.s1.app.disbursements.adapter.NullAdapterProxy

#===== Override for real time policy with asynchronous process queue message send 
# adapterPolicy.common=com.s1.app.disbursements.adapter.RealTimePolicy
# proxy.realTime.common=com.s1.payments.process.async.adapter.AsyncRealTimeProxy

#==== Override for for a real time MAI adapter
# adapterPolicy.common=com.s1.app.disbursements.adapter.realTime
# proxy.realTime.common=com.s1.app.disbursements.adapter.RealTimeMAIPaymentProxy

#==== Import configurations
import.linemapper=instructionLineMapper
dependent.handler.bean=passThroughHandler
import.skip.policy.bean=importsSkipPolicy
import.skip.count=20
import.instruction.holder=instructionValueHolder
import.instruction.convertor=instructionValueConvertor
import.holder=lineItemValueHolder
import.convertor=lineItemValueConvertor
import.reader.builder.class=defaultInstructionReaderBuilder
import.processor.validator.class=callerValidator
import.step.method=getFaultTolerantStep
import.job.processor=userDefinedImportJobProcessor
import.processor.builder.class=pmtProcessorBuilder
item.listener=defaultListener
import.validation.strategy=validationChainStategy
import.writer.builder.class=instructionsItemWriter
import.apply.chaining=true
#Standard Import default Configuration
standard.import.itemWriter=instructionsItemWriter
standard.import.job.processor=standardImportJobProcessor
standard.item.listener=defaultListener
standard.import.processor.builder.class=pmtProcessorBuilder

#Export
export.profile.dateFormat.enabled=true
# 0= All recipients, 1= All Active and Prenote, 2=All Active
export.rcptSelectOptions=0,1,2
export.job.processor=userDefinedExportJobProcessor
export.dependent.handler=passThroughHandler
export.itemReader=exportItemReader
export.itemWriter.builder.class=pmtWriterBuilder
export.step.method=getNonFaultTolerantStepNoThread
standard.export.step.method=getNonFaultTolerantStepNoThread
export.lineAggregator.class=instructionLineAggregator
export.instructionHolder=instructionHolder
export.lineItemHolder=lineItemHolder
export.header=defaultHeader
export.trailer=defaultTrailer
standard.export.itemReader=exportItemReader
standard.export.job.processor=standardExportJobProcessor
#Alerts
alert.paymentCreated=PaymentCreated
alert.paymentModified=PaymentModified
alert.awaitingFinalSignature=PaymentAwaitingFinalApproval
alert.paymentSent=PaymentSent
alert.paymentSentFailed=PaymentSendFailed

auditRecord.method.common=addFullRecordForDrCrValue

############################################
# Limit process Configurations #
############################################
limits.operation.create=increase
limits.operation.createFromTemplate=increase
limits.operation.create-from_template=increase
limits.operation.modify-from_template=increase
limits.operation.createRecurring=increase
limits.operation.create-from_specification=increase
limits.operation.createRecurringFromTemplate=increase
limits.operation.createNextRecurrence=increase
limits.operation.verify=increase
limits.operation.modify=increase
limits.operation.modifyRecurring=increase
limits.operation.modifyAddRecurring=increase
limits.operation.createSpecification=increase
limits.operation.modifySpecification=increase
limits.operation.deleteSpecification=decrease
limits.operation.approveSpecification=increase
limits.operation.delete=decrease
limits.operation.deleteRecurring=decrease
limits.operation.executeData=increase
limits.operation.approve=increase
limits.operation.executeValidate=increase
limits.operation.createFromImport=increase
limits.operation.deleteFromImport=decrease
##############################
# currency/country/bank type #
##############################
# the currencies use the alpha 3 code or "local" for local currency
# the countries use the iso alpha 2 code
# the bank types use the description from the VFMCode table
# the available lists can be :
# - missing: the only available value is the default one
# - the value "all": all values are accepted
# - the value "all_intl_pmt": all values for international payments
# - the value "all_intl_pmt_wo_local": all values for international payments excluding local
# - a list of values comma-separated (,)

#defaultCurrency=##DEFAULT-CURRENCY##
#availableCurrencies=GBP

#################
# State Machine #
#################

stateMachineDefinition.common=StateMachine_EMEA

##################
# Adapter policy #
##################


maiConverter.fromClass.add=com.s1.app.disbursements.DrCrDisbursementValue
maiConverter.toClass.add=com.s1.adapter.ns.r2001.PmtAddInp
maiConverter.converterClass.add=com.s1.intl.banking.mai.conversion.##ALIAS-UPPER-CASE##AddPaymentMaiConverter
maiResponseHandler.add=com.s1.intl.banking.mai.response.AddPaymentResponseHandler


#########
# audit #
#########
# 4 process properties are used for the creation of the AuditRecord:
# - auditRecord.function.XXXX: the audit function name
# - auditRecord.component.XXXX: the audit component name
# - auditRecord.class.XXXX: the object used to add all entries in the record
# - auditRecord.method.XXXX: the method used in the above object
# If auditRecord.function is not defined for the process, no audit will be done.
# The method defined must have the following signature:
# (AuditRecord _record, Object _object) where:
# - _record is the audit record with the component and the function already set;
# - _object is the object where to get the values to use in the addEntry methods
#   (i.e.: a ThirdPartyValue object in case of the CreateProcess)

# these are the default ones
# they could change for some processes (like the template ones)
auditRecord.component.common=##CONVENTION:auditRecord.component.common##
auditRecord.class.common=com.s1.payments.audit.InstructionAudit

#############
# processes #
#############

# when the user tries to access the create screen

Process.initialize.className=com.s1.payments.process.GenericInitializeProcess
validator.initialize.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
#TODO: Replace FromAccountsValidator with a PaymentAccountValidator that works better with GenericInitializeProcess
validator.initialize.20=com.s1.emea.disbursement.common.validator.FromAccountsValidator

#############

# when the user tries to create a new transaction
Process.create.className=com.s1.payments.process.PaymentCreateProcess
validator.create.10=com.s1.app.disbursements.validator.CommonValidator
validator.create.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.create.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.create.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.create.30=com.s1.payments.validator.NullAmountHoldStatusValidator

history.add.create=true
auditRecord.function.create=##CONVENTION:auditRecord.function.create##
entitlement.create=##CONVENTION:entitlement.create_modify_delete##
entitlement.create.debits=##CONVENTION:entitlement.create_modify_delete_debits##

# when the user tries to create a new transaction
Process.create-prenote.className=com.s1.payments.process.PaymentCreateProcess
validator.create-prenote.10=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.create-prenote.20=com.s1.app.disbursements.validator.TypeCodeValidator
history.add.create-prenote=true
auditRecord.function.create-prenote=##CONVENTION:auditRecord.function.create##
entitlement.create-prenote=##CONVENTION:entitlement.create_modify_delete##

# when the user tries to retrieve a transaction
Process.get.className=com.s1.payments.process.GetProcess
validator.get.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.get.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.get.20=com.s1.payments.validator.NullAmountValidator
validator.get.30=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.get.40=com.s1.payments.validator.NullAmountActiveStatusValidator
#validator.get.20=entitlements validator (for view only)
convertor.get=com.s1.payments.convertor.BulkInstructionConvertor

# when we simply need to retrieve the basic information on a payment from the master table only (VFMINSTR)
Process.getDisbursement.className=com.s1.app.disbursements.process.GetDisbursementProcess
validator.getDisbursement.10=com.s1.app.disbursements.validator.NullValidator

# When the execute adapter batch processor runs
Process.batch-execute-adapter.className=com.s1.payments.process.PaymentExecuteAdapterProcess
validator.batch-execute-adapter.10=com.s1.app.disbursements.validator.NullValidator

Process.get-batch.className=com.s1.payments.process.GetProcess
validator.get-batch.10=com.s1.app.disbursements.validator.NullValidator
convertor.get-batch=com.s1.payments.convertor.MinimalInstructionConvertor

Process.executeValidate.className=com.s1.app.disbursements.process.ExecuteValidateProcess
validator.executeValidate.10=com.s1.app.disbursements.validator.NullValidator

Process.modify-batch_execute.className=com.s1.payments.process.PaymentModifyBatchProcess
validator.modify-batch_execute.10=com.s1.app.disbursements.validator.NullValidator
convertor.modify-batch_execute=com.s1.payments.convertor.MinimalInstructionConvertor

# when the user tries to retrieve a transaction with all line items (when > 1)
Process.get-with-all-line-items.className=com.s1.payments.process.GetProcess
validator.get-with-all-line-items.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.get-with-all-line-items.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.get-with-all-line-items.20=com.s1.payments.validator.NullAmountValidator
validator.get-with-all-line-items.30=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.get-with-all-line-items.40=com.s1.payments.validator.NullAmountActiveStatusValidator
validator.get-with-all-line-items.50=com.s1.payments.validator.NullAmountPrenoteStatusValidator
convertor.get-with-all-line-items=com.s1.payments.convertor.BulkInstructionConvertor

# when the user retrieves a set of paged line items
Process.getPagedLineItemsByCriteria.className=com.s1.payments.process.GetPagedLineItemsProcess
convertor.getPagedLineItemsByCriteria=com.s1.payments.convertor.PagedLineItemsConvertor
additionalData.getPagedLineItemsByCriteria=com.s1.payments.dao.PagedLineItemsAdditionalData

# when the user tries to modify a transaction
Process.modify.className=com.s1.payments.process.PaymentModifyProcess
validator.modify.10=com.s1.app.disbursements.validator.CommonValidator
validator.modify.20=com.s1.payments.validator.ClearApprovedByUsersValidator
validator.modify.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.modify.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendOrWasScheduledValidator
validator.modify.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.modify.50=com.s1.payments.validator.NullAmountHoldStatusValidator


validator.modify.40=com.s1.frameworks.payments.validator.IntlPmtUDCLimitValidator

history.add.modify=true
auditRecord.function.modify=##CONVENTION:auditRecord.function.modify##
entitlement.modify=##CONVENTION:entitlement.create_modify_delete##

Process.modify-from_template.className=com.s1.payments.process.PaymentModifyProcess
validator.modify-from_template.10=com.s1.app.disbursements.validator.CommonValidator
validator.modify-from_template.20=com.s1.payments.validator.ClearApprovedByUsersValidator
validator.modify-from_template.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.modify-from_template.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendOrWasScheduledValidator
validator.modify-from_template.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

history.add.modify-from_template=true
auditRecord.function.modify-from_template=##CONVENTION:auditRecord.function.modify##
entitlement.modify-from_template=##CONVENTION:entitlement.create-from_template##


validator.modify-from_template.40=com.s1.frameworks.payments.validator.IntlPmtUDCLimitValidator

Process.modify-prenote.className=com.s1.payments.process.PaymentModifyProcess
validator.modify-prenote.10=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.modify-prenote.20=com.s1.app.disbursements.validator.TypeCodeValidator
history.add.modify-prenote=true
auditRecord.function.modify-prenote=##CONVENTION:auditRecord.function.modify##
entitlement.modify-prenote=##CONVENTION:entitlement.create_modify_delete##

# change status-similar to modify except only the status changes
Process.changeStatus.className=com.s1.emea.disbursement.common.process.EMEAChangeStatusProcess
validator.changeStatus.10=com.s1.app.disbursements.validator.NullValidator
history.add.changeStatus=true
auditRecord.function.changeStatus=##CONVENTION:auditRecord.function.modify##
entitlement.changeStatus=##CONVENTION:entitlement.create_modify_delete##

# when the user tries to delete a transaction
Process.delete.className=com.s1.payments.process.PaymentDeleteProcess
validator.delete.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.delete.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.delete.20=com.s1.payments.validator.AccountEntitlementValidator 
validator.delete.30=com.s1.payments.validator.NullAmountValidator
validator.delete.Z0=com.s1.emea.disbursement.common.validator.CallerWasScheduledValidator
validator.delete.40=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator


validator.delete.50=com.s1.app.disbursements.limits.validator.UDCLimitValidator
validator.delete.60=com.s1.app.disbursements.limits.validator.ADCLimitValidator
validator.delete.70=com.s1.app.disbursements.limits.validator.CDCLimitValidator
validator.delete.80=com.s1.app.disbursements.limits.validator.TxTDCCLimitValidator

history.add.delete=true
auditRecord.class.delete=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.function.delete=##CONVENTION:auditRecord.function.delete##
entitlement.delete=##CONVENTION:entitlement.delete##
#for physically deleting payment use LightInstructionConvertor for logical deletion just use following.
convertor.delete=com.s1.payments.convertor.MinimalInstructionConvertor

#############

# when the user tries to create a new transaction based on a specification
Process.create-from_specification.className=com.s1.payments.process.PaymentCreateProcess
validator.create-from_specification.10=com.s1.app.disbursements.validator.CommonValidator
validator.create-from_specification.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.create-from_specification.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.create-from_specification.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

#GBS-42214 : Commented as extra audit activity getting logged for this.
#auditRecord.function.create-from_specification=##CONVENTION:auditRecord.function.create##
history.add.create-from_specification=true
#auditRecord.function.create-from_specification=##CONVENTION:auditRecord.function.create##
entitlement.create-from_specification=##CONVENTION:entitlement.view##

# when the user tries to create a new transaction based on a template
Process.create-from_template.className=com.s1.payments.process.PaymentCreateProcess
validator.create-from_template.10=com.s1.app.disbursements.validator.CommonValidator
validator.create-from_template.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.create-from_template.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.create-from_template.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.create-from_template.30=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.create-from_template.40=com.s1.payments.validator.RepetitivePmtImportNullAmountActiveStatusValidator

auditRecord.function.create-from_template=##CONVENTION:auditRecord.function.create##
history.add.create-from_template=true
auditRecord.function.create-from_template=##CONVENTION:auditRecord.function.create##
entitlement.create-from_template=##CONVENTION:entitlement.create-from_template##
#############

# validation performed to check if the user could verify the transaction
Process.verifyInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.verifyInit.10=com.s1.emea.disbursement.common.validator.UserVerifyValidator
validator.verifyInit.20=com.s1.app.disbursements.validator.CommonValidator
entitlement.verifyInit=##CONVENTION:entitlement.verify##

#############

# when the user tries to verify a transaction
Process.verify.className=com.s1.app.disbursements.process.ModifyProcess
validator.verify.10=com.s1.emea.disbursement.common.validator.UserVerifyValidator
validator.verify.20=com.s1.app.disbursements.validator.CommonValidator
validator.verify.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.verify.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
history.add.verify=true
auditRecord.function.verify=##CONVENTION:auditRecord.function.verify##
entitlement.verify=##CONVENTION:entitlement.verify##

# Approve 
# validation performed to check if the user can approve the transaction
Process.approveInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.approveInit.10=com.s1.payments.common.validator.UserApprovalValidator
validator.approveInit.20=com.s1.app.disbursements.validator.CommonValidator

validator.approveInit.20=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.approveInit.30=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.approveInit.40=com.s1.app.disbursements.validator.TypeCodeValidator
#validator.approveInit.50=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.approveInit.60=com.s1.intl.disbursements.validator.IgnoreOffsetDateValidator
#validator.approveInit.70=com.s1.payments.validator.AccountEntitlementValidator
validator.approveInit.80=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.approveInit.90=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.approveInit.100=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.approveInit.110=com.s1.payments.validator.NullAmountActiveStatusValidator
validator.approveInit.120=com.s1.payments.validator.NullAmountPrenoteStatusValidator
entitlement.approveInit=##CONVENTION:entitlement.approve##

# Approve 
# validation performed to check if the user can submit and approve the transaction
Process.approveOnSubmitInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.approveOnSubmitInit.10=com.s1.payments.common.validator.UserApproveOnSubmitValidator
validator.approveOnSubmitInit.20=com.s1.app.disbursements.validator.CommonValidator
validator.approveOnSubmitInit.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

entitlement.approveOnSubmitInit=##CONVENTION:entitlement.approve_own_nonrepetitive##

# Approve on Submit repetitive payment
# validation performed to check if the user can submit and approve the transaction
Process.approveOnSubmitRepInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.approveOnSubmitRepInit.10=com.s1.payments.common.validator.UserApproveOnSubmitValidator
validator.approveOnSubmitRepInit.20=com.s1.app.disbursements.validator.CommonValidator
validator.approveOnSubmitRepInit.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

entitlement.approveOnSubmitRepInit=##CONVENTION:entitlement.approve_own_repetitive##

# when the user tries to approve a transaction
Process.approve.className=com.s1.payments.process.PaymentApproveProcess
validator.approve.10=com.s1.payments.common.validator.UserApprovalValidator
validator.approve.20=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.approve.30=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.approve.40=com.s1.app.disbursements.validator.TypeCodeValidator
#validator.approve.50=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.approve.60=com.s1.intl.disbursements.validator.IgnoreOffsetDateValidator
#validator.approve.70=com.s1.payments.validator.AccountEntitlementValidator
validator.approve.Y0=com.s1.app.disbursements.validator.DefaultCurrencyExchangeRateValidator
validator.approve.80=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.approve.85=com.s1.payments.validator.UpdateApprovedByUsersValidator
#validator.approve.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.approve.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.approve.90=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.approve.100=com.s1.app.disbursements.limits.validator.ApprovalUDCLimitValidator
validator.approve.110=com.s1.app.disbursements.limits.validator.ApprovalADCLimitValidator
validator.approve.120=com.s1.app.disbursements.limits.validator.ApprovalCDCLimitValidator
validator.approve.130=com.s1.app.disbursements.limits.validator.ApprovalTxTDCCLimitValidator
validator.approve.140=com.s1.app.disbursements.limits.validator.ApprovalCGDCLimitValidator
validator.approve.150=com.s1.payments.validator.SetDefaultAmountValidator
#GBS-79035
#User Approval repetative and non repetative Limit.
validator.approve.160=com.s1.app.disbursements.limits.validator.UANRLimitValidator
validator.approve.170=com.s1.app.disbursements.limits.validator.UARLimitValidator
# User Group approval repetative and non repetative Limit.
validator.approve.180=com.s1.app.disbursements.limits.validator.CGANRLimitValidator
validator.approve.190=com.s1.app.disbursements.limits.validator.CGARLimitValidator

history.add.approve=true
auditRecord.class.approve=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.function.approve=##CONVENTION:auditRecord.function.approve##
entitlement.approve=##CONVENTION:entitlement.approve##
convertor.approve=com.s1.payments.convertor.MinimalInstructionConvertor

# when the user fail to sign a transaction
Process.signFailedLog.className=com.s1.emea.disbursement.common.process.AuditProcess
#auditRecord.function.signFailedLog=##CONVENTION:auditRecord.function.signFailedLog##

# when the maximum of failed attempts is exceeded during the sign action
Process.signLastFailedLog.className=com.s1.emea.disbursement.common.process.AuditProcess
#auditRecord.function.signLastFailedLog=##CONVENTION:auditRecord.function.signLastFailedLog##

#############

# Reject
# validation performed to check if the user can reject the transaction
Process.rejectInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.rejectInit.10=com.s1.payments.common.validator.UserApprovalValidator
validator.rejectInit.20=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.rejectInit.30=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.rejectInit.40=com.s1.app.disbursements.validator.TypeCodeValidator
// NumberOfDaysValidator (fatal) must be before DateValidator (warning) to avoid both messages in same time
#validator.rejectInit.50=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.rejectInit.70=com.s1.payments.validator.AccountEntitlementValidator 
validator.rejectInit.80=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.rejectInit.90=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
entitlement.rejectInit=##CONVENTION:entitlement.approve##

# when the user tries to reject a transaction
Process.reject.className=com.s1.app.disbursements.process.RejectProcess
validator.reject.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.reject.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.reject.15=com.s1.payments.common.validator.UserRejectionValidator
validator.reject.30=com.s1.payments.validator.AccountEntitlementValidator
validator.reject.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.reject.40=com.s1.payments.validator.SetDefaultAmountValidator
history.add.reject=true
auditRecord.class.reject=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.function.reject=##CONVENTION:auditRecord.function.reject##
entitlement.reject=##CONVENTION:entitlement.approve##
convertor.reject=com.s1.payments.convertor.MinimalInstructionConvertor

#############

# called during the execution of the batch job for each transaction to send
Process.executeData.className=com.s1.emea.disbursement.domestic.##ALIAS-LOWER-CASE##.process.##ALIAS-UPPER-CASE##ExecuteProcess
#validator.executeData.00=com.s1.emea.disbursement.common.validator.TestAmountValidator
validator.executeData.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.executeData.30=com.s1.app.disbursements.validator.InstructionBalanceValidator
validator.executeData.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
#validator.executeData.Z0=com.s1.app.disbursements.limits.validator.CallerAddCumulativeLimitValidator
validator.executeData.40= com.s1.app.disbursements.validator.SignatureFailedValidator
validator.executePmt.010=com.s1.app.disbursements.validator.ClassOfServiceValidator

auditRecord.function.executeData=##CONVENTION:auditRecord.function.executeData##
auditRecord.class.common=com.s1.payments.audit.InstructionAudit

# when a validation failed during the executeData process
auditRecord.function.executeData_validationFailed=##CONVENTION:auditRecord.function.executeData_validationFailed##


Process.executeData-processISO.className=com.s1.frameworks.payments.batch.process.PaymentStandardXMLExecuteProcess
validator.executeData-processISO.00=com.s1.app.disbursements.validator.NullValidator
validator.executeData-processISO.10= com.s1.app.disbursements.validator.SignatureFailedValidator
auditRecord.function.executeData-processISO=##CONVENTION:auditRecord.function.executeData##
convertor.executeData-processISO=com.s1.payments.convertor.BulkInstructionConvertor

#Process for executing batch using BeanIO
Process.executeData-processStd.className=com.s1.frameworks.payments.batch.process.PaymentStandardExecuteProcess
validator.executeData-processStd.00=com.s1.app.disbursements.validator.NullValidator
validator.executeData-processStd.10= com.s1.app.disbursements.validator.SignatureFailedValidator
auditRecord.function.executeData-processStd=##CONVENTION:auditRecord.function.executeData##
convertor.executeData-processStd=com.s1.payments.convertor.BulkInstructionConvertor

#############

# Templates
# when the user tries to create a new template
Process.createTemplate.className=com.s1.payments.process.TemplateCreateProcess
validator.createTemplate.10=com.s1.app.disbursements.validator.CallerTemplateValidator
validator.createTemplate.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
#validator.createTemplate.Y0=com.s1.intl.disbursements.limits.validator.CTemplateLimitValidator
#validator.createTemplate.Z0=com.s1.intl.disbursements.limits.validator.TxTCTemplateLimitValidator
auditRecord.method.createTemplate=addFullTemplateRecordForDrCrValue
history.add.createTemplate=true
auditRecord.component.createTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.createTemplate=##CONVENTION:auditRecord.function.createTemplate##
entitlement.createTemplate=##CONVENTION:entitlement.template_create_modify_delete##
entitlement.view=##CONVENTION:entitlement.view##
entitlement.viewTemplate=##CONVENTION:entitlement.template_view##

# when the user tries to retrieve a template
Process.getTemplate.className=com.s1.payments.process.GetTemplateProcess
validator.getTemplate.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.getTemplate.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.getTemplate.20=com.s1.payments.validator.NullAmountValidator
validator.getTemplate.30=com.s1.payments.validator.NullAmountActiveStatusValidator
validator.getTemplate.40=com.s1.payments.validator.NullAmountPrenoteStatusValidator
//validator.getTemplate.20=entitlements validator (for view only)

# when the user tries to retrieve a template with all line items (when > 1)
Process.getTemplate-with-all-line-items.className=com.s1.app.disbursements.process.GetTemplateProcess
validator.getTemplate-with-all-line-items.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.getTemplate-with-all-line-items.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.getTemplate-with-all-line-items.20=com.s1.payments.validator.NullAmountValidator
validator.getTemplate-with-all-line-items.30=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.getTemplate-with-all-line-items.40=com.s1.payments.validator.NullAmountActiveStatusValidator
validator.getTemplate-with-all-line-items.50=com.s1.payments.validator.NullAmountPrenoteStatusValidator
templateConvertor.getTemplate-with-all-line-items=com.s1.payments.convertor.BulkInstructionConvertor

# when the user tries to modify a template
Process.modifyTemplate.className=com.s1.payments.process.TemplateModifyProcess
validator.modifyTemplate.10=com.s1.app.disbursements.validator.CallerTemplateValidator
validator.modifyTemplate.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
#validator.modifyTemplate.Y0=com.s1.intl.disbursements.limits.validator.CTemplateLimitValidator
#validator.modifyTemplate.Z0=com.s1.intl.disbursements.limits.validator.TxTCTemplateLimitValidator
auditRecord.method.modifyTemplate=addFullTemplateRecordForDrCrValue
history.add.modifyTemplate=true
auditRecord.component.modifyTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.modifyTemplate=##CONVENTION:auditRecord.function.modifyTemplate##
entitlement.modifyTemplate=##CONVENTION:entitlement.template_create_modify_delete##

#When the verification is issued all Templates must go through the reapproval if Dual Auth is ON
Process.notifyTemplateVerification.className=com.s1.payments.process.ThirdPartyVerificationNotifyProcess
validator.notifyTemplateVerification.10=com.s1.app.disbursements.validator.NullValidator
#validator.notifyTemplateVerification.20=com.s1.app.disbursements.validator.CallerTemplateValidator
#validator.notifyTemplateVerification.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
entitlement.notifyTemplateVerification=##CONVENTION:entitlement.template_create_modify_delete##
templateConvertor.notifyTemplateVerification=com.s1.payments.convertor.MinimalInstructionConvertor

Process.deleteTemplate.className=com.s1.app.disbursements.process.template.DeleteTemplateProcess
validator.deleteTemplate.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.deleteTemplate.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.deleteTemplate.20=com.s1.payments.validator.AccountEntitlementValidator
validator.deleteTemplate.30=com.s1.payments.validator.NullAmountValidator
validator.deleteTemplate.40=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
history.add.deleteTemplate=true
auditRecord.method.deleteTemplate=addFullTemplateRecordForDrCrValue
auditRecord.class.deleteTemplate=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.component.deleteTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.deleteTemplate=##CONVENTION:auditRecord.function.deleteTemplate##
entitlement.deleteTemplate=##CONVENTION:entitlement.template_delete##
#for physically deleting payment use LightInstructionConvertor for logical deletion just use following.
templateConvertor.deleteTemplate=com.s1.payments.convertor.MinimalInstructionConvertor

Process.approveTemplateInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.approveTemplateInit.10=com.s1.emea.disbursement.common.validator.UserApproveTemplateValidator
validator.approveTemplateInit.20=com.s1.app.disbursements.validator.CallerTemplateValidator
validator.approveTemplateInit.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

entitlement.approveTemplateInit=##CONVENTION:entitlement.approveTemplate##
entitlement.approveOwnTemplate.approveTemplateInit=##CONVENTION:entitlement.approve_template_own##
templateConvertor.approveOwnTemplate=com.s1.payments.convertor.LightInstructionConvertor

Process.approveTemplate.className=com.s1.payments.process.TemplateApproveProcess
validator.approveTemplate.10=com.s1.emea.disbursement.common.validator.UserApproveTemplateValidator
validator.approveTemplate.20=com.s1.payments.validator.NullAmountValidator
validator.approveTemplate.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

auditRecord.method.approveTemplate=addFullTemplateRecordForDrCrValue
auditRecord.class.approveTemplate=com.s1.payments.audit.InstructionOnlyAudit
history.add.approveTemplate=true
auditRecord.component.approveTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.approveTemplate=##CONVENTION:auditRecord.function.approveTemplate##
entitlement.approveTemplate=##CONVENTION:entitlement.approveTemplate##
entitlement.approveOwnTemplate.approveTemplate=##CONVENTION:entitlement.approve_template_own##

entitlement.approveOwnTemplate=##CONVENTION:entitlement.approve_template_own##

# Reject
# validation performed to check if the user can reject the transaction
Process.rejectTemplateInit.className=com.s1.emea.disbursement.common.process.NoProcess
validator.rejectTemplateInit.10=com.s1.emea.disbursement.common.validator.UserApproveTemplateValidator
validator.rejectTemplateInit.20=com.s1.app.disbursements.validator.CallerTemplateValidator
validator.rejectTemplateInit.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
entitlement.rejectTemplateInit=##CONVENTION:entitlement.approveTemplate##
entitlement.approveOwnTemplate.rejectTemplateInit=##CONVENTION:entitlement.approve_template_own##

# when the user tries to reject a transaction
Process.rejectTemplate.className=com.s1.app.disbursements.process.TemplateRejectProcess
validator.rejectTemplate.00=com.s1.emea.disbursement.common.validator.UserApproveTemplateValidator
validator.rejectTemplate.10=com.s1.payments.validator.NullAmountValidator
validator.rejectTemplate.15=com.s1.payments.common.validator.UserRejectionValidator
validator.rejectTemplate.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
history.add.rejectTemplate=true
auditRecord.class.rejectTemplate=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.method.rejectTemplate=addFullTemplateRecordForDrCrValue
auditRecord.component.rejectTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.rejectTemplate=##CONVENTION:auditRecord.function.rejectTemplate##
entitlement.rejectTemplate=##CONVENTION:entitlement.approveTemplate##
templateConvertor.rejectTemplate=com.s1.payments.convertor.MinimalInstructionConvertor
entitlement.approveOwnTemplate.rejectTemplate=##CONVENTION:entitlement.approve_template_own##


Process.modify-execBatch.className=com.s1.payments.process.ExecBatchModifyProcess
validator.modify-execBatch.10=com.s1.app.disbursements.validator.NullValidator
auditRecord.function.modify-execBatch=##CONVENTION:auditRecord.function.modify##
entitlement.modify-execBatch=##CONVENTION:entitlement.create_modify_delete##
convertor.modify-execBatch=com.s1.payments.convertor.ExecBatchInstructionConvertor


# when the user tries to retrieve a transaction for exec batch processing
Process.get-forExecBatch.className=com.s1.payments.process.ExecBatchGetProcess
validator.get-forExecBatch.00=com.s1.payments.validator.NullAmountValidator
convertor.get-forExecBatch=com.s1.payments.convertor.BulkInstructionConvertor
#############

# notify when a third party is modified
Process.notify-thirdPartyModified.className=com.s1.payments.process.ThirdPartyModifiedProcess

# notify when a third party is deleted
Process.notify-thirdPartyDeleted.className=com.s1.payments.process.ThirdPartyDeletedProcess

#############

# when the user tries to see a list of templates by criteria
Process.getTemplateSummaryByCriteria.className=com.s1.emea.disbursement.common.process.template.CBIGetTemplateSummaryByCriteriaProcess
summary.getTemplateSummaryByCriteria=com.s1.payments.instruction.InstructionSummary
validator.getTemplateSummaryByCriteria.10=com.s1.app.disbursements.validator.NullValidator

# count the number of txn affected by an operation with a given criteria
# (used by the third party framework and by notify-thirdPartyModified)
Process.count.className=com.s1.app.disbursements.process.CountProcess

# when the system needs tp retrieve a list of transactions by criteria
# (used by notify-thirdPartyModified)
Process.getByCriteria.className=com.s1.app.disbursements.process.GetByCriteriaProcess
validator.getByCriteria.10=com.s1.app.disbursements.validator.NullValidator
validator.getByCriteria.20=com.s1.payments.validator.NullAmountValidator

# to delete a set of transaction by criteria
# (used by notify-thirdPartyDeleted & notify-thirdPartyModified)
Process.deleteByCriteria.className=com.s1.app.disbursements.process.DeleteByCriteriaProcess
validator.deleteByCriteria.10=com.s1.app.disbursements.validator.NullValidator
validator.deleteByCriteria.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator

# to delete a set of templates by criteria
# (used by notify-thirdPartyDeleted & notify-thirdPartyModified)
# (only needed if this context type is using template)
Process.deleteTemplateByCriteria.className=com.s1.app.disbursements.process.template.DeleteTemplateByCriteriaProcess
validator.deleteTemplateByCriteria.10=com.s1.app.disbursements.validator.NullValidator
validator.deleteTemplateByCriteria.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator


# (called by notify-thirdPartyModified for each template using the third party)
Process.modifyTemplate-thirdPartyModified.className=com.s1.payments.process.TemplateModifyProcess
validator.modifyTemplate-thirdPartyModified.10=com.s1.payments.validator.NullAmountValidator
#GBS-79050 Removing AccountEntitlementValidator - Entitlement check should NOT be done to confirm user has access to payment accounts
#validator.modifyTemplate-thirdPartyModified.20=com.s1.payments.validator.AccountEntitlementValidator
validator.modifyTemplate-thirdPartyModified.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
adapterPolicy.modifyTemplate-thirdPartyModified=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.modifyTemplate-thirdPartyModified=com.s1.app.disbursements.adapter.NullAdapterProxy
auditRecord.component.modifyTemplate-thirdPartyModified=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.modifyTemplate-thirdPartyModified=##CONVENTION:auditRecord.function.modifyTemplate##
auditRecord.method.modifyTemplate-thirdPartyModified=addFullTemplateRecordForDrCrValue
history.add.modifyTemplate-thirdPartyModified=true
entitlement.modifyTemplate-thirdPartyModified=##CONVENTION:entitlement.template_create_modify_delete##

# (called by notify-thirdPartyModified for each template using the third party)
Process.deleteTemplate-thirdPartyModified.className=com.s1.app.disbursements.process.template.DeleteTemplateProcess
validator.deleteTemplate-thirdPartyModified.10=com.s1.payments.validator.AccountEntitlementValidator
validator.deleteTemplate-thirdPartyModified.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
adapterPolicy.deleteTemplate-thirdPartyModified=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.deleteTemplate-thirdPartyModified=com.s1.app.disbursements.adapter.NullAdapterProxy
auditRecord.component.deleteTemplate-thirdPartyModified=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.deleteTemplate-thirdPartyModified=##CONVENTION:auditRecord.function.deleteTemplate##
auditRecord.method.deleteTemplate-thirdPartyModified=addFullTemplateRecordForDrCrValue
entitlement.deleteTemplate-thirdPartyModified=##CONVENTION:entitlement.template_delete##

#FROM BACS - TODO
# this is executed just before we create a new transaction from import.
validator.preCreateFromImport.10=com.s1.app.disbursements.validator.NullValidator

# when the user tries to create a new import
Process.createFromImport.className=com.s1.emea.disbursement.common.process.EMEACreateProcess
validator.createFromImport.10=com.s1.app.disbursements.validator.CommonValidator
validator.createFromImport.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.createFromImport.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.createFromImport.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.createFromImport.30=com.s1.frameworks.payments.validator.AccountVerificationValidators

auditRecord.function.createFromImport=##CONVENTION:auditRecord.function.create##
history.add.createFromImport=true
entitlement.createFromImport=##CONVENTION:entitlement.create_modify_delete##

Process.commitImport.className=com.s1.app.disbursements.process.ModifyProcess
validator.commitImport.10=com.s1.app.disbursements.validator.NullValidator

#############


# Import 'rollback' process
#Process.deleteFromImport.className=com.s1.emea.disbursement.set.process.DeleteProcess
#validator.deleteFromImport.10=com.s1.app.disbursements.validator.NullValidator

Process.deleteFromImport.className=com.s1.app.disbursements.process.DeleteProcess
validator.deleteFromImport.00=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.deleteFromImport.10=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.deleteFromImport.30=com.s1.payments.validator.AccountEntitlementValidator
validator.deleteFromImport.Z0=com.s1.emea.disbursement.common.validator.CallerWasScheduledValidator
auditRecord.function.deleteFromImport=##CONVENTION:auditRecord.function.delete##

#####################
## Save Incomplete ##
#####################
Process.partialCreate.className=com.s1.payments.process.IncompletePaymentCreateProcess
validator.partialCreate.10=com.s1.app.disbursements.validator.NullValidator
validator.partialCreate.20=com.s1.payments.validator.NullAmountValidator
validator.partialCreate.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.function.partialCreate=##CONVENTION:auditRecord.function.create##
history.add.partialCreate=true

Process.partialModify.className=com.s1.payments.process.IncompletePaymentModifyProcess
validator.partialModify.10=com.s1.app.disbursements.validator.NullValidator
validator.partialModify.20=com.s1.payments.validator.NullAmountValidator
validator.partialModify.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.function.partialModify=##CONVENTION:auditRecord.function.modify##
history.add.partialModify=true

#############################
## Save Incomplete Template##
#############################
Process.partialCreateTemplate.className=com.s1.payments.process.TemplateCreateProcess
validator.partialCreateTemplate.10=com.s1.app.disbursements.validator.NullValidator
validator.partialCreateTemplate.20=com.s1.payments.validator.NullAmountValidator
validator.partialCreateTemplate.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.method.partialCreateTemplate=addFullTemplateRecordForDrCrValue
auditRecord.component.partialCreateTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.partialCreateTemplate=##CONVENTION:auditRecord.function.createTemplate##
history.add.partialCreateTemplate=true

Process.partialModifyTemplate.className=com.s1.payments.process.TemplateModifyProcess
validator.partialModifyTemplate.10=com.s1.app.disbursements.validator.NullValidator
validator.partialModifyTemplate.20=com.s1.payments.validator.NullAmountValidator
validator.partialModifyTemplate.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.method.partialModifyTemplate=addFullTemplateRecordForDrCrValue
auditRecord.component.partialModifyTemplate=##CONVENTION:auditRecord.component.commonTemplate##
auditRecord.function.partialModifyTemplate=##CONVENTION:auditRecord.function.modifyTemplate##
history.add.partialModifyTemplate=true

# configuration for Save as Incomplete functionality.
# This behaviour can be configured per payment type by overriding the property in a payments config file.
# Default behaviour is on
saveAsIncomplete=true

# configuration for Save as Incomplete Template functionality.
# This behaviour can be configured per payment type by overriding the property in a payments config file.
# Default behaviour is off
saveAsIncompleteTemplate=false

# For some payment types (e.g. HK AUTOPAY) the payment currency must match the account currency.
accountCurrencyOnly=false

#maximum number of fx contracts
maxFxContracts=2

#############################
## Get Summary by Criteria ##
#############################
Process.getSummaryByCriteria.className=com.s1.app.disbursements.process.GetOnlySummaryByCriteriaProcess
summary.getSummaryByCriteria=com.s1.payments.instruction.InstructionSummary
validator.getSummaryByCriteria.10=com.s1.app.disbursements.validator.NullValidator
validator.getSummaryByCriteria.20=com.s1.payments.validator.NullAmountValidator

###########################
## Payment Specification ##
###########################
Process.getPaymentSpecification.className=com.s1.payments.process.specification.GetPaymentSpecificationProcess
validator.getPaymentSpecification.10=com.s1.app.disbursements.validator.NullValidator
validator.getPaymentSpecification.20=com.s1.payments.validator.NullAmountValidator
convertor.getPaymentSpecification=com.s1.payments.convertor.BulkInstructionConvertor

Process.createFromSpecification.className=com.s1.frameworks.payments.recurring.CreateFromSpecificationProcess

Process.createSpecification.className=com.s1.payments.process.CreateSpecificationProcess
validator.createSpecification.10=com.s1.frameworks.payments.validator.CallerPaymentSpecificationValidator
validator.createSpecification.20=com.s1.intl.disbursements.validator.DateValidator
validator.createSpecification.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.method.createSpecification=addFullTemplateRecordForDrCrValue
history.add.createSpecification=true
#GBS-42214 : Commented as extra audit activity getting logged for this.
#auditRecord.component.createSpecification=##CONVENTION:auditRecord.component.commonTemplate##
#auditRecord.function.createSpecification=##CONVENTION:auditRecord.function.createTemplate##
entitlement.createSpecification=##CONVENTION:entitlement.payment_create_modify_delete##
adapterPolicy.createSpecification=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.createSpecification=com.s1.app.disbursements.adapter.NullAdapterProxy

Process.modifySpecification.className=com.s1.payments.process.ModifySpecificationProcess
validator.modifySpecification.10=com.s1.frameworks.payments.validator.CallerPaymentSpecificationValidator
validator.modifySpecification.20=com.s1.intl.disbursements.validator.DateValidator
validator.modifySpecification.30=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.method.modifySpecification=addFullTemplateRecordForDrCrValue
history.add.modifySpecification=true
#GBS-42214 : Commented as extra audit activity getting logged for this.
#auditRecord.component.modifySpecification=##CONVENTION:auditRecord.component.commonTemplate##
#auditRecord.function.modifySpecification=##CONVENTION:auditRecord.function.createTemplate##
entitlement.modifySpecification=##CONVENTION:entitlement.payment_create_modify_delete##
adapterPolicy.modifySpecification=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.modifySpecification=com.s1.app.disbursements.adapter.NullAdapterProxy

Process.deleteSpecification.className=com.s1.payments.process.DeleteSpecificationProcess
validator.deleteSpecification.10=com.s1.frameworks.payments.validator.CallerPaymentSpecificationValidator
validator.deleteSpecification.20=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
auditRecord.method.deleteSpecification=addFullTemplateRecordForDrCrValue
history.add.deleteSpecification=true
#GBS-42214 : Commented as extra audit activity getting logged for this.
#auditRecord.component.deleteSpecification=##CONVENTION:auditRecord.component.commonTemplate##
#auditRecord.function.deleteSpecification=##CONVENTION:auditRecord.function.createTemplate##
entitlement.deleteSpecification=##CONVENTION:entitlement.payment_create_modify_delete##
#for physically deleting payment use LightInstructionConvertor for logical deletion just use following.
convertor.deleteSpecification=com.s1.payments.convertor.MinimalInstructionConvertor
payments.recurring.schedule.hints=PREVIOUS_PROCESSING_DAY,NEXT_PROCESSING_DAY

Process.maintainPaymentStream.className=com.s1.frameworks.payments.recurring.MaintainPaymentStreamProcess

# when the user tries to approve a transaction
Process.approveSpecification.className=com.s1.payments.process.ApproveSpecificationProcess
validator.approveSpecification.10=com.s1.payments.common.validator.UserApprovalValidator
validator.approveSpecification.20=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.approveSpecification.30=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.approveSpecification.40=com.s1.app.disbursements.validator.TypeCodeValidator
#validator.approveSpecification.50=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.approveSpecification.60=com.s1.intl.disbursements.validator.IgnoreOffsetDateValidator
validator.approveSpecification.70=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
#validator.approveSpecification.70=com.s1.payments.validator.AccountEntitlementValidator
validator.approveSpecification.80=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.approveSpecification.85=com.s1.payments.validator.UpdateApprovedByUsersValidator
validator.approveSpecification.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.approveSpecification.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
#GBS-79035
#User Approval repetative and non repetative Limit.
validator.approveSpecification.90=com.s1.app.disbursements.limits.validator.UANRLimitValidator
validator.approveSpecification.100=com.s1.app.disbursements.limits.validator.UARLimitValidator
# User Group approval repetative and non repetative Limit.
validator.approveSpecification.110=com.s1.app.disbursements.limits.validator.CGANRLimitValidator
validator.approveSpecification.120=com.s1.app.disbursements.limits.validator.CGARLimitValidator
history.add.approveSpecification=true
auditRecord.class.approveSpecification=com.s1.payments.audit.InstructionOnlyAudit
#GBS-42214 : Commented as extra audit activity getting logged for this.
#auditRecord.function.approveSpecification=##CONVENTION:auditRecord.function.approve##
entitlement.approveSpecification=##CONVENTION:entitlement.approve##
convertor.approveSpecification=com.s1.payments.convertor.MinimalInstructionConvertor
adapterPolicy.approveSpecification=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.approveSpecification=com.s1.app.disbursements.adapter.NullAdapterProxy

#===== The generic payment transmission complete process to handle status update
Process.transmitComplete.className=com.s1.app.disbursements.process.async.TransmitCompleteProcess
proxy.batch.common=com.s1.app.disbursements.adapter.NullAdapterProxy

Process.transferApproval.className=com.s1.payments.process.TransferApprovalProcess
validator.transferApproval.10=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.transferApproval.20=com.s1.app.disbursements.validator.ClassOfServiceValidator
validator.transferApproval.30=com.s1.app.disbursements.validator.TypeCodeValidator
#validator.transferApproval.40=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.transferApproval.50=com.s1.intl.disbursements.validator.IgnoreOffsetDateValidator
validator.transferApproval.60=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.transferApproval.70=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.transferApproval.85=com.s1.payments.validator.UpdateApprovedByUsersValidator
validator.transferApproval.Y0=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.transferApproval.Z0=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
history.add.transferApproval=true
auditRecord.class.transferApproval=com.s1.payments.audit.InstructionOnlyAudit
auditRecord.function.transferApproval=##CONVENTION:auditRecord.function.approve##
entitlement.transferApproval=##CONVENTION:entitlement.approve##
convertor.transferApproval=com.s1.payments.convertor.MinimalInstructionConvertor

thirdpartyEntitlement.create_modify_delete=##CONVENTION:thirdparty.entitlement.create_modify_delete##




##===== New default configuration for prenote functionality
##this can be overriden in payment specific properties to enable prenote support through templates
accountVerificationEnabled=false
##Generic process for Prenote support if above property is enabled
#for a payment then this process can be plugged to create prenote instruction
Process.accountVerification.className=com.s1.payments.process.AccountVerificationProcess
validator.accountVerification.10=com.s1.app.disbursements.validator.NullValidator

###Pre preview process for validations
Process.pre-preview-validate.className=com.s1.app.disbursements.process.ExecuteValidateProcess
validator.pre-preview-validate.00=com.s1.frameworks.payments.validator.AccountVerificationValidators
#Property for Processing schedule error or wanrning message
processingSchedule.dateAdjust.warning=true
#While creating a template from saveAsTemplate flow determines if to create template within the same flow or from create template screen

#GBS-24687: This Property is not in use
#split.saveAsTemplate=true

#In which way we want confidential functionality to be applied international or US payments
confidential.international=true
#for showing the Authentication options this is the place to configure it for all operations individually
#for approve/reject/delete it will be shown by default if enable from COS
signRequired.create=true
signRequired.modify=true
signRequired.createFromTemplate=true
signRequired.createTemplate=true
signRequired.modifyTemplate=true


finalStatus.modified.payment=false
finalStatus.modified.template=false

#template name default maxlength
default.maxlength.templateName=35

#Overdue Batch Job
Process.batch_overdue.className=com.s1.app.disbursements.process.FlagOverduePaymentsProcess
validator.batch_overdue.10=com.s1.intl.disbursements.validator.OverdueValidator

#Imports Validation Chain
#Non-Repetitive Payment
#GBS-50492 : Below converter has method to restore all line items for the payment.
convertor.batch_overdue=com.s1.payments.convertor.BulkInstructionConvertor

#Imports Properties

Process.importPayment.className=com.s1.payments.process.PaymentCreateProcess
validator.importPayment.10=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.importPayment.15=com.s1.app.disbursements.validator.ClassOfServiceValidator
#validator.importPayment.20=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.importPayment.25=com.s1.intl.disbursements.validator.DateValidator
validator.importPayment.30=com.s1.payments.validator.AccountEntitlementValidator
validator.importPayment.35=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.importPayment.40=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.importPayment.45=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.importPayment.50=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.importPayment.55=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.importPayment.60=com.s1.frameworks.payments.validator.LineItemPresenceValidator
validator.importPayment.65=com.s1.frameworks.payments.validator.EnforceHoldValidator
validator.importPayment.70=com.s1.app.disbursements.validator.DefaultCurrencyExchangeRateValidator
entitlement.importPayment=##CONVENTION:entitlement.create_modify_delete##

#Repetitive Payment
Process.importRepetitive.className=com.s1.payments.process.PaymentCreateProcess
validator.importRepetitive.10=com.s1.emea.disbursement.common.validator.CustomerValidator
validator.importRepetitive.15=com.s1.app.disbursements.validator.ClassOfServiceValidator
#validator.importRepetitive.20=com.s1.emea.disbursement.common.validator.NumberOfDaysValidator
validator.importRepetitive.25=com.s1.intl.disbursements.validator.DateValidator
validator.importRepetitive.30=com.s1.payments.validator.AccountEntitlementValidator
validator.importRepetitive.35=com.s1.emea.disbursement.common.validator.CurrencyAmountValidator
validator.importRepetitive.40=com.s1.app.disbursements.limits.validator.CallerTransactionLimitValidator
validator.importRepetitive.45=com.s1.emea.disbursement.common.validator.CallerReadyToSendValidator
validator.importRepetitive.50=com.s1.frameworks.payments.validator.IntlPmtNoCommitValidator
validator.importRepetitive.55=com.s1.payments.validator.NullAmountHoldStatusValidator
validator.importRepetitive.60=com.s1.payments.validator.RepetitivePmtImportNullAmountActiveStatusValidator
validator.importRepetitive.65=com.s1.frameworks.payments.validator.LineItemPresenceValidator
validator.importRepetitive.70=com.s1.frameworks.payments.validator.EnforceHoldValidator
validator.importRepetitive.75=com.s1.app.disbursements.validator.DefaultCurrencyExchangeRateValidator
entitlement.importRepetitive=##CONVENTION:entitlement.create-from_template##

#Template
Process.importTemplate.className=com.s1.payments.process.TemplateCreateProcess
validator.importTemplate.10=com.s1.app.disbursements.validator.CallerTemplateValidator
entitlement.importTemplate=##CONVENTION:entitlement.template_create_modify_delete##

Process.batch-getByCriteria.className=com.s1.app.disbursements.process.GetByCriteriaProcess
validator.batch-getByCriteria.10=com.s1.app.disbursements.validator.NullValidator
convertor.batch-getByCriteria=com.s1.payments.convertor.BulkInstructionConvertor

report.entitlement.create=##CONVENTION:report.entitlement.create##

basicfunc.pmt.view.dboprtn=##CONVENTION:functional.access.paymentsTransfers.group.payments.view.dbop##
basicfunc.pmt.transact.dboprtn=##CONVENTION:functional.access.paymentsTransfers.group.payments.transact.dbop##
basicfunc.tmpl.view.dboprtn=##CONVENTION:functional.access.paymentsTransfers.group.templates.view.dbop##
basicfunc.tmpl.transact.dboprtn=##CONVENTION:functional.access.paymentsTransfers.group.templates.transact.dbop##

import.parser.mapping=importRecipientList

#Date properties
date.daysInFuture=60
date.defaultSendDate=1
date.defaultPaymentDate=1

#Other properties
recipientAdvising.enabled=false
remittance.enabled=false
#contractRate.display=false
postingIndicator.enabled=false

#Property to identify is send date used for payment or not(true means applicable and false means not)
#This setting is at global level and in case want to use for payment override it in payment specific property.
senddate.isapplicable=false

destinationCountry.schedule.isapplicable=false



############################
# begin persistence
############################

persistence.sign-digital=false
persistence.verify-digital=false
persistence.unsign-digital=false

############################
# end persistence
############################



#when the system tries to digitally sign a transaction
Process.sign-digital.className=com.s1.app.disbursements.process.DigitalSignProcess
validator.sign-digital.010=com.s1.app.disbursements.validator.NullValidator


#when the system tries to digitally verify a transaction
Process.verify-digital.className=com.s1.app.disbursements.process.DigitalVerifySignProcess
validator.verify-digital.010=com.s1.app.disbursements.validator.NullValidator

Process.unsign-digital.className=com.s1.app.disbursements.process.DigitalUnSignProcess
validator.unsign-digital.010=com.s1.app.disbursements.validator.NullValidator

signingSystem.common=com.s1.emea.common.CorpIntlSigningSystem

# when the user try to retrieve a transaction (or a recurring transaction), with no auth validation
Process.get-noauth.className=com.s1.payments.process.GetProcess
validator.get-noauth.10=com.s1.app.disbursements.validator.DisbursementCustomerValidator


#when the system tries to digitally sign a transaction without changing its status
Process.sign-signRegen.className=com.s1.app.disbursements.process.DigitalSignProcess
validator.sign-signRegen.010=com.s1.app.disbursements.validator.NullValidator

#process used when the signature needs to be regenerated due to a change in the signing system
Process.modify-signRegen.className=com.s1.app.disbursements.process.ModifyBatchProcess
validator.modify-signRegen.10=com.s1.app.disbursements.validator.NullValidator

#String BlackList Characters for payment fields
prefixBlackList=/
suffixBlackList=/
patternBlackList=//,&lt;SCRIPT&gt;alert(3)&lt;/script/

#Ordering Customer Property
orderingCustomer.enabled=false
#Final Recipient Property
finalRecipient.enabled=false
validator.modify-signRegen.10=com.s1.app.disbursements.validator.NullValidator

#String BlackList Characters for payment fields
prefixBlackList=/
suffixBlackList=/
patternBlackList=//

#Date and time format used by ISO pain xsl files
iso.dateformat=yyyy-MM-dd
iso.timeformat=HH:mm:ss.SSS 

#Comma seperated list of holiday groups for destination country.
#Default value is DFLT 
destination.country.holidayGroup.list=DFLT
