#######################################
# Template Payment configuration File #
#######################################

Context.type=314
payment.name=itlilv
payment.groupname = International
payment.displayname=International Low Value Payment
payment.description=International Low Value Payment
template.displayname=International Low Value Template
payment.featureEnablement.name=International Low Value Payment
payment.type=Low Value

report.type=300

# Functional groupings
functional.group=ITL
thirdparty.context.name=itl

# Navigation/BB-Core-Top settings
navigation.id=ITLilv

# Use the default values for configuration
useDefaults=true

# Currency definitions
availableCurrencies=USD,EUR
defaultCurrency=USD

thirdparty.subtypes=ilv_ePayee
remittance.category.purpose.enum=BNKCatgPrps
remittance.payment.purpose.enum=BNKPmntPrps
remittance.structured=false
remittance.transaction.reference=false
remittance.enabled=true
recurring=true
orderingCustomer.enabled =true
accountVerificationStatus.code=0,2

accountVerificationEnabled=true
#--------------------------------------------------------
# Optional properties used by only some payment types.
# They should be uncommented and updated as needed.
#   accountCurrencyOnly=false
#   pickUpLocation.Payment.codes=
#	printAtLocation.Payment.codes=
#	payableAtLocation.Payment.codes=
#
# Comma separated list of currencies which from account list should be filtered.
# This is optional. If there is no currency list defined then must should not be present.
#   fromAccountCurrencies=USD
validator.prenote.prePreview.10=com.s1.app.disbursements.validator.NullValidator
validator.prenote.prePreview.20=com.s1.app.disbursements.validator.NullValidator
validator.prenote.prePreview.30=com.s1.frameworks.payments.validator.EnforceHoldValidator
validator.prenote.prePreview.50=com.s1.app.disbursements.validator.NullValidator
validator.pre-preview-validate.10=com.s1.frameworks.payments.validator.OrderingCustomerInfoValidator
validator.pre-preview-validate.20=com.s1.intl.imprt.ilv.ILVAccountTypeBankIdTypeValidator
hideCopy.onView=true
payment.debitCreditBoth=both
skipBankValidation=true
calculate.defaultDate=false
#payment.debitCreditBoth=both
import.isEnabled=true
import.isStdEnabled=false
import.isUsrDefEnabled=true

recipientAdvising.enabled=true

#---------Import configurations-------------
import.reader.builder.class=ilvReaderBuilder
import.processor.builder.class=pmtProcessorBuilder
import.holder=ilvRecipientHolder
import.convertor=ilvRecipientConvertor
import.linemapper=customInstructionLineMapper
dependent.handler.bean=instructionHandler
import.convertor.bean=lowValueInstructionConvertor


#Property to identify is send date used for payment or not(true means applicable and false means not)
senddate.isapplicable=true
#Export
export.rcptSelectOptions=0,2

#Export Configurations
export.isEnabled=true
export.instructionHolder=ilvInstructionHolder
export.lineItemHolder=ilvLineItemHolder

Process.initialize.className=com.s1.payments.process.ILVInitializeProcess

confidential.international=true

convertor.modify-batch_execute=com.s1.payments.convertor.IntlIlvPmtInstructionConvertor
