# processor
Processor.name=com.s1.app.disbursements.process.PaymentsDisbursementProcessor

# disbursement context type (type code in VFMInstr)
# could be define either by constant name or directly by the value
# either must be unique for all disbursement type (with a value equal or greater than 0)
# or a negative value for a list
Context.type=-1

#The types of payments/templates that are included in this list
#PSO can extend these lists by adding an entry with the key paymentlist.types.2 or paymentlist.types.whatever
#and can replace these lists by using the same keys
paymentlist.types.1=706
templatelist.types.1=706


#The types of payments/templates status that are included in various list as determine by the statusTab requestAttribute
#PSO can extend these lists by adding an entry with the key paymentlist.types.2 or paymentlist.types.whatever
#and can replace these lists by using the same keys.
# <!-- Status Code over-rides --> in payments-tiles-definitions.xml contain the text for the status in the form
# status.[statusCode].text, so when adding new codes to these lists corresponding tiles entries are required.
paymentlist.tabs.pending.1=27,28,2,43,49,56
paymentlist.tabs.processed.1=6,12,8,5,9,55,11
paymentlist.tabs.all.1=2,27,28,5,6,8,9,12,43,49,55,56,11
paymentlist.tabs.template.1=27,15,5,11,110,111,112,113
paymentlist.tabs.approvals.1=27,28
paymentlist.tabs.requests.1=1,2
paymentlist.tabs.manual.1=11,15
paymentlist.tabs.invoice.1=0,1,2
paymentlist.tabs.templates.1=11,15



##################
# Adapter policy #
##################

# for a list, the adapter is only used to synchronize the database with a back-end if needed
adapterPolicy.common=com.s1.app.disbursements.adapter.DirectPolicy
proxy.direct.common=com.s1.app.disbursements.adapter.NullAdapterProxy

#############
# processes #
#############

# when the user try to see a list of transactions
Process.getSummaryByCustomer.className=com.s1.app.disbursements.process.GetOnlySummaryByCustomerProcess
summary.getSummaryByCustomer=com.s1.payments.instruction.RegistrationInstructionSummary
criteria.getSummaryByCustomer=com.s1.app.disbursements.dao.DisbursementCriteria
validator.getSummaryByCustomer.10=com.s1.app.disbursements.validator.NullValidator

# when the user tries to see a list of transactions by criteria
summaryClassFor.com.s1.payments.instruction.PaymentRequestCriteria=com.s1.payments.instruction.PaymentRequestSummary
Process.getSummaryByCriteria.className=com.s1.payments.process.CriteriaSensitiveGetSummaryByCriteriaProcess
summary.getSummaryByCriteria=com.s1.payments.instruction.RegistrationInstructionSummary
validator.getSummaryByCriteria.10=com.s1.app.disbursements.validator.NullValidator
validator.getSummaryByCriteria.20=com.s1.payments.validator.NullAmountValidator

# when the user try to see a list of templates
Process.getTemplateSummaryByCustomer.className=com.s1.emea.disbursement.common.process.template.CBIGetTemplateSummaryByCustomerProcess
summary.getTemplateSummaryByCustomer=com.s1.payments.instruction.RegistrationInstructionSummary
criteria.getTemplateSummaryByCustomer=com.s1.app.disbursements.dao.DisbursementCriteria
validator.getTemplateSummaryByCustomer.10=com.s1.app.disbursements.validator.NullValidator

# when the user tries to see a list of templates by criteria
Process.getTemplateSummaryByCriteria.className=com.s1.emea.disbursement.common.process.template.CBIGetTemplateSummaryByCriteriaProcess
summary.getTemplateSummaryByCriteria=com.s1.payments.instruction.RegistrationInstructionSummary
validator.getTemplateSummaryByCriteria.10=com.s1.app.disbursements.validator.NullValidator