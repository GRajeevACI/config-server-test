<?xml version="1.0" encoding="UTF-8"?>
<beanio
	xsi:schemaLocation="http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.beanio.org/2012/03">

	<!-- List of type handlers used by this configuration to parse file -->

	<typeHandler name="objectIdHandler"
		class="com.s1.frameworks.payments.imports.handlers.ObjectIdTypeHandler" />

	<typeHandler name="amountHandler" class="com.s1.frameworks.payments.imports.handlers.RemoveAmountHandler">
	</typeHandler>

	<typeHandler name="s1dateHandler"
		class="com.s1.frameworks.payments.imports.handlers.S1DateTypeHandler">
		<property name="dateFormat" value="yyyy-MM-dd" />
	</typeHandler>

	<typeHandler name="currencyValueHandler"
		class="com.s1.frameworks.payments.imports.handlers.CurrencyValueHandler" />
		
	<typeHandler name="amendmentFlagHandler"
		class="com.s1.intl.imprt.common.AmendmentFlagTypeHandler" />

	<stream name="Document" format="xml"
		resourceBundle="com.s1.banking.common.imprt.user.Import-Resources"
		strict="true" occurs="1">


		<group name="CstmrDrctDbtInitn" occurs="0-1">

			<!-- Header Record Mapping -->
			<record name="GrpHdr"
				class="com.s1.intl.imprt.sepacr.SepaCrImportHeaderValue" occurs="1">
				<field name="grpHdrMsgId" xmlName="MsgId" getter="getMsgId" setter="setMsgId" maxLength="35" required="true" minOccurs="1"/>
				<field name="grpHdrCreDtTm" xmlName="CreDtTm" getter="getCreationDateTime" setter="setCreationDateTime" required="true"  minOccurs="1"/>
				<field name="grpHdrNbOfTxs" xmlName="NbOfTxs" getter="getNumOfTxns" setter="setNumOfTxns"
					type="int" maxLength="15" required="true"  minOccurs="1"/>
				<field name="grpHdrCtrlSum" xmlName="CtrlSum" getter="getControlSum" setter="setControlSum"
					type="bigdecimal" maxLength="18" required="true"  minOccurs="1" regex="\d{1,18}+(\.\d{1,2})?"/> 
				<segment name="InitgPty" occurs="1">
					<field name="grpHdrInitgPtyNm" xmlName="Nm" getter="getBankName" setter="setBankName" maxLength="70"/>
					<segment name="Id" occurs="1">
						<segment name="OrgId" occurs="1">
							<segment name="Othr" occurs="1">
								<field name="grpHdrInitgPtyId" xmlName="Id" getter="getBankIdFr" setter="setBankIdFr" regex="([A-Za-z0-9 \s]?){1,35}" required="true"  minOccurs="1"/>
							</segment>
						</segment>
					</segment>
				</segment>
			</record>

			<!-- Instruction Value Mapping -->
			<record name="SPDDPmtInf" xmlName="PmtInf" class="com.s1.payments.instruction.InstructionValue"
				occurs="1+">
				<field name="pmtInfPmtInfId" xmlName="PmtInfId" minOccurs="1" maxOccurs="1"
					setter="setCustomerReference" getter="getCustomerReference"  required="true" regex="([A-Za-z0-9\s]?){1,35}"/>
				<field name="pmtInfPmtMtd" xmlName="PmtMtd" maxOccurs="1" minOccurs="1" ignore="true" literal="DD" required="true"/>
				<field name="pmtInfBtchBookg" xmlName="BtchBookg" occurs="0-1" setter="setPostingIndicator"
					getter="getPostingIndicator"  regex="(true|false|TRUE|FALSE|True|False){1}"/>
				<field name="pmtInfNbOfTxs" xmlName="NbOfTxs" maxOccurs="1" minOccurs="1"  type="java.lang.Integer"
					setter="setLastSavedNumberOfLineItems" getter="getLastSavedNumberOfLineItems" required="true"/>
				<segment name="PmtTpInf"  occurs="0-1">
					<segment name="SvcLvl" minOccurs="1" maxOccurs="1">
						<field name="PmtTpInfCd" xmlName="Cd" maxOccurs="1" minOccurs="1" 
							required="true" literal="SEPA" ignore="true"/>
					</segment>
					<segment name="LclInstrm" occurs="1">
						<field name="LclInstrmCd" xmlName="Cd" setter="setScheme" getter="getScheme"				
							required="true" regex="(CORE|COR1|B2B){1}" occurs="1"/>
					</segment>
					<field name="SeqTp" xmlName="SeqTp" setter="setSequence" getter="getSequence" required="true" regex="(FRST|RCUR|FNAL|OOFF){1}" occurs="1"/>
					<segment name="CtgyPurp" minOccurs="0" maxOccurs="1">
						<field name="pmtInfCtgyPurpCd" xmlName="Cd" setter="setCategoryPurpose" getter="getCategoryPurpose"
							maxOccurs="1" minOccurs="1" required="true" regex="(BONU|CASH|CBLK|CCRD|CORT|DCRD|DIVI|EPAY|FCOL|GOVT|HEDG|ICCP|IDCP|INTC|INTE|LOAN|OTHR|PENS|SALA|SECU|SSBE|SUPP|TAXS|TRAD|TREA|VATX|WHLD){1}"/>
					</segment>
				</segment>
				<field name="pmtInfReqdExctnDt" xmlName="ReqdColltnDt" setter="setValuedate" getter="getValuedate"
					maxOccurs="1" typeHandler="s1dateHandler" required="true" minOccurs="1"/>

				<!-- From Account Mapping (Debit Account Information) -->

				<segment name="customerAccount" setter="setCustomerAccount"
					getter="getCustomerAccount" class="com.s1.common.accounts.AccountHoldingValue"
					minOccurs="1" xmlType="none">
					<segment name="Cdtr"  occurs="1">
						<field name="cdtrNm" xmlName="Nm" maxOccurs="1" minOccurs="0" ignore="true" maxLength="35" required="true"/> <!-- Mandatory?? -->
						<segment name="OrgId"  occurs="1">
							<segment name="Othr" occurs="1"
								class="com.s1.common.accounts.additional.identifier.dao.AccountsAddIdentifier"
								setter="setAccountAddIds" getter="getAccountAddIds">
								<field name="dbtrAcctIBAN" xmlName="Id" setter="setIdentifier1"
									getter="getIdentifier1" required="true" regex="[A-Z\s]{2}[0-9\s]{2}([A-Z0-9\s]?){1,30}" occurs="1"/>
							</segment>
						</segment>
					</segment>
					<segment name="CdtrAcct"  maxOccurs="1" minOccurs="1">
						<segment name="accountValue" class="com.s1.common.accounts.AccountData"
							setter="setAccountValue" getter="getAccountValue" xmlType="none"  occurs="1">
							<segment name="Id" occurs="1">
								<segment name="Othr" occurs="1">
									<field name="accountId" xmlName="Id" setter="setAccountId"
										getter="getAccountId" required="true" occurs="1"/>
								</segment>
							</segment>
							<field name="cstrAcctCcy" xmlName="Ccy" regex="[A-Z]{3}" setter="setIsoCurrency"
										getter="getIsoCurrency" required="true" occurs="0-1"/>
						</segment>
					</segment>
					<segment name="CdtrAgt"  maxOccurs="1" minOccurs="1">
						<segment name="FinInstnId"  maxOccurs="1" minOccurs="1">
							<!-- Field to map ?? -->
							<field name="BIC" xmlName="BIC" minOccurs="0" maxOccurs="1" setter="setNickname"
									getter="getNickname"/>
							<segment name="Othr"  maxOccurs="1" minOccurs="0">
								<!-- Setting this field into the nickname due the structure of the 
									tags for debit account fields Inside the afterRead method of listener the 
									account will be fetched depending on the IBAN so the account value will be 
									the one fetched from DB. this mapping here is just for to store the value 
									of bank id to validate and to put into the criteria. Will not be used in 
									actual payment creation. -->
								<field name="dbtrAgtId" xmlName="Id" minOccurs="1" maxOccurs="1" setter="setNickname"
									getter="getNickname" required="true"/>
							</segment>		
						</segment>
					</segment>
				</segment>

				<!-- Ordering Customer -->

				<segment name="UltmtCdtr" setter="setOrderingCustomerValue"
					getter="getOrderingCustomerValue" class="com.s1.payments.OrderingCustomerValue"
					occurs="0-1">
					<field name="ultmtCdtrNm" xmlName="Nm" setter="setName" getter="getName" maxLength="70" regex="([A-Za-z0-9 \s]?){1,}" required="true" occurs="1"/>
					<segment name="PstlAdr" setter="setAddress" getter="getAddress"
						class="com.s1.common.Address" occurs="0-1">
						<field name="ultmtCdtrCtry" xmlName="Ctry" setter="setCountryCode" getter="getCountryCode"
							occurs="0-1"   regex="[A-Za-z]{2}"/>
						<field name="ultmtCdtrAdrLine" xmlName="AdrLine" setter="setStreetAddressLines" getter="getStreetAddressLines"
							occurs="0-3" collection="List" maxLength="70"/>
					</segment>
					<segment name="Id" occurs="0-1">
						<segment name="OrgId" occurs="0-1">
							<field name="ultmtCdtrAnyBIC" xmlName="AnyBIC" setter="setRecipientId" getter="getRecipientId"
								occurs="0-1" maxLength="35"/>
							<field name="customerIdType" setter="setCustomerIdType"
								getter="getCustomerIdType" xmlType="text" default="BNKCBIC" trim="true"/>
							<segment name="Othr" occurs="0-1">
								<field name="ultmtCdtrBNKCOTHId" xmlName="Id" setter="setRecipientId" getter="getRecipientId"
									required="false" occurs="0-1" regex="([A-Za-z0-9 \s]?){1,35}" />
								<field name="customerIdType" setter="setCustomerIdType"
									getter="getCustomerIdType" xmlType="text" default="BNKCOTH" trim="true"/>
							</segment>
						</segment>
						<segment name="PrvtId" occurs="0-1">
							<segment name="DtAndPlcOfBirth" occurs="0-1">
								<field name="ultmtCdtrBirthDt" xmlName="BirthDt" setter="setDateOfBirth" getter="getDateOfBirth"
									typeHandler="s1dateHandler" occurs="1" required="true"/>
								<field name="ultmtCdtrPrvcOfBirth" xmlName="PrvcOfBirth" setter="setProvinceOfBirth"
									getter="getProvinceOfBirth" occurs="0-1"  maxLength="35"/>
								<field name="ultmtCdtrCityOfBirth" xmlName="CityOfBirth" setter="setCityOfBirth" getter="getCityOfBirth"
									occurs="1"  maxLength="35" required="true"/>
								<field name="ultmtCdtrCtryOfBirth" xmlName="CtryOfBirth" setter="setNationalityStatus" occurs="1"
									getter="getNationalityStatus"  regex="[A-Za-z]{2}" required="true"/>
								<field name="customerIdType" setter="setCustomerIdType"
									getter="getCustomerIdType" xmlType="text" default="BNKINDPB" trim="true"/>								
							</segment>
							<segment name="Othr" occurs="0-1">
									<field name="ultmtCdtrBNKINDOTHId" xmlName="Id" setter="setRecipientId" getter="getRecipientId"
										required="false" occurs="0-1" regex="([A-Za-z0-9 \s]?){1,35}"/>
									<field name="customerIdType" setter="setCustomerIdType"
										getter="getCustomerIdType" xmlType="text" default="BNKINDOTH" trim="true"/>
							</segment>
						</segment>
					</segment>
				</segment>
				<!--No need to map this field as will not be populated on UI and is not used in the payment creation process. -->
				<field name="ChrgBr" ignore="true" occurs="0-1" regex="(SLEV){1}" />

				<!-- Creditor Id - Start -->
				
				<segment name="CdtrSchmeId"  occurs="1">
					<segment name="Id"  occurs="1">
						<segment name="PrvtId"  occurs="1">
							<field name="creditorId" xmlName="Othr" setter="setCreditorId"
									getter="getCreditorId" required="true" occurs="1"/>
						</segment>
					</segment>
				</segment>
				
				<!-- Creditor Id - End -->

				<!-- Default Values - Start -->
				<property name="isEditableDetails" setter="setIsEditableDetails"
					getter="getIsEditableDetails" value="0" />
				<property name="isCustomerReferenceEditable" setter="setIsCustomerReferenceEditable"
					getter="getIsCustomerReferenceEditable" value="0" />
				<property name="postingIndicatorEditable" setter="setPostingIndicatorEditable"
					getter="getPostingIndicatorEditable" value="0" />
				<property name="sequenceEditable" setter="setSequenceEditable"
					getter="getSequenceEditable" value="0" />
				<property name="subType" setter="setSubType"
					getter="getSubType" value="debit" />
				<!-- Default Values - End -->


				<!-- LineItemValue mapping -->

				<segment name="DrctDbtTxInf" minOccurs="1" maxOccurs="unbounded"
					getter="getLineItems" setter="setLineItems" collection="list"
					class="com.s1.payments.instruction.LineItemValue">
					<segment name="PmtId" occurs="1">
						<field name="dbtTrfTxInfEndToEndId" xmlName="EndToEndId" maxLength="35" occurs="1" setter="setBeneficiaryReference"
							getter="getBeneficiaryReference" />
					</segment>

					<!-- Amount Mapping -->
						<segment name="InstdAmt" occurs="1"
							class="com.s1.arch.i18n.currency.Money" setter="setAmount"
							getter="getAmount">
							<field name="dbtTrfTxInfInstdAmtCcy" xmlName="Ccy" setter="setType" getter="getType" xmlType="attribute" 
							     typeHandler="currencyValueHandler" required="true" regex="(EUR|USD){1}"/>
							<field name="dbtTrfTxInfInstdAmt" xmlName="InstdAmt" regex="\d{1,9}+(\.\d{1,2})?"  setter="setValue"
								getter="getValue" xmlType="text" required="true" typeHandler="amountHandler"/>
						</segment>

					<!-- ThirdPartyValue Mapping (Recipient Information) -->

					<segment name="target" class="com.s1.payments.target.ThirdPartyValue"
						xmlType="none">

						<!-- Default Values - Start -->
						<property name="accountType" type="string" value="IBAN"
							setter="setAccountType" getter="getAccountType" />
						<property name="isIBAN" type="boolean" value="true"
							setter="setIBAN" getter="isIBAN" />
						<property name="type" type="int" value="20" setter="setType"
							getter="getType" />
						<property name="isDependent" value="true" setter="setDependent"
							getter="isDependent" />
						<property name="payer" setter="setPayer"
							getter="isPayer" type="boolean" value="true" />
						<property name="accountVerificationStatus" setter="setAccountVerificationStatus"
							getter="getAccountVerificationStatus" type="Integer" value="0" />
						<property name="bankIdTypeOid" setter="setBankIdTypeOid"
							getter="getBankIdTypeOid" typeHandler="objectIdHandler" value="1" />
						<property name="destBankDetailsType" setter="setDestBankDetailsType"
							getter="getDestBankDetailsType" value="S" />
						<!-- Default Values - End -->

						<segment name="dependentValue" class="com.s1.payments.model.ExtendedThirdPartyValue"
							xmlType="none">
							<segment name="DrctDbtTx" occurs="0-1">
								<segment name="MndtRltdInf" occurs="0-1">
									<field name="mandateId" xmlName="MndtId" setter="setMandateId" getter="getMandateId" regex="([A-Za-z0-9 \s]?){1,35}" required="true" occurs="1"/>
									<field name="signatureDate" xmlName="DtOfSgntr" typeHandler="s1dateHandler" setter="setMandateSignatureDt" getter="getMandateSignatureDt" occurs="0-1"/>
									<field name="amendmentIndicator" xmlName="AmdmntInd" setter="setAmended" getter="isAmended" regex="(true|false|TRUE|FALSE|True|False){1}" typeHandler="amendmentFlagHandler" occurs="0-1"/>
									<segment name="AmdmntInfDtls" occurs="0-1">
										<field name="originalMandateIdentification" xmlName="OrgnlMndtId" setter="setMandateId" getter="getMandateId"  occurs="0-1"/>
										<field name="orignalCrSchemaId" xmlName="OrgnlCdtrSchmeId" ignore="true" occurs="0-1"/>	
										<segment name="OrgnlDbtr" occurs="0-1">
											<field name="originalRecipientName" xmlName="Nm" setter="setOldRecipientName" getter="getOldRecipientName"  maxLength="35" regex="([A-Za-z0-9 \s]?){1,}" occurs="0-1"/>
										</segment>
										<segment name="OrgnlDbtrAcct"  occurs="0-1">
											<field name="originalRecipientIBAN" xmlName="Id" setter="setOldIBAN" getter="getOldIBAN" occurs="0-1"/>
										</segment>
										<segment name="OrgnlDbtrAgt" minOccurs="0" maxOccurs="1">
											<segment name="FinInstnId" minOccurs="1" maxOccurs="1">
												<field name="originalRecipientBankId" xmlName="BIC" setter="setOldBankID" getter="getOldBankID" occurs="0-1"/>
											</segment>
										</segment>
										<field name="originalFinalCollDate" xmlName="OrgnlFnlColltnDt" typeHandler="s1dateHandler" setter="setOldCollectionDate" getter="getOldCollectionDate" occurs="0-1"/>
										<field name="originalFrequency" xmlName="OrgnlFrqcy" setter="setOldFrequency" getter="getOldFrequency"   occurs="0-1"/>
										<field name="electronicSignature" xmlName="ElctrncSgntr" setter="setMandateSignature" getter="getMandateSignature" regex="([A-Za-z0-9 \s]?){1,}" occurs="0-1"/>
										<field name="finalCollectionDate" xmlName="FnlColltnDt" typeHandler="s1dateHandler" setter="setCollectionDate" getter="getCollectionDate"   occurs="0-1"/>
										<field name="mandateFrequency" xmlName="Frqcy" setter="setFrequency" getter="getFrequency"   occurs="0-1"/>
									</segment>
								</segment>
							</segment>
						</segment>
						<segment name="DbtrAgt" occurs="1">
							<segment name="FinInstnId" occurs="1">
								<field name="dbtrAgtBIC" xmlName="BIC" minLength="8" maxLength="11" setter="setBankIdentifier"
										getter="getBankIdentifier" occurs="1"/>
							</segment>
						</segment>
						<segment name="Dbtr">
							<field name="recipientName" xmlName="Nm" maxLength="35" setter="setName" getter="getName" required="true" regex="([A-Za-z0-9 \s]?){1,}" occurs="1"/>
							<segment name="PstlAdr" setter="setAddress" getter="getAddress" 
								class="com.s1.common.Address" occurs="0-1">
								<field name="dbtrCtry" xmlName="Ctry" setter="setCountryCode" getter="getCountryCode"
									occurs="0-1" regex="[A-Z]{2}"/>
								<field name="dbtrAdrLine" xmlName="AdrLine" maxLength="35" setter="setStreetAddressLines"
									getter="getStreetAddressLines" occurs="0-2" collection="List"/>
							</segment>
							<segment name="Id" occurs="0-1">
								<segment name="OrgId" occurs="0-1">
									<field name="dbtrAnyBIC" xmlName="AnyBIC" setter="setRecipientId" getter="getRecipientId"
										occurs="0-1" maxLength="35"/>
									<field name="customerIdType" setter="setCustomerIdType"
										getter="getCustomerIdType" xmlType="text" default="BNKCBIC" trim="true"/>
									<segment name="Othr" occurs="0-1">
										<field name="dbtrBNKCOTHId" xmlName="Id" setter="setRecipientId" getter="getRecipientId" regex="([A-Za-z0-9 \s]?){1,35}"/>
										<field name="customerIdType" setter="setCustomerIdType"
											getter="getCustomerIdType" xmlType="text" default="BNKCOTH" trim="true"/>
									</segment>

								</segment>
								<segment name="PrvtId" occurs="0-1">
									<segment name="Othr" occurs="0-1">
										<field name="dbtrBNKINDOTHId" xmlName="Id" regex="([A-Za-z0-9 \s]?){1,35}" setter="setRecipientId" getter="getRecipientId"
											required="true" occurs="1" />
										<field name="customerIdType" setter="setCustomerIdType"
											getter="getCustomerIdType" xmlType="text" default="BNKINDOTH" trim="true"/>
									</segment>
									<segment name="DtAndPlcOfBirth" occurs="0-1">
										<field name="dbtrBirthDt" xmlName="BirthDt" setter="setDateOfBirth" getter="getDateOfBirth"
											typeHandler="s1dateHandler" required="true"/>
										<field name="dbtrPrvcOfBirth" xmlName="PrvcOfBirth" maxLength="35" setter="setProvinceOfBirth"
											getter="getProvinceOfBirth" occurs="0-1" />
										<field name="dbtrCityOfBirth" xmlName="CityOfBirth" maxLength="35" setter="setCityOfBirth"
											getter="getCityOfBirth" occurs="1" required="true"/>
										<field name="dbtrCtryOfBirth" xmlName="CtryOfBirth" regex="[A-Z]{2}" setter="setNationalityStatus"
											getter="getNationalityStatus" required="true"/>
										<field name="customerIdType" setter="setCustomerIdType"
											getter="getCustomerIdType" xmlType="text" default="BNKINDPB" trim="true"/>
									</segment>
								</segment>
							</segment>
						</segment>
						<segment name="DbtrAcct" occurs="1">
							<segment name="Id" occurs="1">
								<field name="dbtrAcctIBAN" xmlName="IBAN" setter="setAccountNumber" getter="getAccountNumber" required="true" regex="[A-Z\s]{2}[0-9\s]{2}([A-Z0-9\s]?){1,30}" occurs="1"/>
							</segment>
						</segment>
					</segment>

					<!-- Receiver Information -->

					<segment name="receiverAdvice"
						class="com.s1.payments.advice.ReceiverRemittanceValue" setter="setReceiverAdvice"
						getter="getReceiverAdvice" xmlType="none">

						<segment name="Purp" occurs="0-1">
							<field name="dbtTrfTxInfPurpCd" occurs="1" xmlName="Cd" regex="(CBLK|CDCB|CDCD|CDCS|CDDP|CDOC|CDQC|ETUP|FCOL|MTUP|ACCT|CASH|COLL|CSDB|DEPT|INTC|LIMA|NETT|AGRT|AREN|BEXP|BOCE|COMC|CPYR|GDDS|GDSV|GSCB|LICF|POPE|ROYA|SCVE|SUBS|SUPP|TRAD|CHAR|COMT|CLPR|DBTC|GOVI|HLRP|INPC|INSU|INTE|LBRI|LIFI|LOAN|LOAR|PENO|PPTI|RINP|TRFD|ADMG|ADVA|BLDM|CBFF|CCRD|CDBL|CFEE|COST|CPKC|DCRD|EDUC|FAND|FCPM|GOVT|ICCP|IDCP|IHRP|INSM|IVPT|MSVC|NOWS|OFEE|OTHR|PADD|PTSP|RCKE|RCPT|REBT|REFU|RENT|STDY|TBIL|TCSC|TELI|WEBI|ANNI|CAFI|CFDI|CMDT|DERI|DIVD|FREX|HEDG|INVS|PRME|SAVG|SECU|SEPI|TREA|ANTS|CVCF|DMEQ|DNTS|HLTC|HLTI|HSPC|ICRF|LTCF|MDCS|VIEW|ALLW|ALMY|BBSC|BECH|BENE|BONU|COMM|CSLP|GVEA|GVEB|GVEC|GVED|PAYR|PENS|PRCP|SALA|SSBE|AEMP|GFRP|GWLT|RHBS|ESTX|FWLV|GSTX|HSTX|INTX|NITX|PTXP|RDTX|TAXS|VATX|WHLD|TAXR|AIRB|BUSB|FERB|RLWY|TRPT|CBTV|ELEC|ENRG|GASB|NWCH|NWCM|OTLC|PHON|UBIL|WTER){1}" setter="setPaymentPurpose" getter="getPaymentPurpose" />
						</segment>

						<segment name="RmtInf" occurs="0-1">
							<field name="dbtTrfTxInfRmtInfUstrd" xmlName="Ustrd" minLength="1" maxLength="140" setter="setContent" getter="getContent"
								occurs="0-1" />
							<segment name="Strd" occurs="0-1">
								<segment name="CdtrRefInf" occurs="1">
									<segment name="CdOrPrtry" occurs="1">
										<field name="Cd" literal="SCOR" ignore="true" />
									</segment>
									<field name="dbtTrfTxInfRmtInfStrdIssr" xmlName="Issr" setter="setIssuer" getter="getIssuer"  maxLength="35"/>
									<!-- Default Values for structured receiver information -->
								 <property name="identifier" setter="setIdentifier" getter="getIdentifier" value="RF"/>
									<property name="showRemittanceInfo" setter="setShowRemittanceInfo"
										getter="isShowRemittanceInfo" value="true" type="boolean" />
									<property name="checkDigitMethod" setter="setCheckDigitMethod"
										getter="getCheckDigitMethod" value="EDIT" /> 
								</segment>
								<field name="dbtTrfTxInfRmtInfStrdRef" xmlName="Ref" regex="[A-Z]{2}[A-Z0-9]{0,21}" setter="setCreditorReference" getter="getCreditorReference" required="true"/>
							</segment>
						</segment>
					</segment>
				</segment>
				<segment name="SplmtryData" occurs="0+">
					<field name="PlcAndNm" xmlName="PlcAndNm" ignore="true"
						regex="(RateInf|PmtInfID){1}"/>
					<segment name="Envlp"  occurs="0-1">
						<segment name="Cnts" class="map" setter="setTunneledData" getter="getTunneledData" occurs="0-1">
							<field name="PmntInfID" xmlName="PmntInfID" occurs="0-1" type="java.lang.String" ignore="true"/>
						</segment>
						<segment name="Cnts" occurs="0-1">
							<segment name="XchgRateInf" occurs="0-1" class="map"
								setter="setTunneledData" getter="getTunneledData">
								<field name="UnitCcy" xmlName="UnitCcy" occurs="0-1" type="java.lang.String" />
								<field name="XchgRate" xmlName="XchgRate" occurs="0-1" type="bigdecimal" />
								<field name="CtrctId" xmlName="CtrctId" maxLength="10"
									type="java.lang.String" occurs="0-1" />
							</segment>
						</segment>
					</segment>
				</segment>				
			</record>
		</group>
	</stream>
</beanio>