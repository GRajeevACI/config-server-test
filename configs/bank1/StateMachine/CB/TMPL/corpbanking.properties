# list of delete states
# these states are used in the delete processes and in the authorize process
# the transaction will be deleted if the transaction status is in this list
# else it will be updated
#delete.state.DELETED

# list of rejected states
# these states are used in the different adapter policies
# the rejected proxy will be used if the transaction status is in this list
rejected.state.REJECTED
#rejected.state.MODIFY_REJECTED


# list of processes - states where the multiple authorization is not required
# (these are the initial states)
# format: multiAuthNotReq.<process name|ALL>.<state name|ALL>
#multiAuthNotReq.ALL.ALL
multiAuthNotReq.delete.ALL
multiAuthNotReq.approve.PENDING_APPROVAL

#######################
# ui create processes #
#######################

# create processes
method.create.INCOMPLETE=createDiagram
method.create.LOADED=createLoadDiagram
method.create.IMPORT_INCOMPLETE=createImportDiagram
method.partialCreate.INCOMPLETE=partialCreateDiagram

# create LOAD diagram
diagram.classname.createLoadDiagram=com.s1.app.disbursements.state.Diagram
diagram.createLoadDiagram.internal=APPROVED
diagram.createLoadDiagram.multiAuthorization=APPROVED

# create diagram
diagram.classname.createDiagram=com.s1.app.disbursements.state.Diagram
diagram.createDiagram.internal=APPROVED
diagram.createDiagram.multiAuthorization=PENDING_APPROVAL

# partial create diagram
diagram.classname.partialCreateDiagram=com.s1.app.disbursements.state.Diagram
diagram.partialCreateDiagram.ALL=PARTIALLY_SAVED

diagram.classname.createImportDiagram=com.s1.app.disbursements.state.Diagram
diagram.createImportDiagram.completed=COMPLETED
diagram.createImportDiagram.internal=IMPORTED
diagram.createImportDiagram.multiAuthorization=IMPORTED_PENDING_APPROVAL

method.modify.APPROVED=modifyDiagram
method.modify.PENDING_APPROVAL=modifyDiagram
method.modify.REJECTED=modifyDiagram
#method.modify.MODIFY_REJECTED=modifyDiagram
method.modify.SCHEDULED=modifyDiagram
method.modify.LOADED=modifyLoadDiagram
method.modify.PARTIALLY_SAVED=modifyDiagram
method.modify.IMPORTED=commitImportDiagram
method.modify.IMPORTED_PENDING_APPROVAL=commitImportDiagram
method.partialModify.ALL=partialModifyDiagram

method.modify-NoAuth.ALL=modifyDiagram

# modify diagram
diagram.classname.modifyDiagram=com.s1.app.disbursements.state.Diagram
diagram.modifyDiagram.internal=APPROVED
diagram.modifyDiagram.multiAuthorization=PENDING_APPROVAL

# modify LOAD diagram
diagram.classname.modifyLoadDiagram=com.s1.app.disbursements.state.Diagram
diagram.modifyLoadDiagram.internal=APPROVED
diagram.modifyLoadDiagram.multiAuthorization=APPROVED

# partial modify diagram
diagram.classname.partialModifyDiagram=com.s1.app.disbursements.state.Diagram
diagram.partialModifyDiagram.ALL=PARTIALLY_SAVED

diagram.classname.commitImportDiagram=com.s1.app.disbursements.state.Diagram
diagram.commitImportDiagram.internal=IMPORTED
diagram.commitImportDiagram.multiAuthorization=PENDING_APPROVAL


# delete processes
method.delete.APPROVED=deleteDiagram
method.delete.SCHEDULED=deleteDiagram
method.delete.DISALLOWED=deleteDiagram
method.delete.FAILED=deleteDiagram
method.delete.REJECTED=deleteDiagram
#method.delete.MODIFY_REJECTED=deleteDiagram
method.delete.PENDING_APPROVAL=deleteDiagram
method.delete.PARTIALLY_SAVED=deleteDiagram
method.delete.IMPORTED=deleteDiagram
method.delete.IMPORTED_PENDING_APPROVAL=deleteDiagram

method.delete-NoAuth.ALL=deleteDiagram

# delete diagram
diagram.classname.deleteDiagram=com.s1.app.disbursements.state.Diagram
diagram.deleteDiagram.internal=DELETED

#####################
# approve process   #
#####################

method.approve.PENDING_APPROVAL=approvalDiagram

# approval diagram
diagram.classname.approvalDiagram=com.s1.app.disbursements.state.Diagram
diagram.approvalDiagram.approvalNeeded=PENDING_APPROVAL
diagram.approvalDiagram.internal=APPROVED

#####################
# reject process    #
#####################

method.reject.PENDING_APPROVAL=rejectionDiagram
#method.reject.PENDING_APPROVAL=modifyRejectionDiagram

# add rejection diagram
diagram.classname.rejectionDiagram=com.s1.app.disbursements.state.Diagram
diagram.rejectionDiagram.rejected=REJECTED


# modify Rejection diagram
#diagram.classname.modifyRejectionDiagram=com.s1.app.disbursements.state.Diagram
#diagram.modifyRejectionDiagram.rejected=MODIFY_REJECTED


# New diagram created for WELLS MIGRATION. For customers NOT having template dual auth
# OR templates with status "LOADED" we would create template with "APPROVED" status. 
# For customers having template dual auth we would create template with "PENDING_APPROVAL" status.
diagram.classname.templateLoaderCreateDiagram=com.s1.app.disbursements.state.Diagram

# This is a special entry status used by PAYMENT LOADER batch job. For payment
# migration if the linked template is not already in the system we would create
# a DELETED template on the fly and link it with the payment.
diagram.templateLoaderCreateDiagram.deleted=DELETED

diagram.templateLoaderCreateDiagram.internal=APPROVED
diagram.templateLoaderCreateDiagram.multiAuthorization=PENDING_APPROVAL

# The "INCOMPLETE" status is numerically equal to "0" and the 
# template loader spec says that template with "0" status should
# come in as "PENDING_APPROVAL". Therefore we are mapping "INCOMPLETE" here
# to allow load of template with "0" status.

# create processes [template loader]
method.create-TemplateLoader.LOADED=templateLoaderCreateDiagram
method.create-TemplateLoader.INCOMPLETE=templateLoaderCreateDiagram
method.create-TemplateLoader.DELETED=templateLoaderCreateDiagram

method.modify-TemplateLoader.ALL=modifyDiagram
