# List of delete states.
# These states are used in the delete processes and in the authorize process.
# The transaction will be deleted if the transaction status is in this list
# else it will be updated.
delete.state.DELETED

approve.state.CHANGE_REQUESTED

# List of processes - states where the multiple authorization is NOT required
# (these are the initial states).
# during a call to the create/modify/delete processes (and their variants).
# Format: multiAuthNotReq.<process name|ALL>.<state name|ALL>
multiAuthNotReq.delete.ALL
multiAuthNotReq.deleteRecurring.ALL
multiAuthNotReq.deleteRecurringFromModel.ALL
multiAuthNotReq.deleteRecurring-from_model.ALL
multiAuthNotReq.createNextRecurrence.INCOMPLETE
multiAuthNotReq.createNextRecurrence-batch.INCOMPLETE
multiAuthNotReq.modify-authorize.ALL
multiAuthNotReq.delete-authorize.ALL
multiAuthNotReq.deleteRecurring-authorize.ALL
multiAuthNotReq.deleteRecurring-from_model-authorize.ALL
multiAuthNotReq.modify-batch_sent.ALL
multiAuthNotReq.modify-batch_response.ALL
multiAuthNotReq.modify-internal.ALL
multiAuthNotReq.create-internal.INCOMPLETE
multiAuthNotReq.approve.PENDING_APPROVAL
multiAuthNotReq.approve.PARTIALLY_APPROVED
multiAuthNotReq.executeData.ALL
multiAuthNotReq.cancel.ALL


# List of processes - states where the approval is required
# (these are the initial states).
# during a call to the create/modify/delete processes (and their variants).
# NOTE: A setting here supercedes any multiAuthNotReq setting
# Format: approveReq.<process name|ALL>.<state name|ALL>
approveReq.create.ALL
approveReq.create-from_template.ALL
approveReq.modify.ALL
approveReq.modify-thirdPartyModified.ALL
approveReq.verify.ALL
approveReq.removeFromSet.PENDING_ADD_APPROVAL_IN_SET
approveReq.removeFromSet.PARTIAL_ADD_APPROVAL_IN_SET
approveReq.changeTypeTo.ALL

# List of processes - states where the verify is required
# (these are the initial states).
# during a call to the create/modify/delete processes (and their variants).
# Format: verifyReq.<process name|ALL>.<state name|ALL>
verifyReq.create.ALL
verifyReq.create-from_template.ALL
verifyReq.modify.ALL
verifyReq.modify-thirdPartyModified.ALL

##############################
# ui create/modify processes #
##############################

# create process
method.create.INCOMPLETE=genericDiagram
method.create.APPROVED=genericDiagram

# create from template process
# the initial status is the template one
method.create-from_template.APPROVED=genericDiagram

# modify process
method.modify.PENDING_APPROVAL=modifyDiagram
method.modify.PARTIALLY_APPROVED=modifyDiagram
method.modify.READY_TO_VERIFY=modifyDiagram
method.modify.DISALLOWED=modifyDiagram
method.modify.SCHEDULED=modifyDiagram
method.modify.REJECTED=modifyDiagram
#method.modify.MODIFY_REJECTED=modifyDiagram
method.modify.PARTIALLY_SAVED=modifyDiagram
method.modify.ACTIVE=modifyDiagram

# delete diagram
diagram.classname.changeTypeFromDiagram=com.s1.app.disbursements.state.Diagram
diagram.changeTypeFromDiagram.internal=SCHEDULED

# modify process
method.changeTypeFrom.READY_TO_VERIFY=modifyDiagram
method.changeTypeFrom.PENDING_APPROVAL=modifyDiagram
method.changeTypeFrom.PARTIALLY_APPROVED=modifyDiagram
method.changeTypeFrom.SCHEDULED=modifyDiagram
method.changeTypeFrom.REJECTED=modifyDiagram
#method.changeTypeFrom.MODIFY_REJECTED=modifyDiagram

# modify process
method.changeTypeTo.READY_TO_VERIFY=modifyDiagram
method.changeTypeTo.PENDING_APPROVAL=modifyDiagram
method.changeTypeTo.PARTIALLY_APPROVED=modifyDiagram
method.changeTypeTo.SCHEDULED=modifyDiagram
method.changeTypeTo.REJECTED=modifyDiagram
#method.changeTypeTo.MODIFY_REJECTED=modifyDiagram

# generic diagram
diagram.classname.genericDiagram=com.s1.app.disbursements.state.Diagram
diagram.genericDiagram.verifyNeeded=READY_TO_VERIFY
diagram.genericDiagram.multiAuthorization=PENDING_APPROVAL
diagram.genericDiagram.internal=SCHEDULED
diagram.genericDiagram.sent=SENT
diagram.genericDiagram.completed=COMPLETED

# modify diagram - should duplicate genericDiagram in every way but exit approval edges should go to PENDING_MODIFY type states
diagram.classname.modifyDiagram=com.s1.app.disbursements.state.Diagram
diagram.modifyDiagram.verifyNeeded=READY_TO_VERIFY
diagram.modifyDiagram.multiAuthorization=PENDING_APPROVAL
diagram.modifyDiagram.internal=SCHEDULED
diagram.modifyDiagram.sent=SENT
diagram.modifyDiagram.changerequested=CHANGE_REQUESTED
diagram.modifyDiagram.failed=FAILED
diagram.modifyDiagram.disallowed=DISALLOWED
diagram.modifyDiagram.completed=COMPLETED


#####################
# ui delete process #
#####################

# delete process
method.delete.READY_TO_VERIFY=deleteDiagram
method.delete.PENDING_APPROVAL=deleteDiagram
method.delete.PARTIALLY_APPROVED=deleteDiagram
method.delete.SCHEDULED=deleteDiagram
method.delete.REJECTED=deleteDiagram
method.delete.PARTIALLY_SAVED=deleteDiagram
method.delete.REJECTED=deleteDiagram
#method.delete.MODIFY_REJECTED=deleteDiagram

# delete diagram
diagram.classname.deleteDiagram=com.s1.app.disbursements.state.Diagram
diagram.deleteDiagram.internal=DELETED

#######################################
# ui create/modify template processes #
#######################################

# create template process
method.createTemplate.READY_TO_VERIFY=genericTemplateDiagram
method.createTemplate.PENDING_APPROVAL=genericTemplateDiagram
method.createTemplate.PARTIALLY_APPROVED=genericTemplateDiagram
method.createTemplate.SCHEDULED=genericTemplateDiagram
method.createTemplate.REJECTED=genericTemplateDiagram
method.createTemplate.INCOMPLETE=genericTemplateDiagram
method.createTemplate.PARTIALLY_SAVED=genericTemplateDiagram

# modify template process
method.modifyTemplate.PENDING_APPROVAL=genericTemplateDiagram
method.modifyTemplate.APPROVED=genericTemplateDiagram

# modify template process
method.approveTemplate.PENDING_APPROVAL=genericTemplateDiagram


# generic template diagram
diagram.classname.genericTemplateDiagram=com.s1.app.disbursements.state.Diagram
diagram.genericTemplateDiagram.approvalNeeded=PENDING_APPROVAL
diagram.genericTemplateDiagram.internal=APPROVED

#################################################### 
# template thirdPartyModified process entry states #
####################################################

# modify template process
method.modifyTemplate-thirdPartyModified.PENDING_APPROVAL=genericTemplateDiagram
method.modifyTemplate-thirdPartyModified.APPROVED=genericTemplateDiagram


##############################
# ui delete template process #
##############################

# delete template process
method.deleteTemplate.APPROVED=deleteTemplateDiagram
method.deleteTemplate.PENDING_APPROVAL=deleteTemplateDiagram

# delete template via thirdparty process
method.deleteTemplate-thirdPartyModified.APPROVED=deleteTemplateDiagram
method.deleteTemplate-thirdPartyModified.PENDING_APPROVAL=deleteTemplateDiagram

# delete template diagram
diagram.classname.deleteTemplateDiagram=com.s1.app.disbursements.state.Diagram
diagram.deleteTemplateDiagram.internal=DELETED

##################
# verify process #
##################

# verify process
method.verify.READY_TO_VERIFY=verifyDiagram

# verify diagram
diagram.classname.verifyDiagram=com.s1.app.disbursements.state.Diagram
diagram.verifyDiagram.multiAuthorization=PENDING_APPROVAL
diagram.verifyDiagram.internal=SCHEDULED
diagram.verifyDiagram.sent=SENT
diagram.verifyDiagram.completed=COMPLETED

################
# sign process #
################

# sign process
method.sign.PENDING_APPROVAL=approveDiagram
method.sign.PARTIALLY_APPROVED=approveDiagram

# sign diagram
diagram.classname.approveDiagram=com.s1.app.disbursements.state.Diagram
diagram.approveDiagram.multiAuthorization=PARTIALLY_APPROVED
diagram.approveDiagram.internal=SCHEDULED
diagram.approveDiagram.sent=SENT
diagram.approveDiagram.failed=FAILED
diagram.approveDiagram.disallowed=DISALLOWED
diagram.approveDiagram.completed=COMPLETED

#Approve
# add - approve process
method.approve.PENDING_APPROVAL=approvalDiagram
method.approve.PARTIALLY_APPROVED=approvalDiagram

# add - approval diagram
diagram.classname.approvalDiagram=com.s1.app.disbursements.state.Diagram
diagram.approvalDiagram.approvalNeeded=PARTIALLY_APPROVED
diagram.approvalDiagram.internal=SCHEDULED
diagram.approvalDiagram.sent=SENT
diagram.approvalDiagram.failed=FAILED
diagram.approvalDiagram.disallowed=DISALLOWED
diagram.approvalDiagram.completed=COMPLETED

########################################################################################################
# NEEDS INVESTIGATION.
# WE HAD A DIFFERENT EXECUTE STRATEGY FOR PAYMENTS IN PENDING_ADD_APPROVAL (used to be the first one) 
# VS PENDING_MODIFY_APPROVAL (used to be the second one),
# and for PARTIAL ADD APPROVAL (used to be the third one) AND PARTIAL MODIFY APPROVAL (used to be the fourth one).
# NOW THAT WE HAVE A SINGLE PENDING STATUS AND A SINGLE PARTIAL STATUS, 
# WE HAVE NO WAY HERE OF DETERMINING WHETHER TO USE THE CREATE OR MODIFY STRATEGY.
# (Our suspicion is that we can use the modify strategy, but that has yet to be established.)
########################################################################################################

executeStrategy.approve.PENDING_APPROVAL=com.s1.app.disbursements.adapter.ExecuteCreateStrategy
executeStrategy.approve.PENDING_APPROVAL=com.s1.app.disbursements.adapter.ExecuteModifyStrategy
executeStrategy.approve.PARTIALLY_APPROVED=com.s1.app.disbursements.adapter.ExecuteCreateStrategy
executeStrategy.approve.PARTIALLY_APPROVED=com.s1.app.disbursements.adapter.ExecuteModifyStrategy


##################
# reject process #
##################

# add reject process
method.reject.PENDING_APPROVAL=rejectionDiagram
method.reject.PARTIALLY_APPROVED=rejectionDiagram

# add reject diagram
diagram.classname.rejectionDiagram=com.s1.app.disbursements.state.Diagram
diagram.rejectionDiagram.rejected=REJECTED

# modify reject process
#method.reject.PENDING_APPROVAL=modifyRejectionDiagram
#method.reject.PARTIALLY_APPROVED=modifyRejectionDiagram

# modify reject diagram
#diagram.classname.modifyRejectionDiagram=com.s1.app.disbursements.state.Diagram
#diagram.modifyRejectionDiagram.rejected=MODIFY_REJECTED

###################
# execute process #
###################

# execute process
method.executeData.SCHEDULED=executeDiagram

# execute diagram
diagram.classname.executeDiagram=com.s1.app.disbursements.state.Diagram
diagram.executeDiagram.sent=SENT
#diagram.executeDiagram.completed=COMPLETED
diagram.executeDiagram.scheduled=SCHEDULED
diagram.executeDiagram.validationFailed=FAILED

##############################
# thirdPartyModified process #
##############################

# modify-thirdPartyModified process
method.modify-thirdPartyModified.READY_TO_VERIFY=thirdPartyModifiedDiagram
method.modify-thirdPartyModified.PENDING_APPROVAL=thirdPartyModifiedDiagram
method.modify-thirdPartyModified.PARTIALLY_APPROVED=thirdPartyModifiedDiagram
method.modify-thirdPartyModified.SCHEDULED=thirdPartyModifiedDiagram

# thirdPartyModified diagram
diagram.classname.thirdPartyModifiedDiagram=com.s1.app.disbursements.state.Diagram
diagram.thirdPartyModifiedDiagram.verifyNeeded=READY_TO_VERIFY
diagram.thirdPartyModifiedDiagram.multiAuthorization=PENDING_APPROVAL
diagram.thirdPartyModifiedDiagram.internal=SCHEDULED

####################
# addInSet process #
####################

method.addInSet.PENDING_APPROVAL=addInSetDiagram
#method.addInSet.PARTIALLY_APPROVED=addInSetDiagram

diagram.classname.addInSetDiagram=com.s1.app.disbursements.state.Diagram
diagram.addInSetDiagram.internal=PENDING_ADD_APPROVAL_IN_SET

#########################
# removeFromSet process #
#########################

method.removeFromSet.PENDING_ADD_APPROVAL_IN_SET=readyToApproveDiagram
method.removeFromSet.PARTIAL_ADD_APPROVAL_IN_SET=partiallyApprovedDiagram
method.removeFromSet.FULLY_SIGNED_IN_SET=releaseDiagram
method.removeFromSet.ALL=nullDiagram

diagram.classname.readyToApproveDiagram=com.s1.app.disbursements.state.Diagram
diagram.readyToApproveDiagram.multiAuthorization=PENDING_APPROVAL

diagram.classname.partiallyApprovedDiagram=com.s1.app.disbursements.state.Diagram
diagram.partiallyApprovedDiagram.multiAuthorization=PARTIALLY_APPROVED

diagram.classname.nullDiagram=com.s1.app.disbursements.state.Diagram
#diagram.nullDiagram.internal.classname=com.s1.app.disbursements.state.NullExitDiagram
diagram.nullDiagram.ALL.classname=com.s1.app.disbursements.state.NullExitDiagram

#########################
# approve-inSet process #
#########################

# approve-inSet process
method.approve-inSet.PENDING_ADD_APPROVAL_IN_SET=approveInSetDiagram
method.approve-inSet.PARTIAL_ADD_APPROVAL_IN_SET=approveInSetDiagram

# approve-inSet diagram
diagram.classname.approveInSetDiagram=com.s1.app.disbursements.state.Diagram
diagram.approveInSetDiagram.approvalNeeded=PARTIAL_ADD_APPROVAL_IN_SET
diagram.approveInSetDiagram.internal=FULLY_SIGNED_IN_SET

#executeStrategy.approve-inSet.PENDING_ADD_APPROVAL_IN_SET=com.s1.app.disbursements.adapter.ExecuteModifyStrategy
#executeStrategy.approve-inSet.PARTIAL_ADD_APPROVAL_IN_SET=com.s1.app.disbursements.adapter.ExecuteModifyStrategy

###################
# release process #
###################

# release process
method.release.FULLY_SIGNED_IN_SET=releaseDiagram

# release diagram
diagram.classname.releaseDiagram=com.s1.app.disbursements.state.Diagram
diagram.releaseDiagram.internal=SCHEDULED
diagram.releaseDiagram.sent=SENT
diagram.releaseDiagram.completed=COMPLETED


###################
#   File Import   #
###################

# Need a copy in StateMachine_EMEA, StateMachine_Import seems to affect US only :(

# createFromImport process
#method.createFromImport.INCOMPLETE=genericDiagram
#approveReq.createFromImport.ALL

############ added for file import
# list of delete states
# these states are used in the delete processes and in the authorize process
# the transaction will be deleted if the transaction status is in this list
# else it will be updated
# For Import process, we want to force the 'rollback' delete to be a physical delete
delete.state.DELETED

multiAuthNotReq.deleteFromImport.ALL

method.createFromImport.INCOMPLETE=createDiagram
method.createFromImport.READY_TO_VERIFY=createDiagram
method.createFromImport.IMPORT_INCOMPLETE=createImportDiagram

method.createFromTemplateImport.INCOMPLETE=createDiagram
method.createFromTemplateImport.IMPORT_INCOMPLETE=createImportDiagram

method.deleteFromImport.IMPORTED=deleteDiagram
method.deleteFromImport.IMPORTED_PENDING_APPROVAL=deleteDiagram

method.commitImport.IMPORTED=commitImportDiagram
method.commitImport.IMPORTED_PENDING_APPROVAL=commitImportDiagram


diagram.classname.deleteDiagram=com.s1.app.disbursements.state.Diagram
diagram.deleteDiagram.internal=DELETED

diagram.classname.createImportDiagram=com.s1.app.disbursements.state.Diagram
diagram.createImportDiagram.sent=SENT
diagram.createImportDiagram.completed=COMPLETED
diagram.createImportDiagram.internal=IMPORTED
diagram.createImportDiagram.multiAuthorization=IMPORTED_PENDING_APPROVAL

diagram.classname.createDiagram=com.s1.app.disbursements.state.Diagram
diagram.createDiagram.sent=SENT
diagram.createDiagram.failed=FAILED
diagram.createDiagram.disallowed=DISALLOWED
diagram.createDiagram.completed=COMPLETED
diagram.createDiagram.internal=SCHEDULED
diagram.createDiagram.multiAuthorization=PENDING_APPROVAL

diagram.classname.commitImportDiagram=com.s1.app.disbursements.state.Diagram
diagram.commitImportDiagram.completed=COMPLETED
diagram.commitImportDiagram.internal=SCHEDULED
diagram.commitImportDiagram.multiAuthorization=PENDING_APPROVAL

approveReq.createFromImport.ALL
approveReq.commitImport.ALL

#batch
method.modify-batch_execute.ALL=nullDiagram

#Save Incomplete
method.partialCreate.INCOMPLETE=partialCreateDiagram
diagram.classname.partialCreateDiagram=com.s1.app.disbursements.state.Diagram
diagram.partialCreateDiagram.ALL=PARTIALLY_SAVED

method.partialModify.ALL=partialModifyDiagram
diagram.classname.partialModifyDiagram=com.s1.app.disbursements.state.Diagram
diagram.partialModifyDiagram.ALL=PARTIALLY_SAVED

##########################
# Cancel Request process #
##########################

#state.CANCEL_REQUESTED=136
#state.CANCELLED=137

method.cancel.ACTIVE=cancelRequestDiagram
method.cancel.CANCEL_FAILED=cancelRequestDiagram

# cancel request diagram
diagram.classname.cancelRequestDiagram=com.s1.app.disbursements.state.Diagram
diagram.cancelRequestDiagram.sent=CANCEL_REQUESTED
diagram.cancelRequestDiagram.failed=CANCEL_FAILED
diagram.cancelRequestDiagram.internal=CANCEL_FAILED
diagram.cancelRequestDiagram.disallowed=CANCEL_REJECTED

method.executeData.CANCEL_REQUESTED=cancelDiagram

# cancel request diagram
diagram.classname.cancelDiagram=com.s1.app.disbursements.state.Diagram
diagram.cancelDiagram.internal=CANCELLED

method.modify-batch_execute.ALL=nullDiagram
method.create-batch_execute.ALL=nullDiagram