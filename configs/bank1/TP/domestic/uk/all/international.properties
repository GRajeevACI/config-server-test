# processor
Processor.name=com.s1.emea.common.thirdparty.base.ThirdPartyProcessor

# third party context type (typeCdKy in VFMThirdParty)
# could be define either by constant name or directly by the value
Context.type=com.s1.emea.common.thirdparty.EMEAThirdPartyTypes.DOMESTIC

# transaction manager - determines the policy for what stage in the transaction lifecycle 
# we clone a Third Party when used in a payment or templates
# In CB 3.5 we always clone TPs for payments, never clone for templates
transactionManager=com.s1.emea.common.thirdparty.transaction.EMEACloneTPTransactionManager

# common (or default) setting values
value.class.common=com.s1.emea.common.thirdparty.common.EMEAThirdPartyValue
criteria.common=com.s1.emea.common.thirdparty.common.EMEAThirdPartyCriteria
valueTypeRelevant.common=com.s1.emea.common.thirdparty.type.ValueTypeRelevant

# list of sub-types
subtype.1=domestic_ePayee
subtype.2=domestic_draftPayee
subtype.3=domestic_payer

entitlement.common=/thirdparty/domestic/create_modify

# List of disbursement contexts using third party context (or one of the sub-types).
# This list is used in the modify and delete processes to notify all
# transactions using the modified/deleted third party.
# Note since CBI3.5: This is only relevant for payment types that use templates.
#                    Payments are now always saved with a copy of the master third party
disbursement.context.1=UK_BACS
disbursement.context.2=UK_CHAPS
#disbursement.context.3=DOM_DRAFT
#disbursement.context.4=EMEA_SO
disbursement.context.5=MULTI_BACS
#disbursement.context.6=Collection
#disbursement.context.7=MULTI_Collection
#disbursement.context.8=CollectionMandate
#disbursement.context.8=Mt100Dom
disbursement.context.9=FP

# All of the common validators
validator.common.10=com.s1.emea.common.thirdparty.validator.ValueObjectRelevantValidator
validator.common.20=com.s1.emea.common.thirdparty.validator.ThirdPartyNameValidator
validator.common.30=com.s1.emea.common.thirdparty.validator.ThirdPartyNicknameValidator
validator.common.40=com.s1.emea.common.thirdparty.validator.SubTypeValidator
validator.common.50=com.s1.emea.common.thirdparty.validator.UniqueNicknameValidator
validator.common.60=com.s1.emea.common.thirdparty.validator.UniqueAccountBankValidator
validator.common.70=com.s1.emea.common.thirdparty.validator.UniqueNameAddressValidator

##############################
# currency/country/bank type #
##############################
# the currencies use the alpha 3 code
# the countries use the iso alpha 2 code
# the bank types use the description from the VFMCode table
# the available lists can be :
# - missing: the only available value is the default one
# - the value "all": all values are accepted
# - a list of values comma-separated (,)

defaultCurrency=GBP
defaultCountry=GB
//defaultBankType=xxx

#########
# audit #
#########
# 4 process properties are used for the creation of the AuditRecord:
# - auditRecord.function.XXXX: the audit function name
# - auditRecord.component.XXXX: the audit component name
# - auditRecord.class.XXXX: the object used to add all entries in the record
# - auditRecord.method.XXXX: the method used in the above object
# If auditRecord.function is not defined for the process, no audit will be done.
# The method defined must have the following signature:
# (AuditRecord _record, Object _object) where:
# - _record is the audit record with the component and the function already set;
# - _object is the object where to get the values to use in the addEntry methods
#   (i.e.: a ThirdPartyValue object in case of the CreateProcess)

auditRecord.component.common=CBKCmpTPDom
auditRecord.class.common=com.s1.emea.common.thirdparty.audit.ThirdPartyAudit
auditRecord.method.common=addFullRecordForValue

# ARB-970
auditRecord.method.approve=addApproveRecordForValue
auditRecord.method.reject=addApproveRecordForValue
#############
# processes #
#############

# when the user need some initial info to help him create a new third party
Process.initialize.className=com.s1.emea.common.thirdparty.process.InitializeProcess
validator.initialize.10=com.s1.app.disbursements.validator.NullValidator

# when the user try to create a third party
Process.create.className=com.s1.emea.common.thirdparty.process.CreateProcess
subtypeProcess.create=create_from_all
validator.create.10=com.s1.app.disbursements.validator.CommonValidator
auditRecord.function.create=CBKAFnTPDomCr

# when the user try to modify a third party
Process.modify.className=com.s1.emea.common.thirdparty.process.ModifyProcess
subtypeProcess.modify=modify_from_all
validator.modify.10=com.s1.app.disbursements.validator.CommonValidator
auditRecord.function.modify=CBKAFnTPDomMd

# when the user try to delete a third party
Process.delete.className=com.s1.emea.common.thirdparty.process.DeleteProcess
subtypeProcess.delete=delete_from_all
validator.delete.10=com.s1.emea.common.thirdparty.validator.ValueObjectRelevantValidator
validator.delete.20=com.s1.emea.common.thirdparty.validator.SubTypeValidator
auditRecord.function.delete=CBKAFnTPDomDl

# when the user try to retrieve a third party
Process.get.className=com.s1.emea.common.thirdparty.process.GetProcess
validator.get.10=com.s1.emea.common.thirdparty.validator.ValueObjectRelevantValidator
validator.get.20=com.s1.emea.common.thirdparty.validator.IsUsedCalculator

# to retrieve the list of third parties for the customer
Process.getByCustomer.className=com.s1.emea.common.thirdparty.process.GetByCustomerProcess
validator.getByCustomer.10=com.s1.app.disbursements.validator.NullValidator

# to retrieve the list of third parties for the customer
Process.getByCriteria.className=com.s1.emea.common.thirdparty.process.GetByCriteriaProcess
validator.getByCriteria.10=com.s1.app.disbursements.validator.NullValidator
