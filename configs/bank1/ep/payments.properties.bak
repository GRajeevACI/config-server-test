#Over-ride CB bootstrap to add our own fragment
##--- CBI com.s1.arch.common.bootstrap.SessionManagerBootstrap
bootstrap.fragments = com.s1.arch.common.bootstrap.MetaBootstrap,\
					  com.s1.arch.common.bootstrap.FieldValueBootstrap,\
                      com.s1.arch.common.bootstrap.LocaleBootstrap, \
                      com.s1.arch.common.bootstrap.SecureRandomBootstrap,\
                      com.s1.arch.common.bootstrap.TranslationCacheBootstrap,\
                      com.s1.banking.bootstrap.BankingBootstrap,\
                      com.s1.payments.struts.S1TilesBootstrap,\
                      com.s1.payments.configuration.DefaultPropertiesBootstrap,\
                      com.aciworldwide.common.mapper.SOAPropertiesBootstrap
#------------------ Add this fragment if you want deployment at system startup
#                      com.s1.frameworks.payments.type.DeploymentBootstrap


#----------------- SSO property settings ----------------------
#-- SSO adapter for distributed management of session attributes
#
# Todo: When we get to merging in the Payments UI functionality, we need to address how we will do context switching  
#
grnds.factory.target.producer.SessionDataAdapter=SpringBeanProducer
grnds.factory.env.target.SessionDataAdapter.beanName=sessionDataAdapter
#-- Distributed session data cookie name
SessionDataAdapter.cookie=SessionDataContextToken
#-- Session attributes for context sharing
session.context.sharing=\
	org.apache.struts.action.LOCALE,\
	com.s1.common.parameters.bom.Globals.LOCALE_ID_FROM_LOGIN_PAGE,\
	com.s1.common.entitlement.application.sessionApplicationKey,\
	com.s1.emea.disbursement.common.ui.TXN_LIST,index,\
	__CSRFGUARD_TOKEN_NAME,OWASP_CSRFTOKEN,\
   org.apache.struts.action.ERROR,org.apache.struts.action.GLOBAL_WARNING,\
   org.apache.struts.action.GLOBAL_INFORMATION,org.apache.struts.action.GLOBAL_MESSAGE,\
   systemcontext,ITEMS_COUNT_PER_PAGE

#Settings needed for Payment Type Deployment-Uncomment this when payments-deployment project is included in the EAR
PeerFactory.com.s1.common.entitlement.DataOperationValue=com.s1.frameworks.payments.type.takeback.DataOperationPropertyDao

grnds.factory.target.producer.PaymentsTypePrototypeFactory=LocalProducer
grnds.factory.env.target.PaymentsTypePrototypeFactory.classname=com.s1.frameworks.payments.type.PaymentsTypePrototypeFactoryImpl

grnds.factory.target.producer.ThirdPartyTypePrototypeFactory=LocalProducer
grnds.factory.env.target.ThirdPartyTypePrototypeFactory.classname=com.s1.frameworks.payments.thirdparty.ThirdPartyTypePrototypeFactoryImpl

grnds.factory.target.producer.PaymentTypeDeploymentProcessor=LocalProducer
grnds.factory.env.target.PaymentTypeDeploymentProcessor.classname=com.s1.frameworks.payments.type.PaymentTypeSpecificationProcessor

grnds.factory.target.producer.ThirdPartyTypeDeploymentProcessor=LocalProducer
grnds.factory.env.target.ThirdPartyTypeDeploymentProcessor.classname=com.s1.frameworks.payments.thirdparty.ThirdPartyDeploymentProcessor

grnds.factory.target.producer./currencyformat=LocalProducer
grnds.factory.env.target./currencyformat.classname=com.s1.payments.ui.query.CurrencyFormatProcessor

grnds.factory.target.producer./runningTotal=LocalProducer
grnds.factory.env.target./runningTotal.classname=com.s1.payments.ui.query.RunningTotalProcessor

grnds.factory.target.producer./checkDigit=LocalProducer
grnds.factory.env.target./checkDigit.classname=com.s1.payments.ui.query.CheckDigitGenerateProcessor

grnds.factory.target.producer./recipientIdType=LocalProducer
grnds.factory.env.target./recipientIdType.classname=com.s1.payments.ui.query.RecipientIdTypeProcessor

grnds.factory.target.producer./retrieveContract=LocalProducer
grnds.factory.env.target./retrieveContract.classname=com.s1.payments.ui.query.RetrieveContractProcessor

grnds.factory.target.producer.ProcessingSchedule=LocalProducer
grnds.factory.env.target.ProcessingSchedule.classname=com.s1.frameworks.payments.ProcessingScheduleBridgeProvider

grnds.factory.target.producer.HolidaySchedule=LocalProducer
grnds.factory.env.target.HolidaySchedule.classname=com.s1.frameworks.payments.CountryHolidayScheduleBridgeProvider

grnds.factory.target.producer.CBIExecuteAdapter=SpringBeanProducer
grnds.factory.env.target.CBIExecuteAdapter.beanName=testCBIPaymentExecutor

#--- These are used to produce runtime instances of payments module implementations
DisbursementContext.classname = com.s1.app.disbursements.base.DisbursementContext
ThirdPartyContext.class = com.s1.payments.configuration.ThirdPartyContext
MessageResources.classname = com.s1.frameworks.payment.ui.util.CustomPaymentsPropertyMessageResources

PeerFactory.com.s1.emea.common.thirdparty.common.EMEAThirdPartyValue=com.s1.payments.dao.ThirdPartyDao
PeerFactory.com.s1.payments.instruction.InstructionValue=com.s1.app.disbursements.dao.DrCrDao
PeerFactory.com.s1.payments.instruction.LineItemValue=com.s1.payments.dao.LineItemDao
PeerFactory.com.s1.payments.advice.AdviceValue=com.s1.payments.dao.AdviceDao
PeerFactory.com.s1.payments.advice.AdviseeValue=com.s1.payments.dao.AdviseeDao
PeerFactory.com.s1.payments.instruction.FXContractAmountValue=com.s1.payments.dao.FXContractAmountDao
PeerFactory.com.s1.payments.instruction.InstructionSummary=com.s1.payments.dao.InstructionSummaryDao
PeerFactory.com.s1.payments.instruction.RegistrationInstructionSummary=com.s1.payments.dao.RegistrationInstructionSummaryDao
PeerFactory.com.s1.payments.instruction.ChequeInfoValue=com.s1.payments.dao.ChequeInfoDao
PeerFactory.com.s1.payments.instruction.BankValue=com.s1.payments.dao.BankDao
PeerFactory.com.s1.payments.target.ThirdPartyValue=com.s1.payments.dao.ThirdPartyDao
PeerFactory.com.s1.payments.originatorInstruction.OriginatorInstructionValue=com.s1.payments.dao.OriginatorInstructionDao
PeerFactory.com.s1.common.entitlement.FunctionalOperationsMapping=com.s1.common.entitlement.dao.FunctionalOperationsMappingDao
PeerFactory.com.aci.payments.bank.IBANStructureValue=com.aci.payments.bank.dao.IBANStructureDao
PeerFactory.com.aci.payments.bank.IBANExclusionValue=com.aci.payments.bank.dao.IBANExclusionDao


ListPeerFactory.PaymentThirdPartyList=com.s1.payments.dao.PaymentThirdPartyListDao

#IBATIS DAOs
grnds.factory.target.producer.RecurrenceSpecificationDAO=SpringBeanProducer
grnds.factory.env.target.RecurrenceSpecificationDAO.beanName=recurrenceSpecificationDao

grnds.factory.target.producer.SchedulingHintDAO=SpringBeanProducer
grnds.factory.env.target.SchedulingHintDAO.beanName=schedulingHintDao

grnds.factory.target.producer.OperationFeatureMapDAO=SpringBeanProducer
grnds.factory.env.target.OperationFeatureMapDAO.beanName=operationFeatureMapDao

grnds.factory.target.producer.RequestForPaymentDAO=SpringBeanProducer
grnds.factory.env.target.RequestForPaymentDAO.beanName=requestForPaymentDao

#enable caching for accelerated payments xml files
accelerated.payments.caching.enabled=true

#Add payment types (by COS feature name) to be deployed using the deployer at startup here

# Commenting payments.type.installed , templates.type.installed and payments.thirdparty.type.installed
#payments.type.installed=COL_PYRL,COL_OTP,COL_SUPLR,COL_COLL,COL_PSE,COL_SVC,ITL_ILV,CA_AFT,COL_GIRO,SG_BGIRO,ITL_SPCR,SP_DD

# template list (used only for template center, note that COL_PSE and COL_SVC have been omitted)
#templates.type.installed=COL_PYRL,COL_OTP,COL_SUPLR,COL_COLL,ITL_ILV,ITL_SPCR,CA_AFT,COL_GIRO,SG_BGIRO,SP_DD

# Add some or all of the  following predefined payment types
#  SG_GIRO,SG_ACT,SG_MEPS,SG_TT,SG_GIROBULK,SG_GIROBULKCOLLECTION,SG_PYRL,SG_BNKDRFT,SG_CORPCHQ,\
#  HK_AP,HK_CHATS,HK_TT,HK_ACT,HK_BCOLL,HK_BPAY,HK_PYRL,HK_BNKDRFT,HK_CORPCHQ,\
#  IN_NEFT,IN_RTGS,IN_TT,IN_ACT,IN_BPAY,IN_PYRL,IN_BNKDRFT,IN_CORPCHQ,\
#  ID_SKN,ID_TT,ID_ACT,ID_RTGS,ID_BPAY,ID_PYRL,ID_BNKDRFT,ID_CORPCHQ,\
#  CN_CNAPS,CN_TT,CN_ACT,CN_BPAY,CN_PYRL,CN_BNKDRFT,CN_CORPCHQ,\
#  TW_FISC,TW_TT,TW_ACT,TW_BPAY,TW_PYRL,TW_BNKDRFT,TW_CORPCHQ,\
#  MANDATE_B2B,MANDATE_CORE,DD_B2B,DD_CORE,\
#  COL_PSE,\
#  SEPA_CORE,SEPA_SO,COL_GIRO,SMP_BPYRL,SMP_PYRL,SA_DOM,SA_INB,SA_PYR

#If ACH payment type is not deployed, remove the type from below list
payments.type.properties.additional.types=US_ACH_CHILD,US_ACH_PPD,US_ACH_CCD,US_ACH_TAX,US_ACH_CTX,US_ACH_IAT,US_ACH_DOMIAT,US_ACH_RCK,US_ACH_TEL,US_ACH_WEB,\
			US_BASIC_ACH_DD,US_BASIC_ACH_PD,US_BASIC_ACH_PC,US_BASIC_ACH_BD,US_BASIC_ACH_BC,US_BASIC_ACH_CS,US_BASIC_ACH_RCK,US_BASIC_ACH_TAX,US_BASIC_ACH_TEL,US_BASIC_ACH_WEB

#Add third party types (by GRNDS TP subdomain name) to be deployed using the deployer at startup here
# payments.thirdparty.type.installed=col,clc,ilv,spcr,ca,colg,sg,sp
payments.thirdparty.type.installed=
# Add some or all of the following third party types
# sg,sgc,in,hk,hkc,cn,id,tw,crossborder,colg,smp,sad,sai,sap

#If ACH recipient type is not deployed, remove the type from below list
payments.thirdparty.type.properties.additional.types=us

payments.type.deploy.persist.enabled=true
payments.type.properties.output.enabled=true
payments.type.properties.output.location=c:/temp/pmts

#to update all existing COS
payments.type.linkto.existing.cos=false

payments.operation.targetlessPattern=/payment/.*|/support/.*|/thirdparty/.*|/disp/.*|/gsso/.*
payments.operation.accountPattern=/dataop/.*

#Add per GBS-12437 , it needs to be removed when all legacy payment types are reimplemented using Payment Type deployer
payments.operation.legacyExclusionPattern=/payment/ach/.*|/dataop/payment/ach*|/payment/wire/.*|/dataop/payment/wire*\
	|/payment/international/wire/.*|/dataop/payment/international/wire*|/payment/AdviceToReceive/.*\
	|/dataop/payment/AdviceToReceive*|/payment/drafts/.*|/dataop/payment/drafts*|/payment/USFederalTax/.*\
	|/dataop/payment/UsFederalTax*|/payment/Drawdown/.*|/dataop/payment/Drawdown*|/payment/multiBank/.*\
	|/dataop/payment/multiBank*|/payment/bookwire/.*|/dataop/payment/bookwire*

#The deployer will not begin processing if the last deployment was started within this interval
payments.type.deployment.interval=360000

#------------- Begin: Purge view properties -------------
grnds.factory.target.producer.PurgeView=LocalProducer
grnds.factory.env.target.PurgeView.classname=com.s1.frameworks.payments.batch.PurgeView

grnds.factory.target.producer.TemplatePurgeView=LocalProducer
grnds.factory.env.target.TemplatePurgeView.classname=com.s1.frameworks.payments.batch.TemplatePurgeView
grnds.factory.target.producer.TemplateVfmInstrPurgeView=LocalProducer
grnds.factory.env.target.TemplateVfmInstrPurgeView.classname=com.s1.frameworks.payments.batch.TemplateVfmInstrPurgeView

#---- Persistence peer for view query executor
PeerFactory.com.s1.frameworks.payments.batch.persistence.PurgeViewValue=com.s1.frameworks.payments.batch.persistence.PurgeViewDao

#Default payment status codes for purge view query
payments.purgeView.statusCodes=8,9,12,13,39

#Do not format the SQL by default
payments.purgeView.format.sql=false

#Purge parameters are applied at Group level
payments.purgeView.grouplevel=true
#------------- End: Purge view properties -------------

#------------- Begin: Paymentparameters properties -------------
grnds.factory.target.producer.PaymentParameters=LocalProducer
#grnds.factory.env.target.PaymentParameters.classname=com.s1.app.sam.web.config.general.payments.PaymentParametersConfig
# Uncomment the below property if the purge parameters for payments need to be at the group level rather than the payment type level
# and comment the above property.
grnds.factory.env.target.PaymentParameters.classname=com.s1.app.sam.web.config.general.payments.PaymentGroupParametersConfig

#------------- End: Paymentparameters properties -------------

#------------- Begin: Payment post-deploy -------------
grnds.factory.target.producer.PaymentPostDeploy=LocalProducer
grnds.factory.env.target.PaymentPostDeploy.classname=com.s1.frameworks.payments.type.PaymentPostDeployDefault
#------------- End: Payment post-deploy -------------

#Bank Lookup Service - Dummy implementation - Services need to provide their own real implementation.
#See http://wiki.s1.com/display/INTL/Using+Bank+Lookup
grnds.factory.target.producer.BankLookupService=LocalProducer
grnds.factory.env.target.BankLookupService.classname=com.s1.payments.bank.DummyBankLookupService

#------------- Begin: UI Lookup implementation classes -------------
grnds.factory.target.producer./banks/list=LocalProducer
grnds.factory.env.target./banks/list.classname=com.s1.payments.ui.query.BankSearchProcessor

grnds.factory.target.producer./banks/branchlist=LocalProducer
grnds.factory.env.target./banks/branchlist.classname=com.s1.payments.ui.query.BranchSearchProcessor

grnds.factory.target.producer./banks/bankId=LocalProducer
grnds.factory.env.target./banks/bankId.classname=com.s1.payments.ui.query.BankTypeIdProcessor

grnds.factory.target.producer./banks/bankdestination=LocalProducer
grnds.factory.env.target./banks/bankdestination.classname=com.s1.payments.ui.query.BankDetailsProcessor

grnds.factory.target.producer./translation=LocalProducer
grnds.factory.env.target./translation.classname=com.s1.payments.ui.query.TranslationProcessor

grnds.factory.target.producer./recipient/getRecipientCurrency=LocalProducer
grnds.factory.env.target./recipient/getRecipientCurrency.classname=com.s1.payments.ui.query.RecipientCountryProcessor

grnds.factory.target.producer./recipient/accountType=LocalProducer
grnds.factory.env.target./recipient/accountType.classname=com.s1.payments.ui.query.RecipientAccountTypeProcessor

#------------- End: UI Query implementation classes -------------

PeerFactory.com.s1.emea.common.thirdparty.common.EMEAThirdPartyValue=com.s1.payments.dao.ThirdPartyDao
PeerFactory.com.s1.payments.target.CommonThirdPartyValue=com.s1.payments.dao.CommonThirdPartyDao
PeerFactory.com.s1.payments.target.PmtCityValue=com.s1.payments.dao.PmtCityDao
PeerFactory.com.s1.payments.instruction.PaymentRequestSummary=com.s1.payments.dao.PaymentRequestSummaryDao
PeerFactory.com.aci.payments.bank.IBANPLUSValue=com.aci.payments.bank.dao.IBANPLUSDao

#--- CBI --- payments.thirdparty.type.installed=crossborder,sg,sgc,in,hk,hkc,cn,id,tw,uk
# class name of implementation class for getting the country an account is in
account.country.lookup.class=com.s1.payments.account.service.AccountCountryLookupDummy
#account.country.lookup.class=com.s1.payments.account.service.AccountCountryLookupByAffiliate

# map of affiliate names to country codes, used by AccountCountryLookupByAffiliate class
# affiliate.country.AFFILIATE_ID=COUNTRY_CODE
# For example for an affiliate with id americaAffiliate who is in America
# affiliate.country.code.americaAffiliate=US

grnds.factory.target.producer.DefaultMessageProperties=LocalProducer
grnds.factory.env.target.DefaultMessageProperties.classname=com.s1.payments.configuration.ConcreteDefaultMessageProperties

#------------- Following are used by the asynchronous process listener -------------
async.process.listener.receiveTimeout=10000
async.process.listener.schedulingEnabled=true
async.process.listener.recoveryInterval=5000
async.process.listener.retryScheduleDelay=30000
async.process.listener.maxRetries=3

#------------------- Log directories for async process ISO messaging XML
#- To disable any log type use "OFF" or an empty string
async.process.xml.logs.status		=OFF
async.process.xml.logs.instruction	=OFF
async.process.xml.logs.iso			=OFF
async.process.xml.logs.mai			=OFF


#------------- Following are used by offline payment deployment process -------------
offline.payments.deploy.refresh=false
standalone.client.springContextPath=classpath*:/config/spring-files/offline/beanRefContext.xml

#------------- Bean definitions use by TransmitComplete process for recurring stream maintenance -------------
grnds.factory.target.producer.StreamCompletionChecker=SpringBeanProducer
grnds.factory.env.target.StreamCompletionChecker.beanName=streamCompletionChecker
grnds.factory.target.producer.MaintenanceLauncher=SpringBeanProducer
grnds.factory.env.target.MaintenanceLauncher.beanName=maintenanceLauncher

#--------------Character to digit conversion-------------------------
character.A=10
character.B=11
character.C=12
character.D=13
character.E=14
character.F=15
character.G=16
character.H=17
character.I=18
character.J=19
character.K=20
character.L=21
character.M=22
character.N=23
character.0=24
character.P=25
character.Q=26
character.R=27
character.S=28
character.T=29
character.U=30
character.V=31
character.W=32
character.X=33
character.Y=34
character.Z=35
#####---------Real time contract rate setting -----------------#########
realtime.contract=false

##################################################################################
# VALIDATION CHAINS FOR BANK IDs
# two validators are available for validating a bank ID against a bank ID type, a format validator and a lookup validator 

# the lookup validator is available for determining if there is a bank in the system with a given bank ID for a given type;
# it will be triggered by the must-be-standard-bank property of the bank ID type

# the validation chain uses the bank ID type code (e.g, 99) to discover this chain
##################################################################################

# Colombia
validator.multi.fiid.99.00=com.s1.common.multifiid.validations.GenericFiidFormatValidator
validator.multi.fiid.99.10=com.s1.common.multifiid.validations.IntlFiidLookupValidator

#Canada AFT Payment 
disbursements.caaft.paymentDate.defaultDays.debit=1
disbursements.caaft.paymentDate.defaultDays.credit=1
disbursements.caaft.sendDate.defaultDays.debit=1
disbursements.caaft.sendDate.defaultDays.credit=1
disbursements.caaft.UseHolidayCalendar=false
disbursements.caaft.CountryCode=CA
disbursements.caaft.CurrencyCode=CAD
disbursements.caaft.futureDays.debit=60
disbursements.caaft.futureDays.credit=60

# Colombia Giro Payment
disbursements.colgiro.paymentDate.defaultDays.=0
disbursements.colgiro.sendDate.defaultDays.=0
disbursements.colgiro.UseHolidayCalendar=false
disbursements.colgiro.CountryCode=CO
disbursements.colgiro.CurrencyCode=COP
disbursements.colgiro.futureDays=60

# International Low Value Payment
disbursements.itlilv.UseHolidayCalendar=true
disbursements.itlilv.futureDays=60
disbursements.itlilv.futureDays.credit=60
disbursements.itlilv.futureDays.debit=60
#GBS-40428: added a new property to enable/disable recipient account number validation
disbursements.itlilv.validate.recipientAccntNumber=true

# Sepa Credit Transfer Payment 
disbursements.itlspcr.paymentDate.defaultDays.=1
disbursements.itlspcr.paymentDate.defaultDays.credit=1
disbursements.itlspcr.sendDate.defaultDays.=1
disbursements.itlspcr.sendDate.defaultDays.credit=1
disbursements.itlspcr.UseHolidayCalendar=false
disbursements.itlspcr.futureDays=60
disbursements.itlspcr.futureDays.credit=60

# International Singapore Giro Payment
disbursements.sgbgiro.paymentDate.defaultDays.debit=1
disbursements.sgbgiro.paymentDate.defaultDays.credit=1
disbursements.sgbgiro.sendDate.defaultDays.debit=1
disbursements.sgbgiro.sendDate.defaultDays.credit=1
disbursements.sgbgiro.UseHolidayCalendar=true
disbursements.sgbgiro.CountryCode=SG
disbursements.sgbgiro.CurrencyCode=SGD
disbursements.sgbgiro.futureDays.credit=60
disbursements.sgbgiro.futureDays.debit=60

# SEPA Direct Debits
disbursements.spdd.sendDate.defaultDays.debit=1
disbursements.spdd.futureDays.debit=60
disbursements.spdd.paymentDate.defaultDays.=1
disbursements.spdd.paymentDate.defaultDays.debit=1
disbursements.spdd.sendDate.defaultDays.=1
disbursements.spdd.UseHolidayCalendar=false
disbursements.spdd.futureDays=60

# International Sample Bulk Payment
disbursements.smpbpyrl.UseHolidayCalendar=true
disbursements.smpbpyrl.futureDays=60
disbursements.smpbpyrl.futureDays.credit=60
disbursements.smpbpyrl.futureDays.debit=60

#Add the following propeties for future days if there are subtype currently there are only 2 subtypes credit,debit
disbursements.hkap.futureDays.credit=60
disbursements.hkap.futureDays.debit=60

#Saudi Payroll Payment
disbursements.sapyr.futureDays=60
disbursements.sapyr.futureDays.credit=60
disbursements.sapyr.paymentDate.defaultDays.=1
disbursements.sapyr.paymentDate.defaultDays.credit=1
disbursements.sapyr.sendDate.defaultDays.=1
disbursements.sapyr.sendDate.defaultDays.credit=1
disbursements.sapyr.UseHolidayCalendar=true
disbursements.sapyr.CountryCode=SA
disbursements.sapyr.CurrencyCode=SAR


# Saudi Intrabank Payment
disbursements.sainb.futureDays=60
disbursements.sainb.paymentDate.defaultDays.=0
disbursements.sainb.sendDate.defaultDays.=0
disbursements.sainb.UseHolidayCalendar=true
disbursements.sainb.CountryCode=SA
disbursements.sainb.CurrencyCode=SAR

# Saudi Domestic Payment
disbursements.sadom.futureDays=60
disbursements.sadom.paymentDate.defaultDays.=1
disbursements.sadom.sendDate.defaultDays.=1
disbursements.sadom.UseHolidayCalendar=true
disbursements.sadom.CountryCode=SA
disbursements.sadom.CurrencyCode=SAR

#Export Properties
export.file.path=c:/temp/exportFiles/

import.chunk.faultTolerant.size=100
import.chunk.nonFaultTolerant.size=50

jobRepository.bean=jobRepository

##applicable values are DestCtryAcctCurrPmtCurr, DestCtryAcctCurr and DestCtryPmtCurr
account.country.currency.display=DestCtryAcctCurrPmtCurr

#GBS-64883 : For max future days validation - added for Colombia payments 
disbursements.colcoll.futureDays=60
disbursements.colotp.futureDays=60
disbursements.colpyrl.futureDays=60
disbursements.colsuplr.futureDays=60
disbursements.colsvc.futureDays=60

#Account Balances display Setting
payments.balances.all=noDisplay

payments.balances.ach=noDisplay

payments.balances.wires=noDisplay 

transfers.balances=displayWarnAll

fetchRealTimeBalances=false
disbursements.colsvc.futureDays=60

payments.redirect.utility=com.s1.payments.integration.PaymentsRedirectUtilityImpl

payment.approval.maxsize=150
payments.approval.chunk.size=25