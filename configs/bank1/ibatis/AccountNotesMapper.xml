<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.s1.common.accounts.loan.mapper.AccountNotesMapper" >

  <resultMap id="AccountNotesCountResult" type="com.s1.common.accounts.loan.dao.AccountNotesCount">
        <result column="accountKy" property="accountKy" jdbcType="INTEGER"  />
        <result column="noteCount" property="noteCount" jdbcType="INTEGER"  />
	</resultMap>
	
  <resultMap id="BaseResultMap" type="com.s1.common.accounts.loan.dao.AccountNotes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    <id column="BNKACCTNOTEKY" property="oid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKACCTKY" property="bnkAcctOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKCOMMITMENTKY" property="commitmentOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKSUBCOMMITMENTKY" property="subCommitmentOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
    <result column="UPDATEDTTM" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP" property="versionStamp" jdbcType="SMALLINT" />
  </resultMap>
  
  <resultMap id="AccountNotesCommitmentMap" type="com.s1.common.accounts.loan.dao.AccountNotes" >
    <id column="BNKACCTNOTEKY" property="oid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKACCTKY" property="bnkAcctOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKCOMMITMENTKY" property="commitmentOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKSUBCOMMITMENTKY" property="subCommitmentOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="COMMITMENT" property="commitmentNumber" jdbcType="VARCHAR" />
    <result column="SUBCOMMITMENT" property="subCommitmentNumber" jdbcType="VARCHAR"/>    
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
    <result column="UPDATEDTTM" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP" property="versionStamp" jdbcType="SMALLINT" />
  </resultMap>  
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.bnkAcctOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.commitmentOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.subCommitmentOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.bnkAcctOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.noteCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.commitmentOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.subCommitmentOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    BNKACCTNOTEKY, BNKACCTKY, BNKCOMMITMENTKY, BNKSUBCOMMITMENTKY, NOTE, UPDATEDTTM, 
    UPDATEUSER, VERSIONSTAMP
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.s1.common.accounts.loan.dao.AccountNotesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BNKACCTNOTE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="getByAccountOid" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
   
    select
    
    <include refid="Base_Column_List" />
    
    from BNKACCTNOTE
    where BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  
  <select id="getNoteCountByAccountOid" resultMap="AccountNotesCountResult" parameterType="com.s1.arch.utilities.ObjectId" >
   
    select
    
    count(distinct BNKACCTNOTEKY) as noteCount, BNKACCTKY as accountKy
    
    from BNKACCTNOTE
    where BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
    group by BNKACCTKY
  </select>
  
  <select id="getAccountNotesByAccountOid" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
   
    select
    
    <include refid="Base_Column_List" />
    
    from BNKACCTNOTE
    where BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
    and BNKCOMMITMENTKY is null and BNKSUBCOMMITMENTKY is null
    
  </select>
  
  <select id="getByCommitmentOid" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
   
    select
   
    <include refid="Base_Column_List" />
    
    from BNKACCTNOTE
    where BNKCOMMITMENTKY = #{commitmentOId,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
    and BNKSUBCOMMITMENTKY is null
  </select>
  
  <select id="getBySubCommitmentOid" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
   
    select
   
    <include refid="Base_Column_List" />
    
    from BNKACCTNOTE
    where BNKSUBCOMMITMENTKY = #{subCommitmentOId,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
    
    select 
    <include refid="Base_Column_List" />
    from BNKACCTNOTE
    where BNKACCTNOTEKY = #{noteOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    delete from BNKACCTNOTE
    where BNKACCTNOTEKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  <delete id="deleteByExample" parameterType="com.s1.common.accounts.loan.dao.AccountNotesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    delete from BNKACCTNOTE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <delete id="deleteByOid" parameterType="com.s1.arch.utilities.ObjectId" >
    
    delete from BNKACCTNOTE
    where BNKACCTNOTEKY = #{noteOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  
  <delete id="deleteByCommitmentOid" parameterType="com.s1.arch.utilities.ObjectId" >
    
    delete from BNKACCTNOTE
    where BNKCOMMITMENTKY = #{commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  
  <delete id="deleteBySubCommitmentOid" parameterType="com.s1.arch.utilities.ObjectId" >
    
    delete from BNKACCTNOTE
    where BNKSUBCOMMITMENTKY = #{subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  
  <delete id="deleteByAccountOid" parameterType="com.s1.arch.utilities.ObjectId" >
    
    delete from BNKACCTNOTE
    where BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  
  <delete id="deleteAccountLevelNotesByAccountOid" parameterType="com.s1.arch.utilities.ObjectId" >    
    delete from BNKACCTNOTE
    where BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
    AND  BNKCOMMITMENTKY  IS  NULL and BNKSUBCOMMITMENTKY IS NULL
  </delete>
  
  
  <insert id="insert" parameterType="com.s1.common.accounts.loan.dao.AccountNotes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    insert into BNKACCTNOTE (BNKACCTNOTEKY, 
      BNKACCTKY, 
      BNKCOMMITMENTKY, 
      BNKSUBCOMMITMENTKY, 
      NOTE, UPDATEDTTM, 
      UPDATEUSER, VERSIONSTAMP)
    values (#{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{note,jdbcType=VARCHAR}, #{updateDateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{versionStamp,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.s1.common.accounts.loan.dao.AccountNotes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    insert into BNKACCTNOTE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        BNKACCTNOTEKY,
      </if>
      <if test="bnkAcctOid != null" >
        BNKACCTKY,
      </if>
      <if test="commitmentOid != null" >
        BNKCOMMITMENTKY,
      </if>
      <if test="subCommitmentOid != null" >
        BNKSUBCOMMITMENTKY,
      </if>
      <if test="note != null" >
        NOTE,
      </if>
      <if test="updateDateTime != null" >
        UPDATEDTTM,
      </if>
      <if test="updateUser != null" >
        UPDATEUSER,
      </if>
      <if test="versionStamp != null" >
        VERSIONSTAMP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="bnkAcctOid != null" >
        #{bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="commitmentOid != null" >
        #{commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="subCommitmentOid != null" >
        #{subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="updateDateTime != null" >
        #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="versionStamp != null" >
        #{versionStamp,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.s1.common.accounts.loan.dao.AccountNotesExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    select count(*) from BNKACCTNOTE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    update BNKACCTNOTE
    <set >
      <if test="record.oid != null" >
        BNKACCTNOTEKY = #{record.oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.bnkAcctOid != null" >
        BNKACCTKY = #{record.bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.commitmentOid != null" >
        BNKCOMMITMENTKY = #{record.commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.subCommitmentOid != null" >
        BNKSUBCOMMITMENTKY = #{record.subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.note != null" >
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDateTime != null" >
        UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.versionStamp != null" >
        VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    update BNKACCTNOTE
    set BNKACCTNOTEKY = #{record.oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKACCTKY = #{record.bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKCOMMITMENTKY = #{record.commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKSUBCOMMITMENTKY = #{record.subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      NOTE = #{record.note,jdbcType=VARCHAR},
      UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.s1.common.accounts.loan.dao.AccountNotes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    update BNKACCTNOTE
    <set >
      <if test="bnkAcctOid != null" >
        BNKACCTKY = #{bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="commitmentOid != null" >
        BNKCOMMITMENTKY = #{commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="subCommitmentOid != null" >
        BNKSUBCOMMITMENTKY = #{subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="note != null" >
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="updateDateTime != null" >
        UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="versionStamp != null" >
        VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
      </if>
    </set>
    where BNKACCTNOTEKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.s1.common.accounts.loan.dao.AccountNotes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 28 11:44:37 IST 2013.
    -->
    update BNKACCTNOTE
    set BNKACCTKY = #{bnkAcctOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKCOMMITMENTKY = #{commitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKSUBCOMMITMENTKY = #{subCommitmentOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      NOTE = #{note,jdbcType=VARCHAR},
      UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT}
    where BNKACCTNOTEKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  
  <!-- This gives you the entitled loan notes for selected account -->
    
  <select id="getEntitledNotesPerAcctOid" resultMap="BaseResultMap" parameterType="com.s1.common.accounts.loan.criteria.LoanNoteCriteria" >
   
    select
   
    BNKACCTNOTE.BNKACCTNOTEKY, BNKACCTNOTE.BNKACCTKY, BNKACCTNOTE.BNKCOMMITMENTKY, BNKACCTNOTE.BNKSUBCOMMITMENTKY, BNKACCTNOTE.NOTE,
    BNKACCTNOTE.UPDATEDTTM, BNKACCTNOTE.UPDATEUSER, BNKACCTNOTE.VERSIONSTAMP
    
    from BNKACCTNOTE
    INNER JOIN ARCTarget  ON cast(BnkAcctNote.BnkAcctNoteKy as varchar(64)) = ARCTarget.NAME
	INNER JOIN ARCGRANT ON ARCTARGET.ARCTARGETKY = ARCGRANT.ARCTARGETKY
		Where BnkAcctNote.BnkAcctKy = #{acctOid} 
		<if test="loanNoteOId != null">
	 	    and BNKACCTNOTE.BNKACCTNOTEKY = #{loanNoteOId}
	 	</if>
		<if test="principalOid != null">
		 	and ARCGRANT.ARCPRINCIPALKY = #{principalOid}
		</if> 
  </select>
  

  <select id="getByAccountOidList" resultMap="BaseResultMap" parameterType="java.util.List" >
   
    select
    
    <include refid="Base_Column_List" />
    
    from BNKACCTNOTE
    where BNKACCTKY in
    <foreach item="item" index="index" collection="list"
      open="(" separator="," close=")">
        #{item}
  </foreach> 
  </select>

    <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="com.s1.common.accounts.loan.criteria.LoanNoteCriteria">
    select 
	    <include refid="Base_Column_List" />
    from BNKACCTNOTE 
    where 
         BNKACCTKY = #{acctOid}
        <if test="loanNote != null">
       		and NOTE = #{loanNote}
       </if> 
    </select>

  

  <select id="getEntitledNotesAcctOidList" resultMap="BaseResultMap" parameterType="java.util.List" >
   
    select
   
    BNKACCTNOTE.BNKACCTNOTEKY, BNKACCTNOTE.BNKACCTKY, BNKACCTNOTE.BNKCOMMITMENTKY, BNKACCTNOTE.BNKSUBCOMMITMENTKY, BNKACCTNOTE.NOTE,
    BNKACCTNOTE.UPDATEDTTM, BNKACCTNOTE.UPDATEUSER, BNKACCTNOTE.VERSIONSTAMP
    
    from BNKACCTNOTE
    INNER JOIN ARCTarget  ON cast(BnkAcctNote.BnkAcctNoteKy as varchar(64)) = ARCTarget.NAME
	INNER JOIN ARCGRANT ON ARCTARGET.ARCTARGETKY = ARCGRANT.ARCTARGETKY
		Where BnkAcctNote.BnkAcctKy in
		<foreach item="item" index="index" collection="list"
      open="(" separator="," close=")">
        #{item}
 		 </foreach>
		and ARCGRANT.ARCPRINCIPALKY = #{principalKy}
	 	
  </select>
  
  <select id="getNotesCommitmentInfoByOid" resultMap="AccountNotesCommitmentMap" parameterType="com.s1.arch.utilities.ObjectId" >
   
		select a.bnkacctnoteky, a.bnkacctky, a.bnkcommitmentky, a.bnksubcommitmentky, a.note, 
			a.updatedttm, a.updateuser, a.versionstamp, 
			b.commitment, c.subcommitment  
		from 			BNKACCTNOTE  a 
		left outer join BNKCOMMITMENT  b
		on (b.bnkcommitmentky = a.bnkcommitmentky)
		
		left outer join BNKSUBCOMMITMENT  c
		on (c.bnksubcommitmentky = a.bnksubcommitmentky)
		
		where a.bnkacctnoteky=#{noteOid}
	 	
  </select>
  

</mapper>