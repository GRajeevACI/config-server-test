<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.s1.common.accounts.statement.dao.CurrentDayStatementDetailMapper" >
  <resultMap id="BaseResultMap" type="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <id column="BNKCDYSTMTDETAILKY" property="oid" jdbcType="BIGINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKCDYSTMTKY" property="statementOid" jdbcType="BIGINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKAPPFLDDEFKY" property="bnkAppFldDefKy" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="APPFLDDEFVALUE" property="appFldDefinitionValue" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="EFFECTIVEDTTM" property="effectiveDateTime" jdbcType="TIMESTAMP" />
    <result column="EXPIRATIONDTTM" property="expirationDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEDTTM" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP" property="versionStamp" jdbcType="SMALLINT" />
    <result column="ITEMCOUNT" property="itemCount" jdbcType="INTEGER" />
    <result column="LOADDTTM" property="loadDateTime" jdbcType="TIMESTAMP" />
    <result column="BATAUDITKY" property="batchAuditOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="EFFECTIVEDTTM__" property="effectiveDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statementOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.bnkAppFldDefKyCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.batchAuditOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statementOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.bnkAppFldDefKyCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.batchAuditOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    BNKCDYSTMTDETAILKY, BNKCDYSTMTKY, BNKAPPFLDDEFKY, APPFLDDEFVALUE, DESCRIPTION, EFFECTIVEDTTM, 
    EXPIRATIONDTTM, UPDATEDTTM, UPDATEUSER, VERSIONSTAMP, ITEMCOUNT, LOADDTTM, BATAUDITKY, 
    EFFECTIVEDTTM__
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BNKCDYSTMTDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from BNKCDYSTMTDETAIL
    where BNKCDYSTMTDETAILKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    delete from BNKCDYSTMTDETAIL
    where BNKCDYSTMTDETAILKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  <delete id="deleteByExample" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    delete from BNKCDYSTMTDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <!--
 		EFFECTIVEDTTM__ is a generated always column. So removing it from the insert columns list.
    -->
    insert into BNKCDYSTMTDETAIL (BNKCDYSTMTDETAILKY, 
      BNKCDYSTMTKY, 
      BNKAPPFLDDEFKY, 
      APPFLDDEFVALUE, DESCRIPTION, EFFECTIVEDTTM, 
      EXPIRATIONDTTM, UPDATEDTTM, 
      UPDATEUSER, VERSIONSTAMP, ITEMCOUNT, 
      LOADDTTM, BATAUDITKY)
    values (#{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{appFldDefinitionValue,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{effectiveDateTime,jdbcType=TIMESTAMP}, 
      #{expirationDateTime,jdbcType=TIMESTAMP}, #{updateDateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{versionStamp,jdbcType=SMALLINT}, #{itemCount,jdbcType=INTEGER}, 
      #{loadDateTime,jdbcType=TIMESTAMP}, #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler})
  </insert>
  <insert id="insertSelective" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <!--
      EFFECTIVEDTTM__ is a generated always column. So removing it from the insert columns list.
    -->
    insert into BNKCDYSTMTDETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
        BNKCDYSTMTDETAILKY,
        BNKCDYSTMTKY,
        BNKAPPFLDDEFKY,
        APPFLDDEFVALUE,
        DESCRIPTION,
        EFFECTIVEDTTM,
        EXPIRATIONDTTM,
        UPDATEDTTM,
        UPDATEUSER,
        VERSIONSTAMP,
        ITEMCOUNT,
        LOADDTTM,
        BATAUDITKY,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{appFldDefinitionValue,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{effectiveDateTime,jdbcType=TIMESTAMP},
        #{expirationDateTime,jdbcType=TIMESTAMP},
        #{updateDateTime,jdbcType=TIMESTAMP},
        #{updateUser,jdbcType=VARCHAR},
        #{versionStamp,jdbcType=SMALLINT},
        #{itemCount,jdbcType=INTEGER},
        #{loadDateTime,jdbcType=TIMESTAMP},
        #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetailExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select count(*) from BNKCDYSTMTDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMTDETAIL
    <set >
      <if test="record.oid != null" >
        BNKCDYSTMTDETAILKY = #{record.oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.statementOid != null" >
        BNKCDYSTMTKY = #{record.statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.bnkAppFldDefKy != null" >
        BNKAPPFLDDEFKY = #{record.bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.appFldDefinitionValue != null" >
        APPFLDDEFVALUE = #{record.appFldDefinitionValue,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.effectiveDateTime != null" >
        EFFECTIVEDTTM = #{record.effectiveDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expirationDateTime != null" >
        EXPIRATIONDTTM = #{record.expirationDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDateTime != null" >
        UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.versionStamp != null" >
        VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      </if>
      <if test="record.itemCount != null" >
        ITEMCOUNT = #{record.itemCount,jdbcType=INTEGER},
      </if>
      <if test="record.loadDateTime != null" >
        LOADDTTM = #{record.loadDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.batchAuditOid != null" >
        BATAUDITKY = #{record.batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMTDETAIL
    set BNKCDYSTMTDETAILKY = #{record.oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKCDYSTMTKY = #{record.statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKAPPFLDDEFKY = #{record.bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      APPFLDDEFVALUE = #{record.appFldDefinitionValue,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      EFFECTIVEDTTM = #{record.effectiveDateTime,jdbcType=TIMESTAMP},
      EXPIRATIONDTTM = #{record.expirationDateTime,jdbcType=TIMESTAMP},
      UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      ITEMCOUNT = #{record.itemCount,jdbcType=INTEGER},
      LOADDTTM = #{record.loadDateTime,jdbcType=TIMESTAMP},
      BATAUDITKY = #{record.batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMTDETAIL
    <set >
        BNKCDYSTMTKY = #{statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        BNKAPPFLDDEFKY = #{bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        APPFLDDEFVALUE = #{appFldDefinitionValue,jdbcType=VARCHAR},
        DESCRIPTION = #{description,jdbcType=VARCHAR},
        EFFECTIVEDTTM = #{effectiveDateTime,jdbcType=TIMESTAMP},
        EXPIRATIONDTTM = #{expirationDateTime,jdbcType=TIMESTAMP},
        UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
        UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
        VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
        ITEMCOUNT = #{itemCount,jdbcType=INTEGER},
        LOADDTTM = #{loadDateTime,jdbcType=TIMESTAMP},
        BATAUDITKY = #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
    </set>
    where BNKCDYSTMTDETAILKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMTDETAIL
    set BNKCDYSTMTKY = #{statementOid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKAPPFLDDEFKY = #{bnkAppFldDefKy,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      APPFLDDEFVALUE = #{appFldDefinitionValue,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      EFFECTIVEDTTM = #{effectiveDateTime,jdbcType=TIMESTAMP},
      EXPIRATIONDTTM = #{expirationDateTime,jdbcType=TIMESTAMP},
      UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
      ITEMCOUNT = #{itemCount,jdbcType=INTEGER},
      LOADDTTM = #{loadDateTime,jdbcType=TIMESTAMP},
      BATAUDITKY = #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
    where BNKCDYSTMTDETAILKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
</mapper>