<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.s1.common.accounts.statement.dao.CurrentDayStatementMapper" >
  <resultMap id="BaseResultMap" type="com.s1.common.accounts.statement.model.CurrentDayStatement" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <id column="BNKCDYSTMTKY" property="oid" jdbcType="BIGINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKACCTKY" property="accountOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BATAUDITKY" property="batchAuditOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="STMTDTTM" property="statementDateTime" jdbcType="TIMESTAMP" />
    <result column="STMTDTTM__" property="statementDate" jdbcType="DATE" />
    <result column="UPDATEDTTM" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP" property="versionStamp" jdbcType="SMALLINT" />
    <result column="ISTRNPRESENT" property="isTransactionPresent" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
  </resultMap>
  
  <resultMap id="statementDetailMap" type="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" >
    <id column="BNKCDYSTMTDETAILKY" property="oid" jdbcType="BIGINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKCDYSTMTKY" property="statementOid" jdbcType="BIGINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="BNKAPPFLDDEFKY" property="bnkAppFldDefKy" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="APPFLDDEFVALUE" property="appFldDefinitionValue" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="EFFECTIVEDTTM" property="effectiveDateTime" jdbcType="TIMESTAMP" />
    <result column="EXPIRATIONDTTM" property="expirationDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEDTTM_FORDETAIL" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER_FORDETAIL" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP_FORDETAIL" property="versionStamp" jdbcType="SMALLINT" />
    <result column="ITEMCOUNT" property="itemCount" jdbcType="INTEGER" />
    <result column="LOADDTTM" property="loadDateTime" jdbcType="TIMESTAMP" />
    <result column="BATAUDITKY" property="batchAuditOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="EFFECTIVEDTTM__" property="effectiveDate" jdbcType="DATE" />
    <result column="fieldName" property="fieldName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="statementViewMap" extends="BaseResultMap" type="com.s1.common.accounts.statement.model.CurrentDayStatement">
    <!-- <result column="fieldName" property="fieldName" jdbcType="VARCHAR" /> -->
    <result column="STATEMENT_BATCHAUDIT_KY" property="batchAuditOid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
	<collection property="statementDetails" javaType="ArrayList" ofType="com.s1.common.accounts.statement.model.CurrentDayStatementDetail" resultMap="statementDetailMap"/>
  </resultMap>
  
  
   <select id="findByCustomer" parameterType="java.util.Map" resultMap="BaseResultMap">
	SELECT BNKCDyStmt.stmtDttm, BNKCDyStmt.BNKACCTKY FROM BNKCDyStmt WHERE
	BNKCDyStmt.BNKACCTKY in (SELECT A.BNKACCTKY FROM BNKACCT A, BNKCUSTACCT
	C,BNKPRODUCT E , BNKCustomer F
	WHERE A.BNKACCTKY = C.BNKACCTKY AND
	E.PRODUCTCODE = A.PRODUCTCODE AND
	F.BNKCustomerKy = C.CORCustomerKy AND
	E.CORORGkyFI = #{affiliateOid} AND
	C.CORCustomerKy = #{customerOid})
   </select>

  <select id="findStatementWithDetails" parameterType="java.util.Map" resultMap="statementViewMap">
	SELECT BNKCDyStmt.BNKCDyStmtKy,
	BNKCDyStmt.BNKAcctKy,
	BNKCDyStmt.stmtDttm,
	BNKCDyStmt.updateDttm,
	BNKCDyStmt.updateUser,
	BNKCDyStmt.BatAuditky as STATEMENT_BATCHAUDIT_KY,
	BNKCDyStmt.ISTRNPRESENT,
	BNKCDyStmt.versionStamp,
	BNKCDyStmtDetail.BNKCDyStmtDetailKy,
	BNKCDyStmtDetail.BNKCDyStmtKy,
	BNKCDyStmtDetail.BNKAppFldDefKy,
	BNKCDyStmtDetail.appFldDefValue,
	BNKCDyStmtDetail.description,
	BNKCDyStmtDetail.effectiveDttm,
	BNKCDyStmtDetail.expirationDttm,
	BNKCDyStmtDetail.itemcount,
	BNKCDyStmtDetail.updateDttm as UPDATEDTTM_FORDETAIL,
	BNKCDyStmtDetail.updateUser as UPDATEUSER_FORDETAIL,
	BNKCDyStmtDetail.versionStamp as VERSIONSTAMP_FORDETAIL,
	BNKAppFldDef.fieldName FROM BNKCDyStmt LEFT OUTER JOIN BNKCDyStmtDetail
	ON
	(BNKCDyStmt.BNKCDyStmtKy = BNKCDyStmtDetail.BNKCDyStmtKy AND
	BNKCDyStmtDetail.EFFECTIVEDTTM <![CDATA[ >=  ]]>
	#{fromDate,jdbcType=TIMESTAMP} AND BNKCDyStmtDetail.EFFECTIVEDTTM <![CDATA[ <=  ]]>
	#{toDate,jdbcType=TIMESTAMP})
	LEFT OUTER JOIN BNKAppFldDef
	ON
	BNKCDyStmtDetail.BNKAppFldDefKy = BNKAppFldDef.BNKAppFldDefKy WHERE
	BNKCDyStmt.bnkAcctKy = #{accountOid}
  </select>
  
	<!-- Syntax for declaring a temp table, this is not needed for oracle -->
	<sql id="declareTempTable">
		<if test="dbType == 'db2'">
		DECLARE GLOBAL TEMPORARY TABLE
		</if>
		<if test="dbType == 'oracle'">
		CREATE GLOBAL TEMPORARY TABLE
		</if>
		<if test="dbType == 'hsql'">
		CREATE GLOBAL TEMPORARY TABLE
		</if>
	</sql>
	
	<!-- Temporary table creation options -->
	<sql id="tempTableOptions">
		<if test="dbType == 'db2'">
		ON COMMIT PRESERVE ROWS
		NOT LOGGED
		ON ROLLBACK DELETE ROWS
		</if>
		<if test="dbType == 'oracle'">
		ON COMMIT PRESERVE ROWS
		</if>
		<if test="dbType == 'hsql'">
		ON COMMIT PRESERVE ROWS
		</if>
	</sql>
	
	<sql id="currentDayStatementTempTableNameDecl">
		<if test="dbType == 'db2'">BNKCDyStmtDgtt</if>
		<if test="dbType == 'oracle'">BNKCDyStmtDgtt</if>
		<if test="dbType == 'hsql'">BNKCDyStmtDgtt</if>
	</sql>
	
	<!--
	  Create temporary tables

		Expected contents of the parameter Map:
			Key						Required?	Expected Value
			===						=========	==============
			dbType					Yes			db2 or hsql
	  -->
	<update id="createStatementTempTable">
		<if test="dbType == 'db2' or dbType == 'hsql'">
			<include refid="declareTempTable" /> <include refid="currentDayStatementTempTableNameDecl" />
			(
				BNKCDyStmtKy		BIGINT			NOT NULL
			)
			<include refid="tempTableOptions" />
		</if>
		<if test="dbType == 'oracle'">
		   select 1 from dual
		</if>
	</update>
	
  	<!-- The name, as used in references, of the statement temp table -->
	<sql id="statementTempTableNameRef">
		<if test="dbType == 'db2'">SESSION.BNKCDyStmtDgtt</if>
		<if test="dbType == 'oracle'">BNKCDyStmtDgtt</if>
		<if test="dbType == 'hsql'">BNKCDyStmtDgtt</if>
	</sql>
	

	
	<insert id="populateStatementTempTable" parameterType="com.s1.arch.utilities.ObjectId">
		INSERT INTO <include refid="statementTempTableNameRef" />
			(BNKCDyStmtKy)
		VALUES (
			#{statementOid.id,jdbcType=BIGINT}
			)
	</insert>
	
	<update id="runstatsStatementTempTable" timeout="600" statementType="CALLABLE">
		<if test="dbType == 'db2'">
			CALL SYSPROC.ADMIN_CMD('RUNSTATS ON TABLE <include refid="statementTempTableNameRef"/> WITH DISTRIBUTION AND DETAILED INDEXES ALL')
				</if>	
		<if test="dbType == 'oracle'">
			CALL ADMIN_run_stat('<include refid="statementTempTableNameRef"/>')			
		</if>	
	</update>


	<!--
	  Drop temporary tables

		Expected contents of the parameter Map:
			Key						Required?	Expected Value
			===						=========	==============
			dbType					Yes			db2 or hsql
	  -->
	<update id="dropStatementTempTable" >
		<if test="dbType == 'db2'">
		DROP TABLE <include refid="statementTempTableNameRef" />
		</if>
		<if test="dbType == 'oracle'">
			 select 1 from dual
		</if>
		<if test="dbType == 'hsql'">
		DROP TABLE <include refid="statementTempTableNameRef" />
		</if>
	</update>
	
	
  <select id="findStatementDetailsByEffectiveDate" parameterType="java.util.Map" resultMap="statementDetailMap">
  
  		SELECT BNKCDYSTMTdetailKy, BNKAppflddefKy, a.BNKCDYSTMTKY from BNKCDYSTMTdetail a, <include refid="statementTempTableNameRef" /> b
  		WHERE a.BNKCDyStmtKy = b.BNKCDyStmtKy
 		AND a.EFFECTIVEDTTM <![CDATA[ >=  ]]> #{fromDate,jdbcType=TIMESTAMP}
		AND a.EFFECTIVEDTTM <![CDATA[ <=  ]]> #{toDate,jdbcType=TIMESTAMP}
 		
  </select>  	
  <select id="findStatementDetailsByEffectiveDate-Oracle" parameterType="java.util.Map" resultMap="statementDetailMap">
  
  		SELECT BNKCDYSTMTdetailKy, BNKAppflddefKy, a.BNKCDYSTMTKY from BNKCDYSTMTdetail a, <include refid="statementTempTableNameRef" /> b
  		WHERE a.BNKCDyStmtKy = b.BNKCDyStmtKy
 		AND TRUNC(a.EFFECTIVEDTTM) <![CDATA[ >=  ]]> #{fromDate,jdbcType=DATE}
		AND TRUNC(a.EFFECTIVEDTTM) <![CDATA[ <=  ]]> #{toDate,jdbcType=DATE}
 		
  </select>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.accountOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.batchAuditOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTransactionPresentCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.accountOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.batchAuditOidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTransactionPresentCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    BNKCDYSTMTKY, BNKACCTKY, BATAUDITKY, STMTDTTM, STMTDTTM__, UPDATEDTTM, UPDATEUSER, 
    VERSIONSTAMP, ISTRNPRESENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BNKCDYSTMT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from BNKCDYSTMT
    where BNKCDYSTMTKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    delete from BNKCDYSTMT
    where BNKCDYSTMTKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  <delete id="deleteByExample" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    delete from BNKCDYSTMT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

    <!--
      STMTDTTM__ is defined as generated always. So there isn't any need to specify this in the INSERT statement.
    -->
    
  <insert id="insert" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatement" >
    insert into BNKCDYSTMT (BNKCDYSTMTKY, 
      BNKACCTKY, 
      BATAUDITKY, 
      STMTDTTM, UPDATEDTTM, 
      UPDATEUSER, VERSIONSTAMP, ISTRNPRESENT
      )
    values (#{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{statementDateTime,jdbcType=TIMESTAMP}, #{updateDateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{versionStamp,jdbcType=SMALLINT}, #{isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
      )
  </insert>
  
    <!--
      STMTDTTM__ is defined as generated always. So there isn't any need to specify this in the INSERT statement.
    -->
    
  <insert id="insertSelective" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatement" >
    insert into BNKCDYSTMT
    <trim prefix="(" suffix=")" suffixOverrides="," >
        BNKCDYSTMTKY,
        BNKACCTKY,
        BATAUDITKY,
        STMTDTTM,
        UPDATEDTTM,
        UPDATEUSER,
        VERSIONSTAMP,
        ISTRNPRESENT,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        #{statementDateTime,jdbcType=TIMESTAMP},
        #{updateDateTime,jdbcType=TIMESTAMP},
        #{updateUser,jdbcType=VARCHAR},
        #{versionStamp,jdbcType=SMALLINT},
      <if test="isTransactionPresent != null" >
        #{isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
       <if test="isTransactionPresent == null" >
        0,
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatementExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    select count(*) from BNKCDYSTMT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMT
    <set >
      <if test="record.oid != null" >
        BNKCDYSTMTKY = #{record.oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.accountOid != null" >
        BNKACCTKY = #{record.accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.batchAuditOid != null" >
        BATAUDITKY = #{record.batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.statementDateTime != null" >
        STMTDTTM = #{record.statementDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statementDate != null" >
        STMTDTTM__ = #{record.statementDate,jdbcType=DATE},
      </if>
      <if test="record.updateDateTime != null" >
        UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.versionStamp != null" >
        VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      </if>
      <if test="record.isTransactionPresent != null" >
        ISTRNPRESENT = #{record.isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMT
    set BNKCDYSTMTKY = #{record.oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BNKACCTKY = #{record.accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BATAUDITKY = #{record.batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      STMTDTTM = #{record.statementDateTime,jdbcType=TIMESTAMP},
      UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      ISTRNPRESENT = #{record.isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatement" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMT
    <set >
        BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        BATAUDITKY = #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
        STMTDTTM = #{statementDateTime,jdbcType=TIMESTAMP},
        UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
        UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
        VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
        ISTRNPRESENT = #{isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
    </set>
    where BNKCDYSTMTKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.s1.common.accounts.statement.model.CurrentDayStatement" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 09 10:16:26 EDT 2012.
    -->
    update BNKCDYSTMT
    set BNKACCTKY = #{accountOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      BATAUDITKY = #{batchAuditOid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      STMTDTTM = #{statementDateTime,jdbcType=TIMESTAMP},
      STMTDTTM__ = #{statementDate,jdbcType=DATE},
      UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
      ISTRNPRESENT = #{isTransactionPresent,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
    where BNKCDYSTMTKY = #{oid,jdbcType=BIGINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
</mapper>