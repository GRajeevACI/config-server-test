<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.s1.common.classofservice.dao.FeatureMapper" >
  <resultMap id="BaseResultMap" type="com.s1.common.classofservice.dao.Feature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    <id column="BNKFEATUREKY" property="oid" jdbcType="INTEGER" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="FEATCD" property="featCd" jdbcType="SMALLINT" />
    <result column="FEATTYPECD" property="featTypeCd" jdbcType="SMALLINT" typeHandler="com.s1.arch.ibatis.ObjectIdTypeHandler" />
    <result column="FEATURENAME" property="featureName" jdbcType="VARCHAR" />
    <result column="FEATGRPMSGCDENUM" property="featureGroupMsgCdEnum" jdbcType="VARCHAR" />
    <result column="ISREQFEEENABLED" property="isReqFeeEnabled" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISDAILYLIMIT" property="isDailyLimit" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISTRNLIMIT" property="isTrnLimit" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISREQFEEPAYEETP" property="isReqFeePayeeTP" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISREQFEEPOSPAY" property="isReqFeePosPay" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISACHPAYMENT" property="isACHPayment" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISAUTHREQD" property="isAuthRequired" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISPSWDREQD" property="isPwdRequired" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISTMPLPSWDREQD" property="isTmplPwdRequired" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="FEATFUNCTIONCODE" property="featFunctionCd" jdbcType="VARCHAR" />
    <result column="ISDISBURSEMENT" property="isDisbursement" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISDEBITCREDIT" property="isDebitCredit" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="UPDATEDTTM" property="updateDateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEUSER" property="updateUser" jdbcType="VARCHAR" />
    <result column="VERSIONSTAMP" property="versionStamp" jdbcType="SMALLINT" />
    <result column="BASICWORKFLOWMSGCD" property="basicWorkflowMsgCd" jdbcType="VARCHAR" />
    <result column="ADVNCWORKFLOWMSGCD" property="advancesWorkflowMsgCd" jdbcType="VARCHAR" />
    <result column="ISDEFAULTPOSITION" property="isDefaultPosition" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
    <result column="ISTHRESHOLDAMT" property="isThreshholdAmount" jdbcType="CHAR" typeHandler="com.s1.arch.ibatis.ZeroOneBooleanTypeHandler" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.featTypeCdCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeeEnabledCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDailyLimitCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTrnLimitCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeePayeeTPCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeePosPayCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isACHPaymentCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isAuthRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isPwdRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTmplPwdRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDisbursementCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDebitCreditCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDefaultPositionCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isThreshholdAmountCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.oidCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.featTypeCdCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeeEnabledCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDailyLimitCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTrnLimitCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeePayeeTPCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReqFeePosPayCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isACHPaymentCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isAuthRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isPwdRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isTmplPwdRequiredCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDisbursementCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDebitCreditCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDefaultPositionCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isThreshholdAmountCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    BNKFEATUREKY, FEATCD, FEATTYPECD, FEATURENAME, FEATGRPMSGCDENUM, ISREQFEEENABLED, 
    ISDAILYLIMIT, ISTRNLIMIT, ISREQFEEPAYEETP, ISREQFEEPOSPAY, ISACHPAYMENT, ISAUTHREQD, 
    ISPSWDREQD, ISTMPLPSWDREQD, FEATFUNCTIONCODE, ISDISBURSEMENT, ISDEBITCREDIT, UPDATEDTTM, 
    UPDATEUSER, VERSIONSTAMP, BASICWORKFLOWMSGCD, ADVNCWORKFLOWMSGCD, ISDEFAULTPOSITION, 
    ISTHRESHOLDAMT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.s1.common.classofservice.dao.FeatureExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BNKFEATURE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from BNKFEATURE
    where BNKFEATUREKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.s1.arch.utilities.ObjectId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    delete from BNKFEATURE
    where BNKFEATUREKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </delete>
  <delete id="deleteByExample" parameterType="com.s1.common.classofservice.dao.FeatureExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    delete from BNKFEATURE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.s1.common.classofservice.dao.Feature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    insert into BNKFEATURE (BNKFEATUREKY, 
      FEATCD, FEATTYPECD, 
      FEATURENAME, FEATGRPMSGCDENUM, ISREQFEEENABLED, 
      ISDAILYLIMIT, 
      ISTRNLIMIT, 
      ISREQFEEPAYEETP, 
      ISREQFEEPOSPAY, 
      ISACHPAYMENT, 
      ISAUTHREQD, 
      ISPSWDREQD, 
      ISTMPLPSWDREQD, 
      FEATFUNCTIONCODE, ISDISBURSEMENT, 
      ISDEBITCREDIT, 
      UPDATEDTTM, UPDATEUSER, VERSIONSTAMP, 
      BASICWORKFLOWMSGCD, ADVNCWORKFLOWMSGCD, 
      ISDEFAULTPOSITION, 
      ISTHRESHOLDAMT
      )
    values (#{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{featCd,jdbcType=SMALLINT}, #{featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}, 
      #{featureName,jdbcType=VARCHAR}, #{featureGroupMsgCdEnum,jdbcType=VARCHAR}, #{isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{featFunctionCd,jdbcType=VARCHAR}, #{isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{updateDateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{versionStamp,jdbcType=SMALLINT}, 
      #{basicWorkflowMsgCd,jdbcType=VARCHAR}, #{advancesWorkflowMsgCd,jdbcType=VARCHAR}, 
      #{isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}, 
      #{isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.s1.common.classofservice.dao.Feature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    insert into BNKFEATURE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        BNKFEATUREKY,
      </if>
      <if test="featCd != null" >
        FEATCD,
      </if>
      <if test="featTypeCd != null" >
        FEATTYPECD,
      </if>
      <if test="featureName != null" >
        FEATURENAME,
      </if>
      <if test="featureGroupMsgCdEnum != null" >
        FEATGRPMSGCDENUM,
      </if>
      <if test="isReqFeeEnabled != null" >
        ISREQFEEENABLED,
      </if>
      <if test="isDailyLimit != null" >
        ISDAILYLIMIT,
      </if>
      <if test="isTrnLimit != null" >
        ISTRNLIMIT,
      </if>
      <if test="isReqFeePayeeTP != null" >
        ISREQFEEPAYEETP,
      </if>
      <if test="isReqFeePosPay != null" >
        ISREQFEEPOSPAY,
      </if>
      <if test="isACHPayment != null" >
        ISACHPAYMENT,
      </if>
      <if test="isAuthRequired != null" >
        ISAUTHREQD,
      </if>
      <if test="isPwdRequired != null" >
        ISPSWDREQD,
      </if>
      <if test="isTmplPwdRequired != null" >
        ISTMPLPSWDREQD,
      </if>
      <if test="featFunctionCd != null" >
        FEATFUNCTIONCODE,
      </if>
      <if test="isDisbursement != null" >
        ISDISBURSEMENT,
      </if>
      <if test="isDebitCredit != null" >
        ISDEBITCREDIT,
      </if>
      <if test="updateDateTime != null" >
        UPDATEDTTM,
      </if>
      <if test="updateUser != null" >
        UPDATEUSER,
      </if>
      <if test="versionStamp != null" >
        VERSIONSTAMP,
      </if>
      <if test="basicWorkflowMsgCd != null" >
        BASICWORKFLOWMSGCD,
      </if>
      <if test="advancesWorkflowMsgCd != null" >
        ADVNCWORKFLOWMSGCD,
      </if>
      <if test="isDefaultPosition != null" >
        ISDEFAULTPOSITION,
      </if>
      <if test="isThreshholdAmount != null" >
        ISTHRESHOLDAMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="featCd != null" >
        #{featCd,jdbcType=SMALLINT},
      </if>
      <if test="featTypeCd != null" >
        #{featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="featureName != null" >
        #{featureName,jdbcType=VARCHAR},
      </if>
      <if test="featureGroupMsgCdEnum != null" >
        #{featureGroupMsgCdEnum,jdbcType=VARCHAR},
      </if>
      <if test="isReqFeeEnabled != null" >
        #{isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isDailyLimit != null" >
        #{isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isTrnLimit != null" >
        #{isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isReqFeePayeeTP != null" >
        #{isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isReqFeePosPay != null" >
        #{isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isACHPayment != null" >
        #{isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isAuthRequired != null" >
        #{isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isPwdRequired != null" >
        #{isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isTmplPwdRequired != null" >
        #{isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="featFunctionCd != null" >
        #{featFunctionCd,jdbcType=VARCHAR},
      </if>
      <if test="isDisbursement != null" >
        #{isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isDebitCredit != null" >
        #{isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="updateDateTime != null" >
        #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="versionStamp != null" >
        #{versionStamp,jdbcType=SMALLINT},
      </if>
      <if test="basicWorkflowMsgCd != null" >
        #{basicWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="advancesWorkflowMsgCd != null" >
        #{advancesWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="isDefaultPosition != null" >
        #{isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isThreshholdAmount != null" >
        #{isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.s1.common.classofservice.dao.FeatureExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    select count(*) from BNKFEATURE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    update BNKFEATURE
    <set >
      <if test="record.oid != null" >
        BNKFEATUREKY = #{record.oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.featCd != null" >
        FEATCD = #{record.featCd,jdbcType=SMALLINT},
      </if>
      <if test="record.featTypeCd != null" >
        FEATTYPECD = #{record.featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="record.featureName != null" >
        FEATURENAME = #{record.featureName,jdbcType=VARCHAR},
      </if>
      <if test="record.featureGroupMsgCdEnum != null" >
        FEATGRPMSGCDENUM = #{record.featureGroupMsgCdEnum,jdbcType=VARCHAR},
      </if>
      <if test="record.isReqFeeEnabled != null" >
        ISREQFEEENABLED = #{record.isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isDailyLimit != null" >
        ISDAILYLIMIT = #{record.isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isTrnLimit != null" >
        ISTRNLIMIT = #{record.isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isReqFeePayeeTP != null" >
        ISREQFEEPAYEETP = #{record.isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isReqFeePosPay != null" >
        ISREQFEEPOSPAY = #{record.isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isACHPayment != null" >
        ISACHPAYMENT = #{record.isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isAuthRequired != null" >
        ISAUTHREQD = #{record.isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isPwdRequired != null" >
        ISPSWDREQD = #{record.isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isTmplPwdRequired != null" >
        ISTMPLPSWDREQD = #{record.isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.featFunctionCd != null" >
        FEATFUNCTIONCODE = #{record.featFunctionCd,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisbursement != null" >
        ISDISBURSEMENT = #{record.isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isDebitCredit != null" >
        ISDEBITCREDIT = #{record.isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.updateDateTime != null" >
        UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.versionStamp != null" >
        VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      </if>
      <if test="record.basicWorkflowMsgCd != null" >
        BASICWORKFLOWMSGCD = #{record.basicWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="record.advancesWorkflowMsgCd != null" >
        ADVNCWORKFLOWMSGCD = #{record.advancesWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefaultPosition != null" >
        ISDEFAULTPOSITION = #{record.isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="record.isThreshholdAmount != null" >
        ISTHRESHOLDAMT = #{record.isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    update BNKFEATURE
    set BNKFEATUREKY = #{record.oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      FEATCD = #{record.featCd,jdbcType=SMALLINT},
      FEATTYPECD = #{record.featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      FEATURENAME = #{record.featureName,jdbcType=VARCHAR},
      FEATGRPMSGCDENUM = #{record.featureGroupMsgCdEnum,jdbcType=VARCHAR},
      ISREQFEEENABLED = #{record.isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISDAILYLIMIT = #{record.isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTRNLIMIT = #{record.isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISREQFEEPAYEETP = #{record.isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISREQFEEPOSPAY = #{record.isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISACHPAYMENT = #{record.isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISAUTHREQD = #{record.isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISPSWDREQD = #{record.isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTMPLPSWDREQD = #{record.isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      FEATFUNCTIONCODE = #{record.featFunctionCd,jdbcType=VARCHAR},
      ISDISBURSEMENT = #{record.isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISDEBITCREDIT = #{record.isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      UPDATEDTTM = #{record.updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{record.updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{record.versionStamp,jdbcType=SMALLINT},
      BASICWORKFLOWMSGCD = #{record.basicWorkflowMsgCd,jdbcType=VARCHAR},
      ADVNCWORKFLOWMSGCD = #{record.advancesWorkflowMsgCd,jdbcType=VARCHAR},
      ISDEFAULTPOSITION = #{record.isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTHRESHOLDAMT = #{record.isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.s1.common.classofservice.dao.Feature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    update BNKFEATURE
    <set >
      <if test="featCd != null" >
        FEATCD = #{featCd,jdbcType=SMALLINT},
      </if>
      <if test="featTypeCd != null" >
        FEATTYPECD = #{featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      </if>
      <if test="featureName != null" >
        FEATURENAME = #{featureName,jdbcType=VARCHAR},
      </if>
      <if test="featureGroupMsgCdEnum != null" >
        FEATGRPMSGCDENUM = #{featureGroupMsgCdEnum,jdbcType=VARCHAR},
      </if>
      <if test="isReqFeeEnabled != null" >
        ISREQFEEENABLED = #{isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isDailyLimit != null" >
        ISDAILYLIMIT = #{isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isTrnLimit != null" >
        ISTRNLIMIT = #{isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isReqFeePayeeTP != null" >
        ISREQFEEPAYEETP = #{isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isReqFeePosPay != null" >
        ISREQFEEPOSPAY = #{isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isACHPayment != null" >
        ISACHPAYMENT = #{isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isAuthRequired != null" >
        ISAUTHREQD = #{isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isPwdRequired != null" >
        ISPSWDREQD = #{isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isTmplPwdRequired != null" >
        ISTMPLPSWDREQD = #{isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="featFunctionCd != null" >
        FEATFUNCTIONCODE = #{featFunctionCd,jdbcType=VARCHAR},
      </if>
      <if test="isDisbursement != null" >
        ISDISBURSEMENT = #{isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isDebitCredit != null" >
        ISDEBITCREDIT = #{isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="updateDateTime != null" >
        UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="versionStamp != null" >
        VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
      </if>
      <if test="basicWorkflowMsgCd != null" >
        BASICWORKFLOWMSGCD = #{basicWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="advancesWorkflowMsgCd != null" >
        ADVNCWORKFLOWMSGCD = #{advancesWorkflowMsgCd,jdbcType=VARCHAR},
      </if>
      <if test="isDefaultPosition != null" >
        ISDEFAULTPOSITION = #{isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
      <if test="isThreshholdAmount != null" >
        ISTHRESHOLDAMT = #{isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      </if>
    </set>
    where BNKFEATUREKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.s1.common.classofservice.dao.Feature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 24 15:17:54 EST 2014.
    -->
    update BNKFEATURE
    set FEATCD = #{featCd,jdbcType=SMALLINT},
      FEATTYPECD = #{featTypeCd,jdbcType=SMALLINT,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler},
      FEATURENAME = #{featureName,jdbcType=VARCHAR},
      FEATGRPMSGCDENUM = #{featureGroupMsgCdEnum,jdbcType=VARCHAR},
      ISREQFEEENABLED = #{isReqFeeEnabled,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISDAILYLIMIT = #{isDailyLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTRNLIMIT = #{isTrnLimit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISREQFEEPAYEETP = #{isReqFeePayeeTP,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISREQFEEPOSPAY = #{isReqFeePosPay,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISACHPAYMENT = #{isACHPayment,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISAUTHREQD = #{isAuthRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISPSWDREQD = #{isPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTMPLPSWDREQD = #{isTmplPwdRequired,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      FEATFUNCTIONCODE = #{featFunctionCd,jdbcType=VARCHAR},
      ISDISBURSEMENT = #{isDisbursement,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISDEBITCREDIT = #{isDebitCredit,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      UPDATEDTTM = #{updateDateTime,jdbcType=TIMESTAMP},
      UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      VERSIONSTAMP = #{versionStamp,jdbcType=SMALLINT},
      BASICWORKFLOWMSGCD = #{basicWorkflowMsgCd,jdbcType=VARCHAR},
      ADVNCWORKFLOWMSGCD = #{advancesWorkflowMsgCd,jdbcType=VARCHAR},
      ISDEFAULTPOSITION = #{isDefaultPosition,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler},
      ISTHRESHOLDAMT = #{isThreshholdAmount,jdbcType=CHAR,typeHandler=com.s1.arch.ibatis.ZeroOneBooleanTypeHandler}
    where BNKFEATUREKY = #{oid,jdbcType=INTEGER,typeHandler=com.s1.arch.ibatis.ObjectIdTypeHandler}
  </update>
  
  <select id="getMaxFeatCd" resultType="java.lang.Integer">
    SELECT
            max(featCD)
    FROM BNKFEATURE
 </select>
</mapper>