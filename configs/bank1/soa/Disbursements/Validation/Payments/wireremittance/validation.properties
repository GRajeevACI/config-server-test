validChars=^[a-zA-Z0-9\\u002E\\u003C\\u003E\\u0028\\u0029\\u0024\\u002D\\u003F\\u0040\\u0023\\u0021\\u0025\\u0026\\u0027\\u005F\\u005C\\u003A\\u003B\\u002C\\u007E\\u0022\\u003D\\u002F\\u002B\\u0060\\u0020]+$

validation.generateOrigBeneInfoRemittance.validator.fields=isTemplate,remittanceInfoType,origIdType,origIdCode,origName,origIdNumber,origIdNumberIssuer,\
origAddressType,origAddressLine1,origAddressLine2,origAddressLine3,beneName,isBeneficiaryIDInformation,beneIdType,beneIdCode,beneIdNumber,beneIdNumberIssuer,\
beneDatePlaceOfBirth,beneAddressType,beneAddressLine1,beneAddressLine2,beneAddressLine3,remittanceDocumentInfo

#validation.generateOrigBeneInfoRemittance.validator.isTemplate=
validation.generateOrigBeneInfoRemittance.validator.remittanceInfoType=required,validValuesCaseSensitive(Validation Parameter-RMTS|S|RRMT)
validation.generateOrigBeneInfoRemittance.validator.origIdType=required(Conditional Validation-isTemplate=false),validValuesCaseSensitive(Validation Parameter-OI)
validation.generateOrigBeneInfoRemittance.validator.origIdCode=required(Conditional Validation-isTemplate=false),validValuesCaseSensitive(Validation Parameter-BANK|CUST|DUNS|EMPL|PROP|GS1G|SWBB|TXID)
validation.generateOrigBeneInfoRemittance.validator.origName=required(Conditional Validation-isTemplate=false),lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.origIdNumber=required(Conditional Validation-isTemplate=false),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.origIdNumberIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.origAddressType=validValuesCaseSensitive(Validation Parameter-ADDR|BIZZ|DLVY|HOME|MLTO|PBOX)
validation.generateOrigBeneInfoRemittance.validator.origAddressLine1=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.origAddressLine2=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.origAddressLine3=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneName=required(Conditional Validation-isTemplate=false),lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
#validation.generateOrigBeneInfoRemittance.validator.isBeneficiaryIDInformation=
validation.generateOrigBeneInfoRemittance.validator.beneIdType=required(Conditional Validation-isTemplate=false*isBeneficiaryIDInformation=true),validValuesCaseSensitive(Validation Parameter-OI|PI)
validation.generateOrigBeneInfoRemittance.validator.beneIdCode=required(Conditional Validation-isTemplate=false*isBeneficiaryIDInformation=true),validValuesCaseSensitive(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdType=OI:Validation Parameter-BANK|CUST|DUNS|EMPL|PROP|GS1G|SWBB|TXID),validValuesCaseSensitive(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdType=PI:Validation Parameter-ARNU|CCPT|CUST|DPOB|DRLC|EMPL|NIDN|PROP|SOSE|TXID|BANK|DUNS|GS1G|SWBB)
validation.generateOrigBeneInfoRemittance.validator.beneIdNumber=required(Conditional Validation-isTemplate=false*beneIdType=OI*isBeneficiaryIDInformation=true),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneIdNumberIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneDatePlaceOfBirth=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdCode=DPOB),lengthValidation(Validation Parameter-max=82),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneAddressType=validValuesCaseSensitive(Validation Parameter-ADDR|BIZZ|DLVY|HOME|MLTO|PBOX)
validation.generateOrigBeneInfoRemittance.validator.beneAddressLine1=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneAddressLine2=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateOrigBeneInfoRemittance.validator.beneAddressLine3=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)

validation.generateRemittanceDocInfo.validator.fields=remittanceDocumentInfo,remittanceDocumentInfo.isTemplate,remittanceDocumentInfo.docSeqNumber,remittanceDocumentInfo.primaryDocTypeCode,\
remittanceDocumentInfo.primaryProprietaryDocTypeCode,remittanceDocumentInfo.primaryDocIdNumber,remittanceDocumentInfo.primaryIssuer,\
remittanceDocumentInfo.remittanceDocDate,remittanceDocumentInfo.freeTextLine1,remittanceDocumentInfo.freeTextLine2,remittanceDocumentInfo.freeTextLine3,\
remittanceDocumentInfo.invoiceAmount,remittanceDocumentInfo.invoiceAmount.amount,remittanceDocumentInfo.invoiceAmount.currency,\
remittanceDocumentInfo.originalInvoiceAmount,remittanceDocumentInfo.originalInvoiceAmount.amount,remittanceDocumentInfo.originalInvoiceAmount.currency,\
remittanceDocumentInfo.discountAmount,remittanceDocumentInfo.discountAmount.amount,remittanceDocumentInfo.discountAmount.currency,\
remittanceDocumentInfo.isAdjustmentInformation,remittanceDocumentInfo.adjustmentReasonCode,remittanceDocumentInfo.crDrIndicator,\
remittanceDocumentInfo.adjustmentAmount,remittanceDocumentInfo.adjustmentAmount.amount,remittanceDocumentInfo.adjustmentAmount.currency,\
remittanceDocumentInfo.additionalInfo,remittanceDocumentInfo.isSecondaryDocumentRemittance,remittanceDocumentInfo.secondaryDocTypeCode,\
remittanceDocumentInfo.secondaryProprietaryDocTypeCode,remittanceDocumentInfo.secondaryDocIdNumber,remittanceDocumentInfo.secondaryIssuer

##validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.isTemplate=
#validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.docSeqNumber=
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo=required
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.primaryDocTypeCode=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false),validValuesCaseSensitive(Validation Parameter-AROI|BOLD|CINV|CMCN|CNFA|CREN|DEBN|DISP|DNFA|HIRI|MSIN|PROP|PUOR|SBIN|SOAC|TSUT|VCHR)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.primaryProprietaryDocTypeCode=required(Conditional Validation-remittanceDocumentInfo.primaryDocTypeCode=PROP),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.primaryDocIdNumber=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.primaryIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.remittanceDocDate=regExValidation(Validation Parameter-regexkey=validChars),remittanceDocDateValidator
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.freeTextLine1=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.freeTextLine2=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.freeTextLine3=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.invoiceAmount=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.invoiceAmount.amount=required(Conditional Validation-remittanceDocumentInfo.invoiceAmount*remittanceDocumentInfo.isTemplate=false),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=remittanceDocumentInfo.invoiceAmount.currency)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.invoiceAmount.currency=required(Conditional Validation-remittanceDocumentInfo.invoiceAmount*remittanceDocumentInfo.isTemplate=false),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.originalInvoiceAmount.amount=required(Conditional Validation-remittanceDocumentInfo.originalInvoiceAmount),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=remittanceDocumentInfo.originalInvoiceAmount.currency)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.originalInvoiceAmount.currency=required(Conditional Validation-remittanceDocumentInfo.originalInvoiceAmount),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.discountAmount.amount=required(Conditional Validation-remittanceDocumentInfo.discountAmount),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=remittanceDocumentInfo.discountAmount.currency)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.discountAmount.currency=required(Conditional Validation-remittanceDocumentInfo.discountAmount),currencyValidator(Validation Parameter-property=alpha3Code)
#validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.isAdjustmentInformation=
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.adjustmentReasonCode=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.isAdjustmentInformation=true),validValues(Validation Parameter-01|03|04|05|06|07|11|12|59|75|81|CM)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.crDrIndicator=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.isAdjustmentInformation=true),validValuesCaseSensitive(Validation Parameter-DBIT|CRDT)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.adjustmentAmount=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.isAdjustmentInformation=true)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.adjustmentAmount.amount=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.adjustmentAmount*remittanceDocumentInfo.isAdjustmentInformation=true),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=remittanceDocumentInfo.adjustmentAmount.currency)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.adjustmentAmount.currency=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.adjustmentAmount*remittanceDocumentInfo.isAdjustmentInformation=true),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.additionalInfo=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
#validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.isSecondaryDocumentRemittance=
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.secondaryDocTypeCode=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.isSecondaryDocumentRemittance=true),validValuesCaseSensitive(Validation Parameter-AROI|DISP|FXDR|PROP|PUOR|RADM|RPIN|SCOR|VCHR)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.secondaryProprietaryDocTypeCode=required(Conditional Validation-remittanceDocumentInfo.secondaryDocTypeCode=PROP),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.secondaryDocIdNumber=required(Conditional Validation-remittanceDocumentInfo.isTemplate=false*remittanceDocumentInfo.isSecondaryDocumentRemittance=true),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittanceDocInfo.validator.remittanceDocumentInfo.secondaryIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)

validation.generateRemittance.validator.fields=remittanceInfo.remittanceInfoType,remittanceInfo.structuredRemittanceInfo,\
remittanceInfo.unStructuredRemittanceInfo,remittanceInfo.relatedRemittanceInfo,remittanceInfo.unStructuredRemittanceInfo.localInstrCode,remittanceInfo.unStructuredRemittanceInfo.addendaInformation,\
remittanceInfo.relatedRemittanceInfo.identification,remittanceInfo.relatedRemittanceInfo.locationMethod,remittanceInfo.relatedRemittanceInfo.locationAddress,\
remittanceInfo.structuredRemittanceInfo.isTemplate,remittanceInfo.structuredRemittanceInfo.origIdType,remittanceInfo.structuredRemittanceInfo.origIdCode,remittanceInfo.structuredRemittanceInfo.origName,remittanceInfo.structuredRemittanceInfo.origIdNumber,\
remittanceInfo.structuredRemittanceInfo.origIdNumberIssuer,remittanceInfo.structuredRemittanceInfo.origAddressType,remittanceInfo.structuredRemittanceInfo.origAddressLine1,\
remittanceInfo.structuredRemittanceInfo.origAddressLine2,remittanceInfo.structuredRemittanceInfo.origAddressLine3,remittanceInfo.structuredRemittanceInfo.beneName,\
remittanceInfo.structuredRemittanceInfo.isBeneficiaryIDInformation,remittanceInfo.structuredRemittanceInfo.beneIdType,remittanceInfo.structuredRemittanceInfo.beneIdCode,\
remittanceInfo.structuredRemittanceInfo.beneIdNumber,remittanceInfo.structuredRemittanceInfo.beneIdNumberIssuer,remittanceInfo.structuredRemittanceInfo.beneDatePlaceOfBirth,\
remittanceInfo.structuredRemittanceInfo.beneAddressType,remittanceInfo.structuredRemittanceInfo.beneAddressLine1,remittanceInfo.structuredRemittanceInfo.beneAddressLine2,\
remittanceInfo.structuredRemittanceInfo.beneAddressLine3,remittanceInfo.structuredRemittanceInfo.remittanceDocumentInfo

validation.generateRemittance.validator.remittanceInfo.remittanceInfoType=required,validValuesCaseSensitive(Validation Parameter-RMTS|S|RRMT)

#UnStructured Remittance
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo=required(Conditional Validation-remittanceInfo.remittanceInfoType=RMTS)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origIdType=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false),validValuesCaseSensitive(Validation Parameter-OI)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origIdCode=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false),validValuesCaseSensitive(Validation Parameter-BANK|CUST|DUNS|EMPL|PROP|GS1G|SWBB|TXID)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origName=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false),lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origIdNumber=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origIdNumberIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origAddressType=validValuesCaseSensitive(Validation Parameter-ADDR|BIZZ|DLVY|HOME|MLTO|PBOX)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origAddressLine1=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origAddressLine2=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.origAddressLine3=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneName=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false),lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneIdType=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false*remittanceInfo.structuredRemittanceInfo.isBeneficiaryIDInformation=true),validValuesCaseSensitive(Validation Parameter-OI|PI)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneIdCode=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false*remittanceInfo.structuredRemittanceInfo.isBeneficiaryIDInformation=true),validValuesCaseSensitive(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdType=OI:Validation Parameter-BANK|CUST|DUNS|EMPL|PROP|GS1G|SWBB|TXID),validValuesCaseSensitive(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdType=PI:Validation Parameter-ARNU|CCPT|CUST|DPOB|DRLC|EMPL|NIDN|PROP|SOSE|TXID|BANK|DUNS|GS1G|SWBB)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneIdNumber=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false*remittanceInfo.structuredRemittanceInfo.beneIdType=OI*remittanceInfo.structuredRemittanceInfo.isBeneficiaryIDInformation=true),required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdCode=OI),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneIdNumberIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneDatePlaceOfBirth=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.beneIdCode=DPOB),lengthValidation(Validation Parameter-max=82),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneAddressType=validValuesCaseSensitive(Validation Parameter-ADDR|BIZZ|DLVY|HOME|MLTO|PBOX)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneAddressLine1=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneAddressLine2=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.beneAddressLine3=lengthValidation(Validation Parameter-max=70),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.remittanceDocumentInfo=required(Conditional Validation-remittanceInfo.structuredRemittanceInfo.isTemplate=false)

validation.generateRemittance.validator.remittanceInfo.structuredRemittanceInfo.remittanceDocumentInfo.fields=isTemplate,docSeqNumber,primaryDocTypeCode,\
primaryProprietaryDocTypeCode,primaryDocIdNumber,primaryIssuer,remittanceDocDate,freeTextLine1,freeTextLine2,freeTextLine3,invoiceAmount,invoiceAmount.amount,\
invoiceAmount.currency,originalInvoiceAmount,originalInvoiceAmount.amount,originalInvoiceAmount.currency,discountAmount,discountAmount.amount,discountAmount.currency,isAdjustmentInformation,\
adjustmentReasonCode,crDrIndicator,adjustmentAmount,adjustmentAmount.amount,adjustmentAmount.currency,additionalInfo,isSecondaryDocumentRemittance,secondaryDocTypeCode,\
secondaryProprietaryDocTypeCode,secondaryDocIdNumber,secondaryIssuer

#validation.generateRemittance.validator.docSeqNumber=
validation.generateRemittance.validator.primaryDocTypeCode=required(Conditional Validation-isTemplate=false),validValuesCaseSensitive(Validation Parameter-AROI|BOLD|CINV|CMCN|CNFA|CREN|DEBN|DISP|DNFA|HIRI|MSIN|PROP|PUOR|SBIN|SOAC|TSUT|VCHR)
validation.generateRemittance.validator.primaryProprietaryDocTypeCode=required(Conditional Validation-primaryDocTypeCode=PROP),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.primaryDocIdNumber=required(Conditional Validation-isTemplate=false),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.primaryIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.remittanceDocDate=regExValidation(Validation Parameter-regexkey=validChars),remittanceDocDateValidator
validation.generateRemittance.validator.freeTextLine1=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.freeTextLine2=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.freeTextLine3=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.invoiceAmount=required(Conditional Validation-isTemplate=false)
validation.generateRemittance.validator.invoiceAmount.amount=required(Conditional Validation-invoiceAmount*isTemplate=false),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=invoiceAmount.currency)
validation.generateRemittance.validator.invoiceAmount.currency=required(Conditional Validation-invoiceAmount*isTemplate=false),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittance.validator.originalInvoiceAmount.amount=required(Conditional Validation-originalInvoiceAmount),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=originalInvoiceAmount.currency)
validation.generateRemittance.validator.originalInvoiceAmount.currency=required(Conditional Validation-originalInvoiceAmount),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittance.validator.discountAmount.amount=required(Conditional Validation-discountAmount),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99)
validation.generateRemittance.validator.discountAmount.currency=required(Conditional Validation-discountAmount),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittance.validator.adjustmentReasonCode=required(Conditional Validation-isTemplate=false*isAdjustmentInformation=true),validValues(Validation Parameter-01|03|04|05|06|07|11|12|59|75|81|CM)
validation.generateRemittance.validator.crDrIndicator=required(Conditional Validation-isTemplate=false*isAdjustmentInformation=true),validValuesCaseSensitive(Validation Parameter-DBIT|CRDT)
validation.generateRemittance.validator.adjustmentAmount=required(Conditional Validation-isTemplate=false*isAdjustmentInformation=true)
validation.generateRemittance.validator.adjustmentAmount.amount=required(Conditional Validation-adjustmentAmount*isTemplate=false*isAdjustmentInformation=true),bigDecimalValidator(Validation Parameter-min=0.01|max=9999999999.99|currency=adjustmentAmount.currency)
validation.generateRemittance.validator.adjustmentAmount.currency=required(Conditional Validation-adjustmentAmount*isTemplate=false*isAdjustmentInformation=true),currencyValidator(Validation Parameter-property=alpha3Code)
validation.generateRemittance.validator.additionalInfo=lengthValidation(Validation Parameter-max=140),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.secondaryDocTypeCode=required(Conditional Validation-isTemplate=false*isSecondaryDocumentRemittance=true),validValuesCaseSensitive(Validation Parameter-AROI|DISP|FXDR|PROP|PUOR|RADM|RPIN|SCOR|VCHR)
validation.generateRemittance.validator.secondaryProprietaryDocTypeCode=required(Conditional Validation-secondaryDocTypeCode=PROP),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.secondaryDocIdNumber=required(Conditional Validation-isTemplate=false*isSecondaryDocumentRemittance=true),lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)
validation.generateRemittance.validator.secondaryIssuer=lengthValidation(Validation Parameter-max=35),regExValidation(Validation Parameter-regexkey=validChars)


#UnStructured Remittance
validation.generateRemittance.validator.remittanceInfo.unStructuredRemittanceInfo=required(Conditional Validation-remittanceInfo.remittanceInfoType=S)
validation.generateRemittance.validator.remittanceInfo.unStructuredRemittanceInfo.localInstrCode=required(Conditional Validation-remittanceInfo.remittanceInfoType=S),validValuesCaseSensitive(Validation Parameter-ANSI|GXML|IXML|NARR|S820|SWIF|UEDI)
validation.generateRemittance.validator.remittanceInfo.unStructuredRemittanceInfo.addendaInformation=required(Conditional Validation-remittanceInfo.unStructuredRemittanceInfo.isTemplate=false),lengthValidation(Validation Parameter-max=900),regExValidation(Validation Parameter-regexkey=validChars)

#Related Remittance
validation.generateRemittance.validator.remittanceInfo.relatedRemittanceInfo=required(Conditional Validation-remittanceInfo.remittanceInfoType=RRMT)
validation.generateRemittance.validator.remittanceInfo.relatedRemittanceInfo.identification=required(Conditional Validation-remittanceInfo.relatedRemittanceInfo.isTemplate=false),lengthValidation(Validation Parameter-max=35)
validation.generateRemittance.validator.remittanceInfo.relatedRemittanceInfo.locationMethod=required(Conditional Validation-remittanceInfo.relatedRemittanceInfo.isTemplate=false),validValuesCaseSensitive(Validation Parameter-EDIC|EMAL|FAXI|POST|SMSM|URID)
validation.generateRemittance.validator.remittanceInfo.relatedRemittanceInfo.locationAddress=lengthValidation(Validation Parameter-max=600),regExValidation(Validation Parameter-regexkey=validChars)

#DataReferenceList
validation.getIDCode.validator.fields=type
validation.getIDCode.validator.type=required,validValuesCaseSensitive(Validation Parameter-org|private)

#RemittanceInfo
validation.parseRemittance.validator.fields=remittanceString
validation.parseRemittance.validator.remittanceString=required

validation.generateRemittance.validator.fields=remittanceInfo
validation.generateRemittance.validator.remittanceInfo=required
