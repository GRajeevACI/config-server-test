# When adding a regex special character to a regex as a literal, ensure double escaping is utilized, otherwise the pattern will not function as designed.
PhoneNumberRegex=^[0-9]+$

validation.createUser.validator.fields=customerIdent,user,user.password,user.confirmPassword,user.userIdent,user.sourceUserIdent,\
user.contactDetails,user.contactDetails.name,user.contactDetails.name.givenName,user.contactDetails.name.familyName,user.contactDetails.name.middleName,user.contactDetails.name.nameSuffix,\
user.contactDetails.emailAddress,user.contactDetails.faxNumber.phoneNumber,user.contactDetails.faxNumber.country,user.contactDetails.phoneNumbers,\
user.preferredLanguage,user.accessSchedule.accessSchedule,user.accessSchedule.holdDateRange,user.accessSchedule.holdDateRange.from,user.accessSchedule.holdDateRange.to,\
user.groups,\
user.accessControl.approvalPrivileges,user.accessControl.userLimit,user.accessControl.fileAccess,user.accessControl.privilegeLevel,user.accessControl.approvalType
validation.createUser.validator.customerIdent=required
validation.createUser.validator.user=required
validation.createUser.validator.user.password=required,passwordValidator
validation.createUser.validator.user.confirmPassword=required,confirmPasswordValidator
validation.createUser.validator.user.userIdent=required,userIdValidator,dupUserIdValidator
validation.createUser.validator.user.sourceUserIdent=required(Conditional Validation-user.copyToNew=true),copySourceUserValidator(Conditional Validation-user.copyToNew=true)
validation.createUser.validator.user.contactDetails=required
validation.createUser.validator.user.contactDetails.name=required
validation.createUser.validator.user.contactDetails.name.givenName=required,lengthValidation(Validation Parameter-max=35)
validation.createUser.validator.user.contactDetails.name.familyName=required,lengthValidation(Validation Parameter-max=35)
validation.createUser.validator.user.contactDetails.name.middleName=lengthValidation(Validation Parameter-max=10)
validation.createUser.validator.user.contactDetails.name.nameSuffix=validValues(Validation Parameter-JR|SR|III|IV|V:Error Message Parameter-nameSuffix)
validation.createUser.validator.user.contactDetails.emailAddress=required,emailValidator
validation.createUser.validator.user.contactDetails.faxNumber.phoneNumber=required(Conditional Validation-user.contactDetails.faxNumber),regExValidation(Validation Parameter-regexkey=PhoneNumberRegex),lengthValidation(Validation Parameter-max=32)
validation.createUser.validator.user.contactDetails.faxNumber.country=required(Conditional Validation-user.contactDetails.faxNumber),countryValidator(Validation Parameter-2)
validation.createUser.validator.user.preferredLanguage=required,languageValidator
validation.createUser.validator.user.accessSchedule.accessSchedule=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true)
validation.createUser.validator.user.accessSchedule.holdDateRange.from=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.createUser.validator.user.accessSchedule.holdDateRange.to=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.createUser.validator.user.accessSchedule.holdDateRange=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true),holdDateRangeValidator(Conditional Validation-user.accessSchedule.fullAccess=false)
validation.createUser.validator.user.groups=groupNamesValidator
validation.createUser.validator.user.accessControl.approvalPrivileges=entitlementCheckValidator(Validation Parameter-flow=user),userApprovalValidator
validation.createUser.validator.user.accessControl.userLimit=entitlementCheckValidator(Validation Parameter-flow=user),userLimitValidator(Validation Parameter-min=0|max=9999999999999999.99)
validation.createUser.validator.user.accessControl.fileAccess=entitlementCheckValidator(Validation Parameter-flow=user),fileAccessValidator
validation.createUser.validator.user.accessControl.privilegeLevel=required,validValues(Validation Parameter-CUSTOM|NONE|FULL:Error Message Parameter-privilegeLevel)
validation.createUser.validator.user.accessControl.approvalType=required,validValues(Validation Parameter-NO_Approvals|CUSTOM_Approvals:Error Message Parameter-approvalType)

validation.createUser.validator.user.contactDetails.phoneNumbers.fields=type,phoneNumber.phoneNumber,phoneNumber.country
validation.createUser.validator.type=required,validValues(Validation Parameter-PRIMARY|SECONDARY|MOBILE)
validation.createUser.validator.phoneNumber.phoneNumber=required,regExValidation(Validation Parameter-regexkey=PhoneNumberRegex:Error Message Parameter-type),lengthValidation(Validation Parameter-max=32:Error Message Parameter-type)
validation.createUser.validator.phoneNumber.country=required,countryValidator(Validation Parameter-2:Error Message Parameter-type)

validation.createUser.validator.user.accessSchedule.accessSchedule.fields=dayCode,timeRange,timeRange.from,timeRange.to
validation.createUser.validator.dayCode=required,validValues(Validation Parameter-SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|HOLIDAY:Error Message Parameter-dayCode)
validation.createUser.validator.timeRange=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false),timeRangeValidator(Error Message Parameter-dayCode)
validation.createUser.validator.timeRange.from=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)
validation.createUser.validator.timeRange.to=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)


validation.modifyUser.validator.fields=customerIdent,user,user.userIdent,user.sourceUserIdent,\
user.contactDetails,user.contactDetails.name,user.contactDetails.name.givenName,user.contactDetails.name.familyName,user.contactDetails.name.middleName,user.contactDetails.name.nameSuffix,\
user.contactDetails.emailAddress,user.contactDetails.faxNumber.phoneNumber,user.contactDetails.faxNumber.country,user.contactDetails.phoneNumbers,\
user.preferredLanguage,user.accessSchedule.accessSchedule,user.accessSchedule.holdDateRange,user.accessSchedule.holdDateRange.from,user.accessSchedule.holdDateRange.to,\
user.groups,\
user.accessControl.approvalPrivileges,user.accessControl.userLimit,user.accessControl.fileAccess,user.accessControl.privilegeLevel,user.accessControl.approvalType,\
user.GSSOUserDetails
validation.modifyUser.validator.customerIdent=required
validation.modifyUser.validator.user=required
validation.modifyUser.validator.user.password=required,passwordValidator
validation.modifyUser.validator.user.confirmPassword=required,confirmPasswordValidator
validation.modifyUser.validator.user.userIdent=required,userIdValidator,userIdExistsValidator,copyTargetUserValidator(Conditional Validation-user.copyToExisting=true)
validation.modifyUser.validator.user.sourceUserIdent=required(Conditional Validation-user.copyToExisting=true),copySourceUserValidator(Conditional Validation-user.copyToExisting=true)
validation.modifyUser.validator.user.contactDetails=required
validation.modifyUser.validator.user.contactDetails.name=required
validation.modifyUser.validator.user.contactDetails.name.givenName=required,lengthValidation(Validation Parameter-max=35)
validation.modifyUser.validator.user.contactDetails.name.familyName=required,lengthValidation(Validation Parameter-max=35)
validation.modifyUser.validator.user.contactDetails.name.middleName=lengthValidation(Validation Parameter-max=10)
validation.modifyUser.validator.user.contactDetails.name.nameSuffix=validValues(Validation Parameter-JR|SR|III|IV|V:Error Message Parameter-nameSuffix)
validation.modifyUser.validator.user.contactDetails.emailAddress=required,emailValidator
validation.modifyUser.validator.user.contactDetails.faxNumber.phoneNumber=required(Conditional Validation-user.contactDetails.faxNumber),regExValidation(Validation Parameter-regexkey=PhoneNumberRegex),lengthValidation(Validation Parameter-max=32)
validation.modifyUser.validator.user.contactDetails.faxNumber.country=required(Conditional Validation-user.contactDetails.faxNumber),countryValidator(Validation Parameter-2)
validation.modifyUser.validator.user.preferredLanguage=required,languageValidator
validation.modifyUser.validator.user.accessSchedule.accessSchedule=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true)
validation.modifyUser.validator.user.accessSchedule.holdDateRange.from=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.modifyUser.validator.user.accessSchedule.holdDateRange.to=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.modifyUser.validator.user.accessSchedule.holdDateRange=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true),holdDateRangeValidator(Conditional Validation-user.accessSchedule.fullAccess=false)
validation.modifyUser.validator.user.groups=groupNamesValidator
validation.modifyUser.validator.user.accessControl.approvalPrivileges=entitlementCheckValidator(Validation Parameter-flow=user),userApprovalValidator
validation.modifyUser.validator.user.accessControl.userLimit=entitlementCheckValidator(Validation Parameter-flow=user),userLimitValidator(Validation Parameter-min=0|max=9999999999999999.99)
validation.modifyUser.validator.user.accessControl.fileAccess=entitlementCheckValidator(Validation Parameter-flow=user),fileAccessValidator
validation.modifyUser.validator.user.accessControl.privilegeLevel=required,validValues(Validation Parameter-CUSTOM|NONE|FULL:Error Message Parameter-privilegeLevel)
validation.modifyUser.validator.user.accessControl.approvalType=required,validValues(Validation Parameter-NO_Approvals|CUSTOM_Approvals:Error Message Parameter-approvalType)

validation.modifyUser.validator.user.contactDetails.phoneNumbers.fields=type,phoneNumber.phoneNumber,phoneNumber.country
validation.modifyUser.validator.type=required,validValues(Validation Parameter-PRIMARY|SECONDARY|MOBILE)
validation.modifyUser.validator.phoneNumber.phoneNumber=required,regExValidation(Validation Parameter-regexkey=PhoneNumberRegex:Error Message Parameter-type),lengthValidation(Validation Parameter-max=32:Error Message Parameter-type)
validation.modifyUser.validator.phoneNumber.country=required,countryValidator(Validation Parameter-2:Error Message Parameter-type)

validation.modifyUser.validator.user.accessSchedule.accessSchedule.fields=dayCode,timeRange,timeRange.from,timeRange.to
validation.modifyUser.validator.dayCode=required,validValues(Validation Parameter-SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|HOLIDAY:Error Message Parameter-dayCode)
validation.modifyUser.validator.timeRange=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false),timeRangeValidator(Error Message Parameter-dayCode)
validation.modifyUser.validator.timeRange.from=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)
validation.modifyUser.validator.timeRange.to=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)

validation.modifyUser.validator.user.GSSOUserDetails=gssoUserDetailsValidator

validation.approveUser.validator.fields=customerIdent,userIdent
validation.approveUser.validator.customerIdent=required
validation.approveUser.validator.userIdent=required

validation.rejectUser.validator.fields=customerIdent,userIdent
validation.rejectUser.validator.customerIdent=required
validation.rejectUser.validator.userIdent=required

validation.removeUser.validator.fields=customerIdent,userIdent
validation.removeUser.validator.customerIdent=required
validation.removeUser.validator.userIdent=required

validation.userDetailInquiry.validator.fields=customerIdent,userIdent
validation.userDetailInquiry.validator.customerIdent=required
validation.userDetailInquiry.validator.userIdent=required,userIdExistsValidator

validation.userSummaryInquiry.validator.fields=criteria,criteria.customerIdent,pagination
validation.userSummaryInquiry.validator.criteria=required
validation.userSummaryInquiry.validator.criteria.customerIdent=required
validation.userSummaryInquiry.validator.pagination=required

# Manage functional entitlements
validation.manageFunctionalPrivilege.validator.fields=userIdent,customerIdent,privileges
validation.manageFunctionalPrivilege.validator.userIdent=required,userIdExistsValidator
validation.manageFunctionalPrivilege.validator.customerIdent=required
validation.manageFunctionalPrivilege.validator.privileges=entitlementCheckValidator(Validation Parameter-flow=user),userFunctionalValidator

#Functional entitlements for User
validation.functionalPrivilegeInquiry.validator.fields=userIdent,customerIdent
validation.functionalPrivilegeInquiry.validator.userIdent=required,userIdExistsValidator
validation.functionalPrivilegeInquiry.validator.customerIdent=required

#Data service Inquiry
validation.dataServiceInquiry.validator.fields=customerIdent,userIdent
validation.dataServiceInquiry.validator.customerIdent=required
validation.dataServiceInquiry.validator.userIdent=required,userIdExistsValidator

#Manage Data Services
validation.manageDataServices.validator.fields=customerIdent,userIdent,privileges
validation.manageDataServices.validator.customerIdent=required
validation.manageDataServices.validator.userIdent=required,userIdExistsValidator
validation.manageDataServices.validator.privileges=entitlementCheckValidator(Validation Parameter-flow=user),dataServiceValidator

validation.manageDefaultScreen.validator.fields=customerIdent,userIdent,defaultScreen
validation.manageDefaultScreen.validator.customerIdent=required
validation.manageDefaultScreen.validator.userIdent=required,authUserIdValidator
validation.manageDefaultScreen.validator.defaultScreen=required,validValues(Validation Parameter-1|6|7|9|11:Error Message Parameter-defaultScreen)

validation.defaultScreenInquiry.validator.fields=customerIdent,userIdent
validation.defaultScreenInquiry.validator.customerIdent=required
validation.defaultScreenInquiry.validator.userIdent=required,authUserIdValidator

validation.manageAccountPrivilege.validator.fields=userIdent,customerIdent,privileges
validation.manageAccountPrivilege.validator.userIdent=required,userIdExistsValidator
validation.manageAccountPrivilege.validator.customerIdent=required
validation.manageAccountPrivilege.validator.privileges=required,entitlementCheckValidator(Validation Parameter-flow=user),entitlementAccountValidator
validation.manageAccountPrivilege.validator.privileges.fields=privilegeLevel,accountInfo,accountInfo.accountIdent.primaryIdent,accountInfo.currency,accountInfo.financialInstitution,accountInfo.financialInstitution.ident,accountInfo.hostProductCode
validation.manageAccountPrivilege.validator.privilegeLevel=required(Error Message Parameter-accountInfo.accountIdent.primaryIdent),validValues(Validation Parameter-CUSTOM|FULL|NONE:Error Message Parameter-accountInfo.accountIdent.primaryIdent)
validation.manageAccountPrivilege.validator.accountInfo=required
validation.manageAccountPrivilege.validator.accountInfo.accountIdent.primaryIdent=required(Error Message Parameter-accountInfo.financialInstitution.ident),regExValidation(Validation Parameter-regexkey=AlphaNumericSpecialBackSlash:Error Message Parameter-accountInfo.accountIdent.primaryIdent)
validation.manageAccountPrivilege.validator.accountInfo.currency=required(Error Message Parameter-accountInfo.accountIdent.primaryIdent)
validation.manageAccountPrivilege.validator.accountInfo.financialInstitution=required(Error Message Parameter-accountInfo.accountIdent.primaryIdent)
validation.manageAccountPrivilege.validator.accountInfo.financialInstitution.ident=required(Error Message Parameter-accountInfo.accountIdent.primaryIdent)
validation.manageAccountPrivilege.validator.accountInfo.hostProductCode=required(Error Message Parameter-accountInfo.accountIdent.primaryIdent)

validation.approvalsPrivilegeInquiry.validator.fields=userIdent
validation.approvalsPrivilegeInquiry.validator.userIdent=required,userIdExistsValidator

validation.accessScheduleInquiry.validator.fields=userIdent
validation.accessScheduleInquiry.validator.userIdent=required,userIdExistsValidator

validation.accountPrivilegeSummaryInquiry.validator.fields=userIdent,customerIdent,pagination
validation.accountPrivilegeSummaryInquiry.validator.userIdent=required,userIdValidator,userIdExistsValidator
validation.accountPrivilegeSummaryInquiry.validator.customerIdent=required
validation.accountPrivilegeSummaryInquiry.validator.pagination=required

validation.accountPrivilegeDetailInquiry.validator.fields=userIdent,customerIdent
validation.accountPrivilegeDetailInquiry.validator.userIdent=required,userIdExistsValidator
validation.accountPrivilegeDetailInquiry.validator.customerIdent=required

validation.validateBasicInfo.validator.fields=customerIdent,user,\
,user.contactDetails,user.contactDetails.name,user.contactDetails.name.givenName,user.contactDetails.name.familyName,user.contactDetails.name.middleName,user.contactDetails.name.nameSuffix,\
user.contactDetails.emailAddress,user.contactDetails,user.contactDetails.faxNumber.phoneNumber,user.contactDetails.faxNumber.country,user.contactDetails.phoneNumbers

validation.validateBasicInfo.validator.customerIdent=required
validation.validateBasicInfo.validator.user=required
validation.validateBasicInfo.validator.user.contactDetails=required
validation.validateBasicInfo.validator.user.contactDetails.name=required
validation.validateBasicInfo.validator.user.contactDetails.name.givenName=required,lengthValidation(Validation Parameter-max=35)
validation.validateBasicInfo.validator.user.contactDetails.name.familyName=required,lengthValidation(Validation Parameter-max=35)
validation.validateBasicInfo.validator.user.contactDetails.name.middleName=lengthValidation(Validation Parameter-max=10)
validation.validateBasicInfo.validator.user.contactDetails.name.nameSuffix=validValues(Validation Parameter-JR|SR|III|IV|V:Error Message Parameter-nameSuffix)
validation.validateBasicInfo.validator.user.contactDetails.emailAddress=required,emailValidator
validation.validateBasicInfo.validator.user.contactDetails.faxNumber.phoneNumber=required(Conditional Validation-user.contactDetails.faxNumber),regExValidation(Validation Parameter-regexkey=PhoneNumberRegex),lengthValidation(Validation Parameter-max=32)
validation.validateBasicInfo.validator.user.contactDetails.faxNumber.country=required(Conditional Validation-user.contactDetails.faxNumber),countryValidator(Validation Parameter-2)
validation.validateBasicInfo.validator.user.contactDetails.phoneNumbers.fields=type,phoneNumber.phoneNumber,phoneNumber.country
validation.validateBasicInfo.validator.type=required,validValues(Validation Parameter-PRIMARY|SECONDARY|MOBILE)
validation.validateBasicInfo.validator.phoneNumber.phoneNumber=required,regExValidation(Validation Parameter-regexkey=PhoneNumberRegex:Error Message Parameter-type),lengthValidation(Validation Parameter-max=32:Error Message Parameter-type)
validation.validateBasicInfo.validator.phoneNumber.country=required,countryValidator(Validation Parameter-2:Error Message Parameter-type)

validation.validatePasswordInfo.validator.fields=user.userIdent,user.password,user.confirmPassword,user.preferredLanguage,user.preferredLanguage,user.externalAuthenticationIdent
validation.validatePasswordInfo.validator.user.confirmPassword=required,confirmPasswordValidator
validation.validatePasswordInfo.validator.user.userIdent=required,userIdValidator,dupUserIdValidator
validation.validatePasswordInfo.validator.user.password=required,passwordValidator
validation.validatePasswordInfo.validator.user.preferredLanguage=required,languageValidator
validation.validatePasswordInfo.validator.user.externalAuthenticationIdent=regExValidation(Validation Parameter-regexkey=AlphaNum)

validation.validateAccessSchedule.validator.fields=user.accessSchedule.accessSchedule,user.accessSchedule.holdDateRange,user.accessSchedule.holdDateRange.from,user.accessSchedule.holdDateRange.to
validation.validateAccessSchedule.validator.user.accessSchedule.accessSchedule.fields=dayCode,timeRange,timeRange.from,timeRange.to
validation.validateAccessSchedule.validator.dayCode=required,validValues(Validation Parameter-SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|HOLIDAY:Error Message Parameter-dayCode)
validation.validateAccessSchedule.validator.timeRange=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false),timeRangeValidator(Error Message Parameter-dayCode)
validation.validateAccessSchedule.validator.timeRange.from=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)
validation.validateAccessSchedule.validator.timeRange.to=required(Conditional Validation-access=true),notRequiredValidator(Conditional Validation-access=false)

validation.validateAccessSchedule.validator.user.accessSchedule.accessSchedule=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true)
validation.validateAccessSchedule.validator.user.accessSchedule.holdDateRange.from=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.validateAccessSchedule.validator.user.accessSchedule.holdDateRange.to=required(Conditional Validation-user.accessSchedule.holdDateRange|user.accessSchedule.fullAccess=false)
validation.validateAccessSchedule.validator.user.accessSchedule.holdDateRange=notRequiredValidator(Conditional Validation-user.accessSchedule.fullAccess=true),holdDateRangeValidator(Conditional Validation-user.accessSchedule.fullAccess=false)
validation.validateAccessSchedule.validator.user.groups=groupNamesValidator

validation.validateUserIdInfo.validator.fields=user.preferredLanguage,user.preferredLanguage,user.externalAuthenticationIdent
validation.validateUserIdInfo.validator.user.userIdent=required,userIdValidator
validation.validateUserIdInfo.validator.user.preferredLanguage=required,languageValidator
validation.validateUserIdInfo.validator.user.externalAuthenticationIdent=regExValidation(Validation Parameter-regexkey=AlphaNum)

validation.validateUserApprovals.validator.fields=user.accessControl.approvalPrivileges
validation.validateUserApprovals.validator.user.accessControl.approvalPrivileges=entitlementCheckValidator(Validation Parameter-flow=user),userApprovalValidator

validation.validateUserLimits.validator.fields=user.accessControl.userLimit
validation.validateUserLimits.validator.user.accessControl.userLimit=entitlementCheckValidator(Validation Parameter-flow=user),userLimitValidator(Validation Parameter-min=0|max=9999999999999999.99)

validation.validateUserFileAccess.validator.fields=user.accessControl.fileAccess
validation.validateUserFileAccess.validator.user.accessControl.fileAccess=entitlementCheckValidator(Validation Parameter-flow=user),fileAccessValidator

validation.validateCopy.validator.fields=sourceUserIdent,targetUserIdent,copyToNew,copyToExisting
validation.validateCopy.validator.sourceUserIdent=required,copySourceUserValidator
validation.validateCopy.validator.targetUserIdent=notRequiredValidator(Conditional Validation-copyToNew=true),copyTargetUserValidator(Conditional Validation-copyToExisting=true)

validation.limitsInquiry.validator.fields=userIdent
validation.limitsInquiry.validator.userIdent=required,userIdExistsValidator

validation.efdAccessInquiry.validator.fields=userIdent
validation.efdAccessInquiry.validator.userIdent=required,userIdExistsValidator


validation.gssoGenerateGUID.validator.fields=customerIdent,userIdent,providerIdent
validation.gssoGenerateGUID.validator.customerIdent=required,validateCustomerUser(Validation Parameter-verify=customerId)
validation.gssoGenerateGUID.validator.userIdent=required
validation.gssoGenerateGUID.validator.providerIdent=required,validateSSOID

validation.modifyUser.validator.user.accessControl.privilegeLevel=checkFreeUserEditValidator(Conditional Validation-user.accessControl.privilegeLevel=NONE:Validation Parameter-flow=user)